
=======================cline==========================
==A%=1
==
scan_cline:
check_line:
check_assignment:
check_variable:
check_vname 'A%=1
':
check_vname ret1 '%=1
':
check_variable: '%=1
'
check_variable: Ary test '=1
'
check_literal:lit='(' ' =1
'
check_literal:After drop space:'(' '=1
'
  '(' != '='
ret0
check_variable:ret1 vname='˝	%' is str:0 int:1 flt:0 ary:0
check_literal:lit=' =' ' =1
'
    dropping space
check_literal:After drop space:'=' '=1
'
check_literal:After while():1

ret1
check_expression: '1
'
check_eitem:
check_operator: 1

check_literal:lit=',' ' 1
'
check_literal:After drop space:',' '1
'
  ',' != '1'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 1
'
    dropping space
check_literal:After drop space:'"' '1
'
  '"' != '1'
ret0
check_number:
check_float:
isfloatdigit:
check_expression:ret1 '1
'
scan_cline: Checked len=5, 'A%=1
'
scan_line:
check_assignment:
check_variable:
check_vname 'A%=1
':
check_vname ret1 '%=1
':
check_variable: '%=1
'
check_variable: Ary test '=1
'
check_literal:lit='(' ' =1
'
check_literal:After drop space:'(' '=1
'
  '(' != '='
ret0
check_variable:ret1 vname='Ä≠˚ê~%' is str:0 int:1 flt:0 ary:0
check_literal:lit=' =' ' =1
'
    dropping space
check_literal:After drop space:'=' '=1
'
check_literal:After while():1

ret1
check_expression: '1
'
check_eitem:
check_operator: 1

check_literal:lit=',' ' 1
'
check_literal:After drop space:',' '1
'
  ',' != '1'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 1
'
    dropping space
check_literal:After drop space:'"' '1
'
  '"' != '1'
ret0
check_number:
check_float:
isfloatdigit:
check_expression:ret1 '1
'
scan_assignment:
scan_variable:
scan_vname: 'A%=1
'
scan_vname: ret1 'A'
scan_variable: '%=1
'
scan_variable: Ary test '=1
'
check_literal:lit='(' ' =1
'
check_literal:After drop space:'(' '=1
'
  '(' != '='
ret0
scan_variable:ret1 vname='A%' is str:0 int:1 flt:0 ary:0
scan_literal:lit=' =' '=1
'
scan_literal:After drop space:=1

scan_literal:while loop:=1

scan_expression: '1
'
check_eitem:
check_operator: 1

check_literal:lit=',' ' 1
'
check_literal:After drop space:',' '1
'
  ',' != '1'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 1
'
    dropping space
check_literal:After drop space:'"' '1
'
  '"' != '1'
ret0
check_number:
check_float:
isfloatdigit:
scan_eitem:
check_operator: 1

check_literal:lit=',' ' 1
'
check_literal:After drop space:',' '1
'
  ',' != '1'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 1
'
    dropping space
check_literal:After drop space:'"' '1
'
  '"' != '1'
ret0
check_number:
check_float:
isfloatdigit:
scan_atom:
check_literal:lit=' "' ' 1
'
    dropping space
check_literal:After drop space:'"' '1
'
  '"' != '1'
ret0
check_number:
check_float:
isfloatdigit:
scan_number:
check_float:
isfloatdigit:
scan_float:
isfloatdigit:
isfloatdigit:
check_eitem:
check_operator: 

check_literal:lit=',' ' '
check_literal:After drop space:',' ''
  ret0 Empty test string
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 
'
    dropping space
check_literal:After drop space:'"' ''
  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname '
':
check_vname ret0 '':
check_sub_expr:
check_literal:lit=' (' ' 
'
    dropping space
check_literal:After drop space:'(' ''
  ret0 Empty test string
check_sub_expr: ret0
scan_expression: ret1 '
'
scan_assignment: ret1
check_literal:lit=':' ' '
check_literal:After drop space:':' ''
  ret0 Empty test string
cline scanned OK
=======================cline==========================
==POKEB 180,64
==
scan_cline:
check_line:
check_assignment:
check_variable:
check_vname 'POKEB 180,64
':
check_vname ret1 ' 180,64
':
check_variable: ' 180,64
'
check_variable: Ary test ' 180,64
'
check_literal:lit='(' '  180,64
'
check_literal:After drop space:'(' ' 180,64
'
  '(' != ' '
ret0
check_variable:ret1 vname='@˘g¸' is str:0 int:0 flt:1 ary:0
check_literal:lit=' =' '  180,64
'
    dropping space
check_literal:After drop space:'=' '180,64
'
  '=' != '1'
ret0
check_command:
check_command: ret1=> 'POKEB'
scan_cline: Checked len=13, 'POKEB 180,64
'
scan_line:
check_assignment:
check_variable:
check_vname 'POKEB 180,64
':
check_vname ret1 ' 180,64
':
check_variable: ' 180,64
'
check_variable: Ary test ' 180,64
'
check_literal:lit='(' '  180,64
'
check_literal:After drop space:'(' ' 180,64
'
  '(' != ' '
ret0
check_variable:ret1 vname='@∞b–ê~' is str:0 int:0 flt:1 ary:0
check_literal:lit=' =' '  180,64
'
    dropping space
check_literal:After drop space:'=' '180,64
'
  '=' != '1'
ret0
check_command:
check_command: ret1=> 'POKEB'
scan_line:check_command:1 
scan_command:
scan_expression: ' 180,64
'
check_eitem:
check_operator: 180,64

check_literal:lit=',' ' 180,64
'
check_literal:After drop space:',' '180,64
'
  ',' != '1'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 180,64
'
    dropping space
check_literal:After drop space:'"' '180,64
'
  '"' != '1'
ret0
check_number:
check_float:
isfloatdigit:
scan_eitem:
check_operator: 180,64

check_literal:lit=',' ' 180,64
'
check_literal:After drop space:',' '180,64
'
  ',' != '1'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 180,64
'
    dropping space
check_literal:After drop space:'"' '180,64
'
  '"' != '1'
ret0
check_number:
check_float:
isfloatdigit:
scan_atom:
check_literal:lit=' "' ' 180,64
'
    dropping space
check_literal:After drop space:'"' '180,64
'
  '"' != '1'
ret0
check_number:
check_float:
isfloatdigit:
scan_number:
check_float:
isfloatdigit:
scan_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_eitem:
check_operator: ,64

check_literal:lit=',' ' ,64
'
check_literal:After drop space:',' ',64
'
check_literal:After while():64

ret1
scan_literal:lit=',' ',64
'
scan_literal:After drop space:,64

scan_literal:while loop:,64

scan_eitem:
check_operator: 64

check_literal:lit=',' ' 64
'
check_literal:After drop space:',' '64
'
  ',' != '6'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 64
'
    dropping space
check_literal:After drop space:'"' '64
'
  '"' != '6'
ret0
check_number:
check_float:
isfloatdigit:
scan_atom:
check_literal:lit=' "' ' 64
'
    dropping space
check_literal:After drop space:'"' '64
'
  '"' != '6'
ret0
check_number:
check_float:
isfloatdigit:
scan_number:
check_float:
isfloatdigit:
scan_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_eitem:
check_operator: 

check_literal:lit=',' ' '
check_literal:After drop space:',' ''
  ret0 Empty test string
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 
'
    dropping space
check_literal:After drop space:'"' ''
  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname '
':
check_vname ret0 '':
check_sub_expr:
check_literal:lit=' (' ' 
'
    dropping space
check_literal:After drop space:'(' ''
  ret0 Empty test string
check_sub_expr: ret0
scan_expression: ret1 '
'
scan_command: ret1 =>'POKEB'
check_literal:lit=':' ' '
check_literal:After drop space:':' ''
  ret0 Empty test string
cline scanned OK
=======================cline==========================
==DO
==
scan_cline:
check_line:
check_assignment:
check_variable:
check_vname 'DO
':
check_vname ret1 '
':
check_variable: '
'
check_variable: Ary test '
'
check_literal:lit='(' ' 
'
check_literal:After drop space:'(' '
'
  '(' != '
'
ret0
check_variable:ret1 vname='`˘g¸' is str:0 int:0 flt:1 ary:0
check_literal:lit=' =' ' 
'
    dropping space
check_literal:After drop space:'=' ''
  ret0 Empty test string
check_command:
check_literal:lit=' LOCAL' ' DO
'
    dropping space
check_literal:After drop space:'LOCAL' 'DO
'
  'L' != 'D'
ret0
check_literal:lit=' GLOBAL' ' DO
'
    dropping space
check_literal:After drop space:'GLOBAL' 'DO
'
  'G' != 'D'
ret0
check_literal:lit=' IF' ' DO
'
    dropping space
check_literal:After drop space:'IF' 'DO
'
  'I' != 'D'
ret0
check_literal:lit=' ELSE' ' DO
'
    dropping space
check_literal:After drop space:'ELSE' 'DO
'
  'E' != 'D'
ret0
check_literal:lit=' ENDIF' ' DO
'
    dropping space
check_literal:After drop space:'ENDIF' 'DO
'
  'E' != 'D'
ret0
check_literal:lit=' DO' ' DO
'
    dropping space
check_literal:After drop space:'DO' 'DO
'
check_literal:After while():

ret1
scan_cline: Checked len=3, 'DO
'
scan_line:
check_assignment:
check_variable:
check_vname 'DO
':
check_vname ret1 '
':
check_variable: '
'
check_variable: Ary test '
'
check_literal:lit='(' ' 
'
check_literal:After drop space:'(' '
'
  '(' != '
'
ret0
check_variable:ret1 vname='@∞b–ê~' is str:0 int:0 flt:1 ary:0
check_literal:lit=' =' ' 
'
    dropping space
check_literal:After drop space:'=' ''
  ret0 Empty test string
check_command:
check_literal:lit=' LOCAL' ' DO
'
    dropping space
check_literal:After drop space:'LOCAL' 'DO
'
  'L' != 'D'
ret0
check_literal:lit=' GLOBAL' ' DO
'
    dropping space
check_literal:After drop space:'GLOBAL' 'DO
'
  'G' != 'D'
ret0
check_literal:lit=' IF' ' DO
'
    dropping space
check_literal:After drop space:'IF' 'DO
'
  'I' != 'D'
ret0
check_literal:lit=' ELSE' ' DO
'
    dropping space
check_literal:After drop space:'ELSE' 'DO
'
  'E' != 'D'
ret0
check_literal:lit=' ENDIF' ' DO
'
    dropping space
check_literal:After drop space:'ENDIF' 'DO
'
  'E' != 'D'
ret0
check_literal:lit=' DO' ' DO
'
    dropping space
check_literal:After drop space:'DO' 'DO
'
check_literal:After while():

ret1
scan_literal:lit=' DO' 'DO
'
scan_literal:After drop space:DO

scan_literal:while loop:DO

scan_literal:while loop:O

check_literal:lit=':' ' '
check_literal:After drop space:':' ''
  ret0 Empty test string
cline scanned OK
=======================cline==========================
== POKEB 181,U%(A%)
==
scan_cline:
check_line:
check_assignment:
check_variable:
check_vname 'POKEB 181,U%(A%)
':
check_vname ret1 ' 181,U%(A%)
':
check_variable: ' 181,U%(A%)
'
check_variable: Ary test ' 181,U%(A%)
'
check_literal:lit='(' '  181,U%(A%)
'
check_literal:After drop space:'(' ' 181,U%(A%)
'
  '(' != ' '
ret0
check_variable:ret1 vname='`˘g¸' is str:0 int:0 flt:1 ary:0
check_literal:lit=' =' '  181,U%(A%)
'
    dropping space
check_literal:After drop space:'=' '181,U%(A%)
'
  '=' != '1'
ret0
check_command:
check_command: ret1=> 'POKEB'
scan_cline: Checked len=17, 'POKEB 181,U%(A%)
'
scan_line:
check_assignment:
check_variable:
check_vname 'POKEB 181,U%(A%)
':
check_vname ret1 ' 181,U%(A%)
':
check_variable: ' 181,U%(A%)
'
check_variable: Ary test ' 181,U%(A%)
'
check_literal:lit='(' '  181,U%(A%)
'
check_literal:After drop space:'(' ' 181,U%(A%)
'
  '(' != ' '
ret0
check_variable:ret1 vname='@∞b–ê~' is str:0 int:0 flt:1 ary:0
check_literal:lit=' =' '  181,U%(A%)
'
    dropping space
check_literal:After drop space:'=' '181,U%(A%)
'
  '=' != '1'
ret0
check_command:
check_command: ret1=> 'POKEB'
scan_line:check_command:1 
scan_command:
scan_expression: ' 181,U%(A%)
'
check_eitem:
check_operator: 181,U%(A%)

check_literal:lit=',' ' 181,U%(A%)
'
check_literal:After drop space:',' '181,U%(A%)
'
  ',' != '1'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 181,U%(A%)
'
    dropping space
check_literal:After drop space:'"' '181,U%(A%)
'
  '"' != '1'
ret0
check_number:
check_float:
isfloatdigit:
scan_eitem:
check_operator: 181,U%(A%)

check_literal:lit=',' ' 181,U%(A%)
'
check_literal:After drop space:',' '181,U%(A%)
'
  ',' != '1'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 181,U%(A%)
'
    dropping space
check_literal:After drop space:'"' '181,U%(A%)
'
  '"' != '1'
ret0
check_number:
check_float:
isfloatdigit:
scan_atom:
check_literal:lit=' "' ' 181,U%(A%)
'
    dropping space
check_literal:After drop space:'"' '181,U%(A%)
'
  '"' != '1'
ret0
check_number:
check_float:
isfloatdigit:
scan_number:
check_float:
isfloatdigit:
scan_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_eitem:
check_operator: ,U%(A%)

check_literal:lit=',' ' ,U%(A%)
'
check_literal:After drop space:',' ',U%(A%)
'
check_literal:After while():U%(A%)

ret1
scan_literal:lit=',' ',U%(A%)
'
scan_literal:After drop space:,U%(A%)

scan_literal:while loop:,U%(A%)

scan_eitem:
check_operator: U%(A%)

check_literal:lit=',' ' U%(A%)
'
check_literal:After drop space:',' 'U%(A%)
'
  ',' != 'U'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' U%(A%)
'
    dropping space
check_literal:After drop space:'"' 'U%(A%)
'
  '"' != 'U'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'U%(A%)
':
check_vname ret1 '%(A%)
':
check_variable: '%(A%)
'
check_variable: Ary test '(A%)
'
check_literal:lit='(' ' (A%)
'
check_literal:After drop space:'(' '(A%)
'
check_literal:After while():A%)

ret1
check_variable: is array
check_expression: 'A%)
'
check_eitem:
check_operator: A%)

check_literal:lit=',' ' A%)
'
check_literal:After drop space:',' 'A%)
'
  ',' != 'A'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' A%)
'
    dropping space
check_literal:After drop space:'"' 'A%)
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'A%)
':
check_vname ret1 '%)
':
check_variable: '%)
'
check_variable: Ary test ')
'
check_literal:lit='(' ' )
'
check_literal:After drop space:'(' ')
'
  '(' != ')'
ret0
check_variable:ret1 vname='ˆg¸%' is str:0 int:1 flt:0 ary:0
check_expression:ret1 'A%)
'
check_literal:lit=' ,' ' A%)
'
    dropping space
check_literal:After drop space:',' 'A%)
'
  ',' != 'A'
ret0
check_literal:lit=' )' ' A%)
'
    dropping space
check_literal:After drop space:')' 'A%)
'
  ')' != 'A'
ret0
check_variable:ret1 vname='∞¯g¸%' is str:0 int:1 flt:0 ary:1
scan_atom:
check_literal:lit=' "' ' U%(A%)
'
    dropping space
check_literal:After drop space:'"' 'U%(A%)
'
  '"' != 'U'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'U%(A%)
':
check_vname ret1 '%(A%)
':
check_variable: '%(A%)
'
check_variable: Ary test '(A%)
'
check_literal:lit='(' ' (A%)
'
check_literal:After drop space:'(' '(A%)
'
check_literal:After while():A%)

ret1
check_variable: is array
check_expression: 'A%)
'
check_eitem:
check_operator: A%)

check_literal:lit=',' ' A%)
'
check_literal:After drop space:',' 'A%)
'
  ',' != 'A'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' A%)
'
    dropping space
check_literal:After drop space:'"' 'A%)
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'A%)
':
check_vname ret1 '%)
':
check_variable: '%)
'
check_variable: Ary test ')
'
check_literal:lit='(' ' )
'
check_literal:After drop space:'(' ')
'
  '(' != ')'
ret0
check_variable:ret1 vname='∞ıg¸%' is str:0 int:1 flt:0 ary:0
check_expression:ret1 'A%)
'
check_literal:lit=' ,' ' A%)
'
    dropping space
check_literal:After drop space:',' 'A%)
'
  ',' != 'A'
ret0
check_literal:lit=' )' ' A%)
'
    dropping space
check_literal:After drop space:')' 'A%)
'
  ')' != 'A'
ret0
check_variable:ret1 vname='p˜g¸%' is str:0 int:1 flt:0 ary:1
scan_variable:
scan_vname: 'U%(A%)
'
scan_vname: ret1 'U'
scan_variable: '%(A%)
'
scan_variable: Ary test '(A%)
'
check_literal:lit='(' ' (A%)
'
check_literal:After drop space:'(' '(A%)
'
check_literal:After while():A%)

ret1
scan_variable: is array
scan_expression: '(A%)
'
check_eitem:
check_operator: (A%)

check_literal:lit=',' ' (A%)
'
check_literal:After drop space:',' '(A%)
'
  ',' != '('
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' (A%)
'
    dropping space
check_literal:After drop space:'"' '(A%)
'
  '"' != '('
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname '(A%)
':
check_vname ret0 '(A%)
':
check_sub_expr:
check_literal:lit=' (' ' (A%)
'
    dropping space
check_literal:After drop space:'(' '(A%)
'
check_literal:After while():A%)

ret1
check_sub_expr: ret1
scan_eitem:
check_operator: (A%)

check_literal:lit=',' ' (A%)
'
check_literal:After drop space:',' '(A%)
'
  ',' != '('
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' (A%)
'
    dropping space
check_literal:After drop space:'"' '(A%)
'
  '"' != '('
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname '(A%)
':
check_vname ret0 '(A%)
':
check_sub_expr:
check_literal:lit=' (' ' (A%)
'
    dropping space
check_literal:After drop space:'(' '(A%)
'
check_literal:After while():A%)

ret1
check_sub_expr: ret1
scan_sub_expr:
scan_literal:lit=' (' '(A%)
'
scan_literal:After drop space:(A%)

scan_literal:while loop:(A%)

scan_expression: 'A%)
'
check_eitem:
check_operator: A%)

check_literal:lit=',' ' A%)
'
check_literal:After drop space:',' 'A%)
'
  ',' != 'A'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' A%)
'
    dropping space
check_literal:After drop space:'"' 'A%)
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'A%)
':
check_vname ret1 '%)
':
check_variable: '%)
'
check_variable: Ary test ')
'
check_literal:lit='(' ' )
'
check_literal:After drop space:'(' ')
'
  '(' != ')'
ret0
check_variable:ret1 vname='`ıg¸%' is str:0 int:1 flt:0 ary:0
scan_eitem:
check_operator: A%)

check_literal:lit=',' ' A%)
'
check_literal:After drop space:',' 'A%)
'
  ',' != 'A'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' A%)
'
    dropping space
check_literal:After drop space:'"' 'A%)
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'A%)
':
check_vname ret1 '%)
':
check_variable: '%)
'
check_variable: Ary test ')
'
check_literal:lit='(' ' )
'
check_literal:After drop space:'(' ')
'
  '(' != ')'
ret0
check_variable:ret1 vname='0ıg¸%' is str:0 int:1 flt:0 ary:0
scan_atom:
check_literal:lit=' "' ' A%)
'
    dropping space
check_literal:After drop space:'"' 'A%)
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'A%)
':
check_vname ret1 '%)
':
check_variable: '%)
'
check_variable: Ary test ')
'
check_literal:lit='(' ' )
'
check_literal:After drop space:'(' ')
'
  '(' != ')'
ret0
check_variable:ret1 vname='Ûg¸%' is str:0 int:1 flt:0 ary:0
scan_variable:
scan_vname: 'A%)
'
scan_vname: ret1 'A'
scan_variable: '%)
'
scan_variable: Ary test ')
'
check_literal:lit='(' ' )
'
check_literal:After drop space:'(' ')
'
  '(' != ')'
ret0
scan_variable:ret1 vname='A%' is str:0 int:1 flt:0 ary:0
check_eitem:
check_operator: )

check_literal:lit=',' ' )
'
check_literal:After drop space:',' ')
'
  ',' != ')'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' )
'
    dropping space
check_literal:After drop space:'"' ')
'
  '"' != ')'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname ')
':
check_vname ret0 ')
':
check_sub_expr:
check_literal:lit=' (' ' )
'
    dropping space
check_literal:After drop space:'(' ')
'
  '(' != ')'
ret0
check_sub_expr: ret0
scan_expression: ret1 ')
'
scan_literal:lit=' )' ')
'
scan_literal:After drop space:)

scan_literal:while loop:)

check_eitem:
check_operator: 

check_literal:lit=',' ' '
check_literal:After drop space:',' ''
  ret0 Empty test string
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 
'
    dropping space
check_literal:After drop space:'"' ''
  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname '
':
check_vname ret0 '':
check_sub_expr:
check_literal:lit=' (' ' 
'
    dropping space
check_literal:After drop space:'(' ''
  ret0 Empty test string
check_sub_expr: ret0
scan_expression: ret1 '
'
check_literal:lit=' ,' ' 
'
    dropping space
check_literal:After drop space:',' ''
  ret0 Empty test string
scan_literal:lit=' )' '
'
scan_literal:After drop space:
scan_literal:while loop:
 POKEB 181,U%(A%)

                  ^

   Bad literal ' )'
scan_variable:ret1 vname='U%' is str:0 int:1 flt:0 ary:1
check_eitem:
check_operator: 
check_literal:lit=',' ' '
check_literal:After drop space:',' ''
  ret0 Empty test string
check_operator:ret0
check_atom:
check_literal:lit=' "' ' '
    dropping space
check_literal:After drop space:'"' ''
  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname '':
check_vname ret0 '':
check_sub_expr:
check_literal:lit=' (' ' '
    dropping space
check_literal:After drop space:'(' ''
  ret0 Empty test string
check_sub_expr: ret0
scan_expression: ret1 ''
scan_command: ret1 =>'POKEB'
check_literal:lit=':' ' '
check_literal:After drop space:':' ''
  ret0 Empty test string
cline scanned OK
=======================cline==========================
== A%=A%+1
==
scan_cline:
check_line:
check_assignment:
check_variable:
check_vname 'A%=A%+1
':
check_vname ret1 '%=A%+1
':
check_variable: '%=A%+1
'
check_variable: Ary test '=A%+1
'
check_literal:lit='(' ' =A%+1
'
check_literal:After drop space:'(' '=A%+1
'
  '(' != '='
ret0
check_variable:ret1 vname='`˘g¸%' is str:0 int:1 flt:0 ary:0
check_literal:lit=' =' ' =A%+1
'
    dropping space
check_literal:After drop space:'=' '=A%+1
'
check_literal:After while():A%+1

ret1
check_expression: 'A%+1
'
check_eitem:
check_operator: A%+1

check_literal:lit=',' ' A%+1
'
check_literal:After drop space:',' 'A%+1
'
  ',' != 'A'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' A%+1
'
    dropping space
check_literal:After drop space:'"' 'A%+1
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'A%+1
':
check_vname ret1 '%+1
':
check_variable: '%+1
'
check_variable: Ary test '+1
'
check_literal:lit='(' ' +1
'
check_literal:After drop space:'(' '+1
'
  '(' != '+'
ret0
check_variable:ret1 vname='˙g¸%' is str:0 int:1 flt:0 ary:0
check_expression:ret1 'A%+1
'
scan_cline: Checked len=8, 'A%=A%+1
'
scan_line:
check_assignment:
check_variable:
check_vname 'A%=A%+1
':
check_vname ret1 '%=A%+1
':
check_variable: '%=A%+1
'
check_variable: Ary test '=A%+1
'
check_literal:lit='(' ' =A%+1
'
check_literal:After drop space:'(' '=A%+1
'
  '(' != '='
ret0
check_variable:ret1 vname='¯g¸%' is str:0 int:1 flt:0 ary:0
check_literal:lit=' =' ' =A%+1
'
    dropping space
check_literal:After drop space:'=' '=A%+1
'
check_literal:After while():A%+1

ret1
check_expression: 'A%+1
'
check_eitem:
check_operator: A%+1

check_literal:lit=',' ' A%+1
'
check_literal:After drop space:',' 'A%+1
'
  ',' != 'A'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' A%+1
'
    dropping space
check_literal:After drop space:'"' 'A%+1
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'A%+1
':
check_vname ret1 '%+1
':
check_variable: '%+1
'
check_variable: Ary test '+1
'
check_literal:lit='(' ' +1
'
check_literal:After drop space:'(' '+1
'
  '(' != '+'
ret0
check_variable:ret1 vname='‡¯g¸%' is str:0 int:1 flt:0 ary:0
check_expression:ret1 'A%+1
'
scan_assignment:
scan_variable:
scan_vname: 'A%=A%+1
'
scan_vname: ret1 'A'
scan_variable: '%=A%+1
'
scan_variable: Ary test '=A%+1
'
check_literal:lit='(' ' =A%+1
'
check_literal:After drop space:'(' '=A%+1
'
  '(' != '='
ret0
scan_variable:ret1 vname='A%' is str:0 int:1 flt:0 ary:0
scan_literal:lit=' =' '=A%+1
'
scan_literal:After drop space:=A%+1

scan_literal:while loop:=A%+1

scan_expression: 'A%+1
'
check_eitem:
check_operator: A%+1

check_literal:lit=',' ' A%+1
'
check_literal:After drop space:',' 'A%+1
'
  ',' != 'A'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' A%+1
'
    dropping space
check_literal:After drop space:'"' 'A%+1
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'A%+1
':
check_vname ret1 '%+1
':
check_variable: '%+1
'
check_variable: Ary test '+1
'
check_literal:lit='(' ' +1
'
check_literal:After drop space:'(' '+1
'
  '(' != '+'
ret0
check_variable:ret1 vname='¿˜g¸%' is str:0 int:1 flt:0 ary:0
scan_eitem:
check_operator: A%+1

check_literal:lit=',' ' A%+1
'
check_literal:After drop space:',' 'A%+1
'
  ',' != 'A'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' A%+1
'
    dropping space
check_literal:After drop space:'"' 'A%+1
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'A%+1
':
check_vname ret1 '%+1
':
check_variable: '%+1
'
check_variable: Ary test '+1
'
check_literal:lit='(' ' +1
'
check_literal:After drop space:'(' '+1
'
  '(' != '+'
ret0
check_variable:ret1 vname='ê˜g¸%' is str:0 int:1 flt:0 ary:0
scan_atom:
check_literal:lit=' "' ' A%+1
'
    dropping space
check_literal:After drop space:'"' 'A%+1
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'A%+1
':
check_vname ret1 '%+1
':
check_variable: '%+1
'
check_variable: Ary test '+1
'
check_literal:lit='(' ' +1
'
check_literal:After drop space:'(' '+1
'
  '(' != '+'
ret0
check_variable:ret1 vname='Pˆg¸%' is str:0 int:1 flt:0 ary:0
scan_variable:
scan_vname: 'A%+1
'
scan_vname: ret1 'A'
scan_variable: '%+1
'
scan_variable: Ary test '+1
'
check_literal:lit='(' ' +1
'
check_literal:After drop space:'(' '+1
'
  '(' != '+'
ret0
scan_variable:ret1 vname='A%' is str:0 int:1 flt:0 ary:0
check_eitem:
check_operator: +1

check_literal:lit=',' ' +1
'
check_literal:After drop space:',' '+1
'
  ',' != '+'
ret0
check_operator: ret1
scan_eitem:
check_operator: +1

check_literal:lit=',' ' +1
'
check_literal:After drop space:',' '+1
'
  ',' != '+'
ret0
check_operator: ret1
scan_operator: '+1
'
check_literal:lit=',' ' +1
'
check_literal:After drop space:',' '+1
'
  ',' != '+'
ret0
scan_operator: ret1 '1
'
check_eitem:
check_operator: 1

check_literal:lit=',' ' 1
'
check_literal:After drop space:',' '1
'
  ',' != '1'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 1
'
    dropping space
check_literal:After drop space:'"' '1
'
  '"' != '1'
ret0
check_number:
check_float:
isfloatdigit:
scan_eitem:
check_operator: 1

check_literal:lit=',' ' 1
'
check_literal:After drop space:',' '1
'
  ',' != '1'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 1
'
    dropping space
check_literal:After drop space:'"' '1
'
  '"' != '1'
ret0
check_number:
check_float:
isfloatdigit:
scan_atom:
check_literal:lit=' "' ' 1
'
    dropping space
check_literal:After drop space:'"' '1
'
  '"' != '1'
ret0
check_number:
check_float:
isfloatdigit:
scan_number:
check_float:
isfloatdigit:
scan_float:
isfloatdigit:
isfloatdigit:
check_eitem:
check_operator: 

check_literal:lit=',' ' '
check_literal:After drop space:',' ''
  ret0 Empty test string
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 
'
    dropping space
check_literal:After drop space:'"' ''
  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname '
':
check_vname ret0 '':
check_sub_expr:
check_literal:lit=' (' ' 
'
    dropping space
check_literal:After drop space:'(' ''
  ret0 Empty test string
check_sub_expr: ret0
scan_expression: ret1 '
'
scan_assignment: ret1
check_literal:lit=':' ' '
check_literal:After drop space:':' ''
  ret0 Empty test string
cline scanned OK
=======================cline==========================
==UNTIL A%>64
==
scan_cline:
check_line:
check_assignment:
check_variable:
check_vname 'UNTIL A%>64
':
check_vname ret1 ' A%>64
':
check_variable: ' A%>64
'
check_variable: Ary test ' A%>64
'
check_literal:lit='(' '  A%>64
'
check_literal:After drop space:'(' ' A%>64
'
  '(' != ' '
ret0
check_variable:ret1 vname='@∞b–ê~' is str:0 int:0 flt:1 ary:0
check_literal:lit=' =' '  A%>64
'
    dropping space
check_literal:After drop space:'=' 'A%>64
'
  '=' != 'A'
ret0
check_command:
check_literal:lit=' LOCAL' ' UNTIL A%>64
'
    dropping space
check_literal:After drop space:'LOCAL' 'UNTIL A%>64
'
  'L' != 'U'
ret0
check_literal:lit=' GLOBAL' ' UNTIL A%>64
'
    dropping space
check_literal:After drop space:'GLOBAL' 'UNTIL A%>64
'
  'G' != 'U'
ret0
check_literal:lit=' IF' ' UNTIL A%>64
'
    dropping space
check_literal:After drop space:'IF' 'UNTIL A%>64
'
  'I' != 'U'
ret0
check_literal:lit=' ELSE' ' UNTIL A%>64
'
    dropping space
check_literal:After drop space:'ELSE' 'UNTIL A%>64
'
  'E' != 'U'
ret0
check_literal:lit=' ENDIF' ' UNTIL A%>64
'
    dropping space
check_literal:After drop space:'ENDIF' 'UNTIL A%>64
'
  'E' != 'U'
ret0
check_literal:lit=' DO' ' UNTIL A%>64
'
    dropping space
check_literal:After drop space:'DO' 'UNTIL A%>64
'
  'D' != 'U'
ret0
check_literal:lit=' WHILE' ' UNTIL A%>64
'
    dropping space
check_literal:After drop space:'WHILE' 'UNTIL A%>64
'
  'W' != 'U'
ret0
check_literal:lit=' REPEAT' ' UNTIL A%>64
'
    dropping space
check_literal:After drop space:'REPEAT' 'UNTIL A%>64
'
  'R' != 'U'
ret0
check_literal:lit=' UNTIL' ' UNTIL A%>64
'
    dropping space
check_literal:After drop space:'UNTIL' 'UNTIL A%>64
'
check_literal:After while(): A%>64

ret1
scan_cline: Checked len=12, 'UNTIL A%>64
'
scan_line:
check_assignment:
check_variable:
check_vname 'UNTIL A%>64
':
check_vname ret1 ' A%>64
':
check_variable: ' A%>64
'
check_variable: Ary test ' A%>64
'
check_literal:lit='(' '  A%>64
'
check_literal:After drop space:'(' ' A%>64
'
  '(' != ' '
ret0
check_variable:ret1 vname='@∞b–ê~' is str:0 int:0 flt:1 ary:0
check_literal:lit=' =' '  A%>64
'
    dropping space
check_literal:After drop space:'=' 'A%>64
'
  '=' != 'A'
ret0
check_command:
check_literal:lit=' LOCAL' ' UNTIL A%>64
'
    dropping space
check_literal:After drop space:'LOCAL' 'UNTIL A%>64
'
  'L' != 'U'
ret0
check_literal:lit=' GLOBAL' ' UNTIL A%>64
'
    dropping space
check_literal:After drop space:'GLOBAL' 'UNTIL A%>64
'
  'G' != 'U'
ret0
check_literal:lit=' IF' ' UNTIL A%>64
'
    dropping space
check_literal:After drop space:'IF' 'UNTIL A%>64
'
  'I' != 'U'
ret0
check_literal:lit=' ELSE' ' UNTIL A%>64
'
    dropping space
check_literal:After drop space:'ELSE' 'UNTIL A%>64
'
  'E' != 'U'
ret0
check_literal:lit=' ENDIF' ' UNTIL A%>64
'
    dropping space
check_literal:After drop space:'ENDIF' 'UNTIL A%>64
'
  'E' != 'U'
ret0
check_literal:lit=' DO' ' UNTIL A%>64
'
    dropping space
check_literal:After drop space:'DO' 'UNTIL A%>64
'
  'D' != 'U'
ret0
check_literal:lit=' WHILE' ' UNTIL A%>64
'
    dropping space
check_literal:After drop space:'WHILE' 'UNTIL A%>64
'
  'W' != 'U'
ret0
check_literal:lit=' REPEAT' ' UNTIL A%>64
'
    dropping space
check_literal:After drop space:'REPEAT' 'UNTIL A%>64
'
  'R' != 'U'
ret0
check_literal:lit=' UNTIL' ' UNTIL A%>64
'
    dropping space
check_literal:After drop space:'UNTIL' 'UNTIL A%>64
'
check_literal:After while(): A%>64

ret1
scan_literal:lit=' UNTIL' 'UNTIL A%>64
'
scan_literal:After drop space:UNTIL A%>64

scan_literal:while loop:UNTIL A%>64

scan_literal:while loop:NTIL A%>64

scan_literal:while loop:TIL A%>64

scan_literal:while loop:IL A%>64

scan_literal:while loop:L A%>64

scan_expression: ' A%>64
'
check_eitem:
check_operator: A%>64

check_literal:lit=',' ' A%>64
'
check_literal:After drop space:',' 'A%>64
'
  ',' != 'A'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' A%>64
'
    dropping space
check_literal:After drop space:'"' 'A%>64
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'A%>64
':
check_vname ret1 '%>64
':
check_variable: '%>64
'
check_variable: Ary test '>64
'
check_literal:lit='(' ' >64
'
check_literal:After drop space:'(' '>64
'
  '(' != '>'
ret0
check_variable:ret1 vname='˘g¸%' is str:0 int:1 flt:0 ary:0
scan_eitem:
check_operator: A%>64

check_literal:lit=',' ' A%>64
'
check_literal:After drop space:',' 'A%>64
'
  ',' != 'A'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' A%>64
'
    dropping space
check_literal:After drop space:'"' 'A%>64
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'A%>64
':
check_vname ret1 '%>64
':
check_variable: '%>64
'
check_variable: Ary test '>64
'
check_literal:lit='(' ' >64
'
check_literal:After drop space:'(' '>64
'
  '(' != '>'
ret0
check_variable:ret1 vname='‡¯g¸%' is str:0 int:1 flt:0 ary:0
scan_atom:
check_literal:lit=' "' ' A%>64
'
    dropping space
check_literal:After drop space:'"' 'A%>64
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'A%>64
':
check_vname ret1 '%>64
':
check_variable: '%>64
'
check_variable: Ary test '>64
'
check_literal:lit='(' ' >64
'
check_literal:After drop space:'(' '>64
'
  '(' != '>'
ret0
check_variable:ret1 vname='†˜g¸%' is str:0 int:1 flt:0 ary:0
scan_variable:
scan_vname: 'A%>64
'
scan_vname: ret1 'A'
scan_variable: '%>64
'
scan_variable: Ary test '>64
'
check_literal:lit='(' ' >64
'
check_literal:After drop space:'(' '>64
'
  '(' != '>'
ret0
scan_variable:ret1 vname='A%' is str:0 int:1 flt:0 ary:0
check_eitem:
check_operator: >64

check_literal:lit=',' ' >64
'
check_literal:After drop space:',' '>64
'
  ',' != '>'
ret0
check_operator: ret1
scan_eitem:
check_operator: >64

check_literal:lit=',' ' >64
'
check_literal:After drop space:',' '>64
'
  ',' != '>'
ret0
check_operator: ret1
scan_operator: '>64
'
check_literal:lit=',' ' >64
'
check_literal:After drop space:',' '>64
'
  ',' != '>'
ret0
scan_operator: ret1 '64
'
check_eitem:
check_operator: 64

check_literal:lit=',' ' 64
'
check_literal:After drop space:',' '64
'
  ',' != '6'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 64
'
    dropping space
check_literal:After drop space:'"' '64
'
  '"' != '6'
ret0
check_number:
check_float:
isfloatdigit:
scan_eitem:
check_operator: 64

check_literal:lit=',' ' 64
'
check_literal:After drop space:',' '64
'
  ',' != '6'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 64
'
    dropping space
check_literal:After drop space:'"' '64
'
  '"' != '6'
ret0
check_number:
check_float:
isfloatdigit:
scan_atom:
check_literal:lit=' "' ' 64
'
    dropping space
check_literal:After drop space:'"' '64
'
  '"' != '6'
ret0
check_number:
check_float:
isfloatdigit:
scan_number:
check_float:
isfloatdigit:
scan_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_eitem:
check_operator: 

check_literal:lit=',' ' '
check_literal:After drop space:',' ''
  ret0 Empty test string
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 
'
    dropping space
check_literal:After drop space:'"' ''
  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname '
':
check_vname ret0 '':
check_sub_expr:
check_literal:lit=' (' ' 
'
    dropping space
check_literal:After drop space:'(' ''
  ret0 Empty test string
check_sub_expr: ret0
scan_expression: ret1 '
'
scan_line: ret1
check_literal:lit=':' ' '
check_literal:After drop space:':' ''
  ret0 Empty test string
cline scanned OK

 6 lines scanned Ok
 0 lines scanned failed
 1 lines blank
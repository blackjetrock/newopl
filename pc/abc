
=======================cline==========================
==TEST1:
==
scan_procdef:
check_textlabel: 'TEST1:
'
check_textlabel:ret1
scan_literal:lit=':' ':
'
scan_literal:After drop space::

scan_literal:while loop::

scan_procdef:ret1
cline scanned OK
=======================cline==========================
==LOCAL A, B,C,D , E  ,  F   ,    G
==
check_declare:
check_literal:lit=' LOCAL' idx=0 'LOCAL A, B,C,D , E  ,  F   ,    G
'
    dropping space
check_literal:After drop space:'LOCAL' idx=0 'LOCAL A, B,C,D , E  ,  F   ,    G
'
check_literal:After while(): A, B,C,D , E  ,  F   ,    G

check_literal:ret1 
check_declare:ret 1
scan_declare:
check_literal:lit=' LOCAL' idx=0 'LOCAL A, B,C,D , E  ,  F   ,    G
'
    dropping space
check_literal:After drop space:'LOCAL' idx=0 'LOCAL A, B,C,D , E  ,  F   ,    G
'
check_literal:After while(): A, B,C,D , E  ,  F   ,    G

check_literal:ret1 
scan_localglobal:
scan_literal:lit=' LOCAL' 'LOCAL A, B,C,D , E  ,  F   ,    G
'
scan_literal:After drop space:LOCAL A, B,C,D , E  ,  F   ,    G

scan_literal:while loop:LOCAL A, B,C,D , E  ,  F   ,    G

scan_literal:while loop:OCAL A, B,C,D , E  ,  F   ,    G

scan_literal:while loop:CAL A, B,C,D , E  ,  F   ,    G

scan_literal:while loop:AL A, B,C,D , E  ,  F   ,    G

scan_literal:while loop:L A, B,C,D , E  ,  F   ,    G

check_variable:
check_vname 'A, B,C,D , E  ,  F   ,    G
':
check_vname ret1 ', B,C,D , E  ,  F   ,    G
':
check_variable: ', B,C,D , E  ,  F   ,    G
'
check_variable: Ary test ', B,C,D , E  ,  F   ,    G
'
check_literal:lit='(' idx=7 ', B,C,D , E  ,  F   ,    G
'
check_literal:After drop space:'(' idx=7 ', B,C,D , E  ,  F   ,    G
'
  '(' != ','
check_literal: ret0
check_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variable:ret1 
scan_variable:
scan_vname: ' A, B,C,D , E  ,  F   ,    G
'
scan_vname: ret1 'A'
scan_variable: ', B,C,D , E  ,  F   ,    G
' vname='A'
scan_variable: Ary test ', B,C,D , E  ,  F   ,    G
'
check_literal:lit='(' idx=7 ', B,C,D , E  ,  F   ,    G
'
check_literal:After drop space:'(' idx=7 ', B,C,D , E  ,  F   ,    G
'
  '(' != ','
check_literal: ret0
scan_variable:ret1 vname='A' is str:0 int:0 flt:1 ary:0
scan_localglobal: LOCAL variable:''
VAR INFO: '                 A' gbl:0 ref:0 int:0 flt:1 str:0 ary:0 max_str:0 max_ary:0 num_ind:0
check_literal:lit=' ,' idx=7 ', B,C,D , E  ,  F   ,    G
'
    dropping space
check_literal:After drop space:',' idx=7 ', B,C,D , E  ,  F   ,    G
'
check_literal:After while(): B,C,D , E  ,  F   ,    G

check_literal:ret1 
scan_literal:lit=' ,' ', B,C,D , E  ,  F   ,    G
'
scan_literal:After drop space:, B,C,D , E  ,  F   ,    G

scan_literal:while loop:, B,C,D , E  ,  F   ,    G

check_variable:
check_vname 'B,C,D , E  ,  F   ,    G
':
check_vname ret1 ',C,D , E  ,  F   ,    G
':
check_variable: ',C,D , E  ,  F   ,    G
'
check_variable: Ary test ',C,D , E  ,  F   ,    G
'
check_literal:lit='(' idx=10 ',C,D , E  ,  F   ,    G
'
check_literal:After drop space:'(' idx=10 ',C,D , E  ,  F   ,    G
'
  '(' != ','
check_literal: ret0
check_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variable:ret1 
scan_variable:
scan_vname: ' B,C,D , E  ,  F   ,    G
'
scan_vname: ret1 'B'
scan_variable: ',C,D , E  ,  F   ,    G
' vname='B'
scan_variable: Ary test ',C,D , E  ,  F   ,    G
'
check_literal:lit='(' idx=10 ',C,D , E  ,  F   ,    G
'
check_literal:After drop space:'(' idx=10 ',C,D , E  ,  F   ,    G
'
  '(' != ','
check_literal: ret0
scan_variable:ret1 vname='B' is str:0 int:0 flt:1 ary:0
scan_localglobal: LOCAL variable:''
VAR INFO: '                 B' gbl:0 ref:0 int:0 flt:1 str:0 ary:0 max_str:0 max_ary:0 num_ind:0
check_literal:lit=' ,' idx=10 ',C,D , E  ,  F   ,    G
'
    dropping space
check_literal:After drop space:',' idx=10 ',C,D , E  ,  F   ,    G
'
check_literal:After while():C,D , E  ,  F   ,    G

check_literal:ret1 
scan_literal:lit=' ,' ',C,D , E  ,  F   ,    G
'
scan_literal:After drop space:,C,D , E  ,  F   ,    G

scan_literal:while loop:,C,D , E  ,  F   ,    G

check_variable:
check_vname 'C,D , E  ,  F   ,    G
':
check_vname ret1 ',D , E  ,  F   ,    G
':
check_variable: ',D , E  ,  F   ,    G
'
check_variable: Ary test ',D , E  ,  F   ,    G
'
check_literal:lit='(' idx=12 ',D , E  ,  F   ,    G
'
check_literal:After drop space:'(' idx=12 ',D , E  ,  F   ,    G
'
  '(' != ','
check_literal: ret0
check_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variable:ret1 
scan_variable:
scan_vname: 'C,D , E  ,  F   ,    G
'
scan_vname: ret1 'C'
scan_variable: ',D , E  ,  F   ,    G
' vname='C'
scan_variable: Ary test ',D , E  ,  F   ,    G
'
check_literal:lit='(' idx=12 ',D , E  ,  F   ,    G
'
check_literal:After drop space:'(' idx=12 ',D , E  ,  F   ,    G
'
  '(' != ','
check_literal: ret0
scan_variable:ret1 vname='C' is str:0 int:0 flt:1 ary:0
scan_localglobal: LOCAL variable:''
VAR INFO: '                 C' gbl:0 ref:0 int:0 flt:1 str:0 ary:0 max_str:0 max_ary:0 num_ind:0
check_literal:lit=' ,' idx=12 ',D , E  ,  F   ,    G
'
    dropping space
check_literal:After drop space:',' idx=12 ',D , E  ,  F   ,    G
'
check_literal:After while():D , E  ,  F   ,    G

check_literal:ret1 
scan_literal:lit=' ,' ',D , E  ,  F   ,    G
'
scan_literal:After drop space:,D , E  ,  F   ,    G

scan_literal:while loop:,D , E  ,  F   ,    G

check_variable:
check_vname 'D , E  ,  F   ,    G
':
check_vname ret1 ' , E  ,  F   ,    G
':
check_variable: ' , E  ,  F   ,    G
'
check_variable: Ary test ' , E  ,  F   ,    G
'
check_literal:lit='(' idx=14 ' , E  ,  F   ,    G
'
check_literal:After drop space:'(' idx=14 ' , E  ,  F   ,    G
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variable:ret1 
scan_variable:
scan_vname: 'D , E  ,  F   ,    G
'
scan_vname: ret1 'D'
scan_variable: ' , E  ,  F   ,    G
' vname='D'
scan_variable: Ary test ' , E  ,  F   ,    G
'
check_literal:lit='(' idx=14 ' , E  ,  F   ,    G
'
check_literal:After drop space:'(' idx=14 ' , E  ,  F   ,    G
'
  '(' != ' '
check_literal: ret0
scan_variable:ret1 vname='D' is str:0 int:0 flt:1 ary:0
scan_localglobal: LOCAL variable:''
VAR INFO: '                 D' gbl:0 ref:0 int:0 flt:1 str:0 ary:0 max_str:0 max_ary:0 num_ind:0
check_literal:lit=' ,' idx=14 ' , E  ,  F   ,    G
'
    dropping space
check_literal:After drop space:',' idx=15 ', E  ,  F   ,    G
'
check_literal:After while(): E  ,  F   ,    G

check_literal:ret1 
scan_literal:lit=' ,' ' , E  ,  F   ,    G
'
scan_literal:After drop space:, E  ,  F   ,    G

scan_literal:while loop:, E  ,  F   ,    G

check_variable:
check_vname 'E  ,  F   ,    G
':
check_vname ret1 '  ,  F   ,    G
':
check_variable: '  ,  F   ,    G
'
check_variable: Ary test '  ,  F   ,    G
'
check_literal:lit='(' idx=18 '  ,  F   ,    G
'
check_literal:After drop space:'(' idx=18 '  ,  F   ,    G
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variable:ret1 
scan_variable:
scan_vname: ' E  ,  F   ,    G
'
scan_vname: ret1 'E'
scan_variable: '  ,  F   ,    G
' vname='E'
scan_variable: Ary test '  ,  F   ,    G
'
check_literal:lit='(' idx=18 '  ,  F   ,    G
'
check_literal:After drop space:'(' idx=18 '  ,  F   ,    G
'
  '(' != ' '
check_literal: ret0
scan_variable:ret1 vname='E' is str:0 int:0 flt:1 ary:0
scan_localglobal: LOCAL variable:''
VAR INFO: '                 E' gbl:0 ref:0 int:0 flt:1 str:0 ary:0 max_str:0 max_ary:0 num_ind:0
check_literal:lit=' ,' idx=18 '  ,  F   ,    G
'
    dropping space
check_literal:After drop space:',' idx=20 ',  F   ,    G
'
check_literal:After while():  F   ,    G

check_literal:ret1 
scan_literal:lit=' ,' '  ,  F   ,    G
'
scan_literal:After drop space:,  F   ,    G

scan_literal:while loop:,  F   ,    G

check_variable:
check_vname 'F   ,    G
':
check_vname ret1 '   ,    G
':
check_variable: '   ,    G
'
check_variable: Ary test '   ,    G
'
check_literal:lit='(' idx=24 '   ,    G
'
check_literal:After drop space:'(' idx=24 '   ,    G
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variable:ret1 
scan_variable:
scan_vname: '  F   ,    G
'
scan_vname: ret1 'F'
scan_variable: '   ,    G
' vname='F'
scan_variable: Ary test '   ,    G
'
check_literal:lit='(' idx=24 '   ,    G
'
check_literal:After drop space:'(' idx=24 '   ,    G
'
  '(' != ' '
check_literal: ret0
scan_variable:ret1 vname='F' is str:0 int:0 flt:1 ary:0
scan_localglobal: LOCAL variable:''
VAR INFO: '                 F' gbl:0 ref:0 int:0 flt:1 str:0 ary:0 max_str:0 max_ary:0 num_ind:0
check_literal:lit=' ,' idx=24 '   ,    G
'
    dropping space
check_literal:After drop space:',' idx=27 ',    G
'
check_literal:After while():    G

check_literal:ret1 
scan_literal:lit=' ,' '   ,    G
'
scan_literal:After drop space:,    G

scan_literal:while loop:,    G

check_variable:
check_vname 'G
':
check_vname ret1 '
':
check_variable: '
'
check_variable: Ary test '
'
check_literal:lit='(' idx=33 '
'
check_literal:After drop space:'(' idx=33 '
'
  '(' != '
'
check_literal: ret0
check_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variable:ret1 
scan_variable:
scan_vname: '    G
'
scan_vname: ret1 'G'
scan_variable: '
' vname='G'
scan_variable: Ary test '
'
check_literal:lit='(' idx=33 '
'
check_literal:After drop space:'(' idx=33 '
'
  '(' != '
'
check_literal: ret0
scan_variable:ret1 vname='G' is str:0 int:0 flt:1 ary:0
scan_localglobal: LOCAL variable:''
VAR INFO: '                 G' gbl:0 ref:0 int:0 flt:1 str:0 ary:0 max_str:0 max_ary:0 num_ind:0
check_literal:lit=' ,' idx=33 '
'
    dropping space
check_literal:After drop space:',' idx=34 ''
check_literal  ret0 Empty test string
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
scan_localglobal:ret1
scan_declare:ret 1
=======================cline==========================
==LOCAL A%
==
check_declare:
check_literal:lit=' LOCAL' idx=0 'LOCAL A%
'
    dropping space
check_literal:After drop space:'LOCAL' idx=0 'LOCAL A%
'
check_literal:After while(): A%

check_literal:ret1 
check_declare:ret 1
scan_declare:
check_literal:lit=' LOCAL' idx=0 'LOCAL A%
'
    dropping space
check_literal:After drop space:'LOCAL' idx=0 'LOCAL A%
'
check_literal:After while(): A%

check_literal:ret1 
scan_localglobal:
scan_literal:lit=' LOCAL' 'LOCAL A%
'
scan_literal:After drop space:LOCAL A%

scan_literal:while loop:LOCAL A%

scan_literal:while loop:OCAL A%

scan_literal:while loop:CAL A%

scan_literal:while loop:AL A%

scan_literal:while loop:L A%

check_variable:
check_vname 'A%
':
check_vname ret1 '%
':
check_variable: '%
'
check_variable: Ary test '
'
check_literal:lit='(' idx=8 '
'
check_literal:After drop space:'(' idx=8 '
'
  '(' != '
'
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
scan_variable:
scan_vname: ' A%
'
scan_vname: ret1 'A'
scan_variable: '%
' vname='A'
scan_variable: Ary test '
'
check_literal:lit='(' idx=8 '
'
check_literal:After drop space:'(' idx=8 '
'
  '(' != '
'
check_literal: ret0
scan_variable:ret1 vname='A%' is str:0 int:1 flt:0 ary:0
scan_localglobal: LOCAL variable:''
VAR INFO: '                A%' gbl:0 ref:0 int:1 flt:0 str:0 ary:0 max_str:0 max_ary:0 num_ind:0
check_literal:lit=' ,' idx=8 '
'
    dropping space
check_literal:After drop space:',' idx=9 ''
check_literal  ret0 Empty test string
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
scan_localglobal:ret1
scan_declare:ret 1
=======================cline==========================
==LOCAL A%(10)
==
check_declare:
check_literal:lit=' LOCAL' idx=0 'LOCAL A%(10)
'
    dropping space
check_literal:After drop space:'LOCAL' idx=0 'LOCAL A%(10)
'
check_literal:After while(): A%(10)

check_literal:ret1 
check_declare:ret 1
scan_declare:
check_literal:lit=' LOCAL' idx=0 'LOCAL A%(10)
'
    dropping space
check_literal:After drop space:'LOCAL' idx=0 'LOCAL A%(10)
'
check_literal:After while(): A%(10)

check_literal:ret1 
scan_localglobal:
scan_literal:lit=' LOCAL' 'LOCAL A%(10)
'
scan_literal:After drop space:LOCAL A%(10)

scan_literal:while loop:LOCAL A%(10)

scan_literal:while loop:OCAL A%(10)

scan_literal:while loop:CAL A%(10)

scan_literal:while loop:AL A%(10)

scan_literal:while loop:L A%(10)

check_variable:
check_vname 'A%(10)
':
check_vname ret1 '%(10)
':
check_variable: '%(10)
'
check_variable: Ary test '(10)
'
check_literal:lit='(' idx=8 '(10)
'
check_literal:After drop space:'(' idx=8 '(10)
'
check_literal:After while():10)

check_literal:ret1 
check_variable: is array
check_expression: '10)
'
check_eitem: '10)
'
check_operator: 10)

check_literal:lit=',' idx=9 '10)
'
check_literal:After drop space:',' idx=9 '10)
'
  ',' != '1'
check_literal: ret0
check_operator:ret0
check_function: '10)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=9 '10)
'
    dropping space
check_literal:After drop space:'%' idx=9 '10)
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=9 '10)
'
    dropping space
check_literal:After drop space:'"' idx=9 '10)
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '10)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: ')
'
check_operator: )

check_literal:lit=',' idx=11 ')
'
check_literal:After drop space:',' idx=11 ')
'
  ',' != ')'
check_literal: ret0
check_operator:ret0
check_function: ')
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=11 ')
'
    dropping space
check_literal:After drop space:'%' idx=11 ')
'
  '%' != ')'
check_literal: ret0
check_literal:lit=' "' idx=11 ')
'
    dropping space
check_literal:After drop space:'"' idx=11 ')
'
  '"' != ')'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ')
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname ')
':
check_vname ret0 ')
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=11 ')
'
    dropping space
check_literal:After drop space:'(' idx=11 ')
'
  '(' != ')'
check_literal: ret0
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 ')
'
check_literal:lit=' ,' idx=11 ')
'
    dropping space
check_literal:After drop space:',' idx=11 ')
'
  ',' != ')'
check_literal: ret0
check_literal:lit=' )' idx=11 ')
'
    dropping space
check_literal:After drop space:')' idx=11 ')
'
check_literal:After while():

check_literal:ret1 
check_variable:ret1 
scan_variable:
scan_vname: ' A%(10)
'
scan_vname: ret1 'A'
scan_variable: '%(10)
' vname='A'
scan_variable: Ary test '(10)
'
check_literal:lit='(' idx=8 '(10)
'
check_literal:After drop space:'(' idx=8 '(10)
'
check_literal:After while():10)

check_literal:ret1 
scan_literal:lit='(' '(10)
'
scan_literal:After drop space:(10)

scan_literal:while loop:(10)

scan_variable: is array
scan_integer:
scan_integer:ret1
check_literal:lit=' ,' idx=11 ')
'
    dropping space
check_literal:After drop space:',' idx=11 ')
'
  ',' != ')'
check_literal: ret0
scan_literal:lit=' )' ')
'
scan_literal:After drop space:)

scan_literal:while loop:)

scan_variable:ret1 vname='A%' is str:0 int:1 flt:0 ary:1
scan_localglobal: LOCAL variable:''
VAR INFO: '                A%' gbl:0 ref:0 int:1 flt:0 str:0 ary:1 max_str:0 max_ary:10 num_ind:1
check_literal:lit=' ,' idx=12 '
'
    dropping space
check_literal:After drop space:',' idx=13 ''
check_literal  ret0 Empty test string
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
scan_localglobal:ret1
scan_declare:ret 1
=======================cline==========================
==LOCAL A%,B%
==
check_declare:
check_literal:lit=' LOCAL' idx=0 'LOCAL A%,B%
'
    dropping space
check_literal:After drop space:'LOCAL' idx=0 'LOCAL A%,B%
'
check_literal:After while(): A%,B%

check_literal:ret1 
check_declare:ret 1
scan_declare:
check_literal:lit=' LOCAL' idx=0 'LOCAL A%,B%
'
    dropping space
check_literal:After drop space:'LOCAL' idx=0 'LOCAL A%,B%
'
check_literal:After while(): A%,B%

check_literal:ret1 
scan_localglobal:
scan_literal:lit=' LOCAL' 'LOCAL A%,B%
'
scan_literal:After drop space:LOCAL A%,B%

scan_literal:while loop:LOCAL A%,B%

scan_literal:while loop:OCAL A%,B%

scan_literal:while loop:CAL A%,B%

scan_literal:while loop:AL A%,B%

scan_literal:while loop:L A%,B%

check_variable:
check_vname 'A%,B%
':
check_vname ret1 '%,B%
':
check_variable: '%,B%
'
check_variable: Ary test ',B%
'
check_literal:lit='(' idx=8 ',B%
'
check_literal:After drop space:'(' idx=8 ',B%
'
  '(' != ','
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
scan_variable:
scan_vname: ' A%,B%
'
scan_vname: ret1 'A'
scan_variable: '%,B%
' vname='A'
scan_variable: Ary test ',B%
'
check_literal:lit='(' idx=8 ',B%
'
check_literal:After drop space:'(' idx=8 ',B%
'
  '(' != ','
check_literal: ret0
scan_variable:ret1 vname='A%' is str:0 int:1 flt:0 ary:0
scan_localglobal: LOCAL variable:''
VAR INFO: '                A%' gbl:0 ref:0 int:1 flt:0 str:0 ary:0 max_str:0 max_ary:0 num_ind:0
check_literal:lit=' ,' idx=8 ',B%
'
    dropping space
check_literal:After drop space:',' idx=8 ',B%
'
check_literal:After while():B%

check_literal:ret1 
scan_literal:lit=' ,' ',B%
'
scan_literal:After drop space:,B%

scan_literal:while loop:,B%

check_variable:
check_vname 'B%
':
check_vname ret1 '%
':
check_variable: '%
'
check_variable: Ary test '
'
check_literal:lit='(' idx=11 '
'
check_literal:After drop space:'(' idx=11 '
'
  '(' != '
'
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
scan_variable:
scan_vname: 'B%
'
scan_vname: ret1 'B'
scan_variable: '%
' vname='B'
scan_variable: Ary test '
'
check_literal:lit='(' idx=11 '
'
check_literal:After drop space:'(' idx=11 '
'
  '(' != '
'
check_literal: ret0
scan_variable:ret1 vname='B%' is str:0 int:1 flt:0 ary:0
scan_localglobal: LOCAL variable:''
VAR INFO: '                B%' gbl:0 ref:0 int:1 flt:0 str:0 ary:0 max_str:0 max_ary:0 num_ind:0
check_literal:lit=' ,' idx=11 '
'
    dropping space
check_literal:After drop space:',' idx=12 ''
check_literal  ret0 Empty test string
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
scan_localglobal:ret1
scan_declare:ret 1
=======================cline==========================
==LOCAL A%(1),B%(2),  A%(1000),    B%(2000)
==
check_declare:
check_literal:lit=' LOCAL' idx=0 'LOCAL A%(1),B%(2),  A%(1000),    B%(2000)
'
    dropping space
check_literal:After drop space:'LOCAL' idx=0 'LOCAL A%(1),B%(2),  A%(1000),    B%(2000)
'
check_literal:After while(): A%(1),B%(2),  A%(1000),    B%(2000)

check_literal:ret1 
check_declare:ret 1
scan_declare:
check_literal:lit=' LOCAL' idx=0 'LOCAL A%(1),B%(2),  A%(1000),    B%(2000)
'
    dropping space
check_literal:After drop space:'LOCAL' idx=0 'LOCAL A%(1),B%(2),  A%(1000),    B%(2000)
'
check_literal:After while(): A%(1),B%(2),  A%(1000),    B%(2000)

check_literal:ret1 
scan_localglobal:
scan_literal:lit=' LOCAL' 'LOCAL A%(1),B%(2),  A%(1000),    B%(2000)
'
scan_literal:After drop space:LOCAL A%(1),B%(2),  A%(1000),    B%(2000)

scan_literal:while loop:LOCAL A%(1),B%(2),  A%(1000),    B%(2000)

scan_literal:while loop:OCAL A%(1),B%(2),  A%(1000),    B%(2000)

scan_literal:while loop:CAL A%(1),B%(2),  A%(1000),    B%(2000)

scan_literal:while loop:AL A%(1),B%(2),  A%(1000),    B%(2000)

scan_literal:while loop:L A%(1),B%(2),  A%(1000),    B%(2000)

check_variable:
check_vname 'A%(1),B%(2),  A%(1000),    B%(2000)
':
check_vname ret1 '%(1),B%(2),  A%(1000),    B%(2000)
':
check_variable: '%(1),B%(2),  A%(1000),    B%(2000)
'
check_variable: Ary test '(1),B%(2),  A%(1000),    B%(2000)
'
check_literal:lit='(' idx=8 '(1),B%(2),  A%(1000),    B%(2000)
'
check_literal:After drop space:'(' idx=8 '(1),B%(2),  A%(1000),    B%(2000)
'
check_literal:After while():1),B%(2),  A%(1000),    B%(2000)

check_literal:ret1 
check_variable: is array
check_expression: '1),B%(2),  A%(1000),    B%(2000)
'
check_eitem: '1),B%(2),  A%(1000),    B%(2000)
'
check_operator: 1),B%(2),  A%(1000),    B%(2000)

check_literal:lit=',' idx=9 '1),B%(2),  A%(1000),    B%(2000)
'
check_literal:After drop space:',' idx=9 '1),B%(2),  A%(1000),    B%(2000)
'
  ',' != '1'
check_literal: ret0
check_operator:ret0
check_function: '1),B%(2),  A%(1000),    B%(2000)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=9 '1),B%(2),  A%(1000),    B%(2000)
'
    dropping space
check_literal:After drop space:'%' idx=9 '1),B%(2),  A%(1000),    B%(2000)
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=9 '1),B%(2),  A%(1000),    B%(2000)
'
    dropping space
check_literal:After drop space:'"' idx=9 '1),B%(2),  A%(1000),    B%(2000)
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '1),B%(2),  A%(1000),    B%(2000)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: '),B%(2),  A%(1000),    B%(2000)
'
check_operator: ),B%(2),  A%(1000),    B%(2000)

check_literal:lit=',' idx=10 '),B%(2),  A%(1000),    B%(2000)
'
check_literal:After drop space:',' idx=10 '),B%(2),  A%(1000),    B%(2000)
'
  ',' != ')'
check_literal: ret0
check_operator:ret0
check_function: '),B%(2),  A%(1000),    B%(2000)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=10 '),B%(2),  A%(1000),    B%(2000)
'
    dropping space
check_literal:After drop space:'%' idx=10 '),B%(2),  A%(1000),    B%(2000)
'
  '%' != ')'
check_literal: ret0
check_literal:lit=' "' idx=10 '),B%(2),  A%(1000),    B%(2000)
'
    dropping space
check_literal:After drop space:'"' idx=10 '),B%(2),  A%(1000),    B%(2000)
'
  '"' != ')'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: '),B%(2),  A%(1000),    B%(2000)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname '),B%(2),  A%(1000),    B%(2000)
':
check_vname ret0 '),B%(2),  A%(1000),    B%(2000)
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=10 '),B%(2),  A%(1000),    B%(2000)
'
    dropping space
check_literal:After drop space:'(' idx=10 '),B%(2),  A%(1000),    B%(2000)
'
  '(' != ')'
check_literal: ret0
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 '),B%(2),  A%(1000),    B%(2000)
'
check_literal:lit=' ,' idx=10 '),B%(2),  A%(1000),    B%(2000)
'
    dropping space
check_literal:After drop space:',' idx=10 '),B%(2),  A%(1000),    B%(2000)
'
  ',' != ')'
check_literal: ret0
check_literal:lit=' )' idx=10 '),B%(2),  A%(1000),    B%(2000)
'
    dropping space
check_literal:After drop space:')' idx=10 '),B%(2),  A%(1000),    B%(2000)
'
check_literal:After while():,B%(2),  A%(1000),    B%(2000)

check_literal:ret1 
check_variable:ret1 
scan_variable:
scan_vname: ' A%(1),B%(2),  A%(1000),    B%(2000)
'
scan_vname: ret1 'A'
scan_variable: '%(1),B%(2),  A%(1000),    B%(2000)
' vname='A'
scan_variable: Ary test '(1),B%(2),  A%(1000),    B%(2000)
'
check_literal:lit='(' idx=8 '(1),B%(2),  A%(1000),    B%(2000)
'
check_literal:After drop space:'(' idx=8 '(1),B%(2),  A%(1000),    B%(2000)
'
check_literal:After while():1),B%(2),  A%(1000),    B%(2000)

check_literal:ret1 
scan_literal:lit='(' '(1),B%(2),  A%(1000),    B%(2000)
'
scan_literal:After drop space:(1),B%(2),  A%(1000),    B%(2000)

scan_literal:while loop:(1),B%(2),  A%(1000),    B%(2000)

scan_variable: is array
scan_integer:
scan_integer:ret1
check_literal:lit=' ,' idx=10 '),B%(2),  A%(1000),    B%(2000)
'
    dropping space
check_literal:After drop space:',' idx=10 '),B%(2),  A%(1000),    B%(2000)
'
  ',' != ')'
check_literal: ret0
scan_literal:lit=' )' '),B%(2),  A%(1000),    B%(2000)
'
scan_literal:After drop space:),B%(2),  A%(1000),    B%(2000)

scan_literal:while loop:),B%(2),  A%(1000),    B%(2000)

scan_variable:ret1 vname='A%' is str:0 int:1 flt:0 ary:1
scan_localglobal: LOCAL variable:''
VAR INFO: '                A%' gbl:0 ref:0 int:1 flt:0 str:0 ary:1 max_str:0 max_ary:1 num_ind:1
check_literal:lit=' ,' idx=11 ',B%(2),  A%(1000),    B%(2000)
'
    dropping space
check_literal:After drop space:',' idx=11 ',B%(2),  A%(1000),    B%(2000)
'
check_literal:After while():B%(2),  A%(1000),    B%(2000)

check_literal:ret1 
scan_literal:lit=' ,' ',B%(2),  A%(1000),    B%(2000)
'
scan_literal:After drop space:,B%(2),  A%(1000),    B%(2000)

scan_literal:while loop:,B%(2),  A%(1000),    B%(2000)

check_variable:
check_vname 'B%(2),  A%(1000),    B%(2000)
':
check_vname ret1 '%(2),  A%(1000),    B%(2000)
':
check_variable: '%(2),  A%(1000),    B%(2000)
'
check_variable: Ary test '(2),  A%(1000),    B%(2000)
'
check_literal:lit='(' idx=14 '(2),  A%(1000),    B%(2000)
'
check_literal:After drop space:'(' idx=14 '(2),  A%(1000),    B%(2000)
'
check_literal:After while():2),  A%(1000),    B%(2000)

check_literal:ret1 
check_variable: is array
check_expression: '2),  A%(1000),    B%(2000)
'
check_eitem: '2),  A%(1000),    B%(2000)
'
check_operator: 2),  A%(1000),    B%(2000)

check_literal:lit=',' idx=15 '2),  A%(1000),    B%(2000)
'
check_literal:After drop space:',' idx=15 '2),  A%(1000),    B%(2000)
'
  ',' != '2'
check_literal: ret0
check_operator:ret0
check_function: '2),  A%(1000),    B%(2000)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=15 '2),  A%(1000),    B%(2000)
'
    dropping space
check_literal:After drop space:'%' idx=15 '2),  A%(1000),    B%(2000)
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=15 '2),  A%(1000),    B%(2000)
'
    dropping space
check_literal:After drop space:'"' idx=15 '2),  A%(1000),    B%(2000)
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2),  A%(1000),    B%(2000)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: '),  A%(1000),    B%(2000)
'
check_operator: ),  A%(1000),    B%(2000)

check_literal:lit=',' idx=16 '),  A%(1000),    B%(2000)
'
check_literal:After drop space:',' idx=16 '),  A%(1000),    B%(2000)
'
  ',' != ')'
check_literal: ret0
check_operator:ret0
check_function: '),  A%(1000),    B%(2000)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=16 '),  A%(1000),    B%(2000)
'
    dropping space
check_literal:After drop space:'%' idx=16 '),  A%(1000),    B%(2000)
'
  '%' != ')'
check_literal: ret0
check_literal:lit=' "' idx=16 '),  A%(1000),    B%(2000)
'
    dropping space
check_literal:After drop space:'"' idx=16 '),  A%(1000),    B%(2000)
'
  '"' != ')'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: '),  A%(1000),    B%(2000)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname '),  A%(1000),    B%(2000)
':
check_vname ret0 '),  A%(1000),    B%(2000)
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=16 '),  A%(1000),    B%(2000)
'
    dropping space
check_literal:After drop space:'(' idx=16 '),  A%(1000),    B%(2000)
'
  '(' != ')'
check_literal: ret0
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 '),  A%(1000),    B%(2000)
'
check_literal:lit=' ,' idx=16 '),  A%(1000),    B%(2000)
'
    dropping space
check_literal:After drop space:',' idx=16 '),  A%(1000),    B%(2000)
'
  ',' != ')'
check_literal: ret0
check_literal:lit=' )' idx=16 '),  A%(1000),    B%(2000)
'
    dropping space
check_literal:After drop space:')' idx=16 '),  A%(1000),    B%(2000)
'
check_literal:After while():,  A%(1000),    B%(2000)

check_literal:ret1 
check_variable:ret1 
scan_variable:
scan_vname: 'B%(2),  A%(1000),    B%(2000)
'
scan_vname: ret1 'B'
scan_variable: '%(2),  A%(1000),    B%(2000)
' vname='B'
scan_variable: Ary test '(2),  A%(1000),    B%(2000)
'
check_literal:lit='(' idx=14 '(2),  A%(1000),    B%(2000)
'
check_literal:After drop space:'(' idx=14 '(2),  A%(1000),    B%(2000)
'
check_literal:After while():2),  A%(1000),    B%(2000)

check_literal:ret1 
scan_literal:lit='(' '(2),  A%(1000),    B%(2000)
'
scan_literal:After drop space:(2),  A%(1000),    B%(2000)

scan_literal:while loop:(2),  A%(1000),    B%(2000)

scan_variable: is array
scan_integer:
scan_integer:ret1
check_literal:lit=' ,' idx=16 '),  A%(1000),    B%(2000)
'
    dropping space
check_literal:After drop space:',' idx=16 '),  A%(1000),    B%(2000)
'
  ',' != ')'
check_literal: ret0
scan_literal:lit=' )' '),  A%(1000),    B%(2000)
'
scan_literal:After drop space:),  A%(1000),    B%(2000)

scan_literal:while loop:),  A%(1000),    B%(2000)

scan_variable:ret1 vname='B%' is str:0 int:1 flt:0 ary:1
scan_localglobal: LOCAL variable:''
VAR INFO: '                B%' gbl:0 ref:0 int:1 flt:0 str:0 ary:1 max_str:0 max_ary:2 num_ind:1
check_literal:lit=' ,' idx=17 ',  A%(1000),    B%(2000)
'
    dropping space
check_literal:After drop space:',' idx=17 ',  A%(1000),    B%(2000)
'
check_literal:After while():  A%(1000),    B%(2000)

check_literal:ret1 
scan_literal:lit=' ,' ',  A%(1000),    B%(2000)
'
scan_literal:After drop space:,  A%(1000),    B%(2000)

scan_literal:while loop:,  A%(1000),    B%(2000)

check_variable:
check_vname 'A%(1000),    B%(2000)
':
check_vname ret1 '%(1000),    B%(2000)
':
check_variable: '%(1000),    B%(2000)
'
check_variable: Ary test '(1000),    B%(2000)
'
check_literal:lit='(' idx=22 '(1000),    B%(2000)
'
check_literal:After drop space:'(' idx=22 '(1000),    B%(2000)
'
check_literal:After while():1000),    B%(2000)

check_literal:ret1 
check_variable: is array
check_expression: '1000),    B%(2000)
'
check_eitem: '1000),    B%(2000)
'
check_operator: 1000),    B%(2000)

check_literal:lit=',' idx=23 '1000),    B%(2000)
'
check_literal:After drop space:',' idx=23 '1000),    B%(2000)
'
  ',' != '1'
check_literal: ret0
check_operator:ret0
check_function: '1000),    B%(2000)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=23 '1000),    B%(2000)
'
    dropping space
check_literal:After drop space:'%' idx=23 '1000),    B%(2000)
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=23 '1000),    B%(2000)
'
    dropping space
check_literal:After drop space:'"' idx=23 '1000),    B%(2000)
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '1000),    B%(2000)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: '),    B%(2000)
'
check_operator: ),    B%(2000)

check_literal:lit=',' idx=27 '),    B%(2000)
'
check_literal:After drop space:',' idx=27 '),    B%(2000)
'
  ',' != ')'
check_literal: ret0
check_operator:ret0
check_function: '),    B%(2000)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=27 '),    B%(2000)
'
    dropping space
check_literal:After drop space:'%' idx=27 '),    B%(2000)
'
  '%' != ')'
check_literal: ret0
check_literal:lit=' "' idx=27 '),    B%(2000)
'
    dropping space
check_literal:After drop space:'"' idx=27 '),    B%(2000)
'
  '"' != ')'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: '),    B%(2000)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname '),    B%(2000)
':
check_vname ret0 '),    B%(2000)
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=27 '),    B%(2000)
'
    dropping space
check_literal:After drop space:'(' idx=27 '),    B%(2000)
'
  '(' != ')'
check_literal: ret0
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 '),    B%(2000)
'
check_literal:lit=' ,' idx=27 '),    B%(2000)
'
    dropping space
check_literal:After drop space:',' idx=27 '),    B%(2000)
'
  ',' != ')'
check_literal: ret0
check_literal:lit=' )' idx=27 '),    B%(2000)
'
    dropping space
check_literal:After drop space:')' idx=27 '),    B%(2000)
'
check_literal:After while():,    B%(2000)

check_literal:ret1 
check_variable:ret1 
scan_variable:
scan_vname: '  A%(1000),    B%(2000)
'
scan_vname: ret1 'A'
scan_variable: '%(1000),    B%(2000)
' vname='A'
scan_variable: Ary test '(1000),    B%(2000)
'
check_literal:lit='(' idx=22 '(1000),    B%(2000)
'
check_literal:After drop space:'(' idx=22 '(1000),    B%(2000)
'
check_literal:After while():1000),    B%(2000)

check_literal:ret1 
scan_literal:lit='(' '(1000),    B%(2000)
'
scan_literal:After drop space:(1000),    B%(2000)

scan_literal:while loop:(1000),    B%(2000)

scan_variable: is array
scan_integer:
scan_integer:ret1
check_literal:lit=' ,' idx=27 '),    B%(2000)
'
    dropping space
check_literal:After drop space:',' idx=27 '),    B%(2000)
'
  ',' != ')'
check_literal: ret0
scan_literal:lit=' )' '),    B%(2000)
'
scan_literal:After drop space:),    B%(2000)

scan_literal:while loop:),    B%(2000)

scan_variable:ret1 vname='A%' is str:0 int:1 flt:0 ary:1
scan_localglobal: LOCAL variable:''
VAR INFO: '                A%' gbl:0 ref:0 int:1 flt:0 str:0 ary:1 max_str:0 max_ary:1000 num_ind:1
check_literal:lit=' ,' idx=28 ',    B%(2000)
'
    dropping space
check_literal:After drop space:',' idx=28 ',    B%(2000)
'
check_literal:After while():    B%(2000)

check_literal:ret1 
scan_literal:lit=' ,' ',    B%(2000)
'
scan_literal:After drop space:,    B%(2000)

scan_literal:while loop:,    B%(2000)

check_variable:
check_vname 'B%(2000)
':
check_vname ret1 '%(2000)
':
check_variable: '%(2000)
'
check_variable: Ary test '(2000)
'
check_literal:lit='(' idx=35 '(2000)
'
check_literal:After drop space:'(' idx=35 '(2000)
'
check_literal:After while():2000)

check_literal:ret1 
check_variable: is array
check_expression: '2000)
'
check_eitem: '2000)
'
check_operator: 2000)

check_literal:lit=',' idx=36 '2000)
'
check_literal:After drop space:',' idx=36 '2000)
'
  ',' != '2'
check_literal: ret0
check_operator:ret0
check_function: '2000)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=36 '2000)
'
    dropping space
check_literal:After drop space:'%' idx=36 '2000)
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=36 '2000)
'
    dropping space
check_literal:After drop space:'"' idx=36 '2000)
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2000)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: ')
'
check_operator: )

check_literal:lit=',' idx=40 ')
'
check_literal:After drop space:',' idx=40 ')
'
  ',' != ')'
check_literal: ret0
check_operator:ret0
check_function: ')
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=40 ')
'
    dropping space
check_literal:After drop space:'%' idx=40 ')
'
  '%' != ')'
check_literal: ret0
check_literal:lit=' "' idx=40 ')
'
    dropping space
check_literal:After drop space:'"' idx=40 ')
'
  '"' != ')'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ')
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname ')
':
check_vname ret0 ')
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=40 ')
'
    dropping space
check_literal:After drop space:'(' idx=40 ')
'
  '(' != ')'
check_literal: ret0
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 ')
'
check_literal:lit=' ,' idx=40 ')
'
    dropping space
check_literal:After drop space:',' idx=40 ')
'
  ',' != ')'
check_literal: ret0
check_literal:lit=' )' idx=40 ')
'
    dropping space
check_literal:After drop space:')' idx=40 ')
'
check_literal:After while():

check_literal:ret1 
check_variable:ret1 
scan_variable:
scan_vname: '    B%(2000)
'
scan_vname: ret1 'B'
scan_variable: '%(2000)
' vname='B'
scan_variable: Ary test '(2000)
'
check_literal:lit='(' idx=35 '(2000)
'
check_literal:After drop space:'(' idx=35 '(2000)
'
check_literal:After while():2000)

check_literal:ret1 
scan_literal:lit='(' '(2000)
'
scan_literal:After drop space:(2000)

scan_literal:while loop:(2000)

scan_variable: is array
scan_integer:
scan_integer:ret1
check_literal:lit=' ,' idx=40 ')
'
    dropping space
check_literal:After drop space:',' idx=40 ')
'
  ',' != ')'
check_literal: ret0
scan_literal:lit=' )' ')
'
scan_literal:After drop space:)

scan_literal:while loop:)

scan_variable:ret1 vname='B%' is str:0 int:1 flt:0 ary:1
scan_localglobal: LOCAL variable:''
VAR INFO: '                B%' gbl:0 ref:0 int:1 flt:0 str:0 ary:1 max_str:0 max_ary:2000 num_ind:1
check_literal:lit=' ,' idx=41 '
'
    dropping space
check_literal:After drop space:',' idx=42 ''
check_literal  ret0 Empty test string
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
scan_localglobal:ret1
scan_declare:ret 1
=======================cline==========================
==LOCAL A$(10),B$(1,2)
==
check_declare:
check_literal:lit=' LOCAL' idx=0 'LOCAL A$(10),B$(1,2)
'
    dropping space
check_literal:After drop space:'LOCAL' idx=0 'LOCAL A$(10),B$(1,2)
'
check_literal:After while(): A$(10),B$(1,2)

check_literal:ret1 
check_declare:ret 1
scan_declare:
check_literal:lit=' LOCAL' idx=0 'LOCAL A$(10),B$(1,2)
'
    dropping space
check_literal:After drop space:'LOCAL' idx=0 'LOCAL A$(10),B$(1,2)
'
check_literal:After while(): A$(10),B$(1,2)

check_literal:ret1 
scan_localglobal:
scan_literal:lit=' LOCAL' 'LOCAL A$(10),B$(1,2)
'
scan_literal:After drop space:LOCAL A$(10),B$(1,2)

scan_literal:while loop:LOCAL A$(10),B$(1,2)

scan_literal:while loop:OCAL A$(10),B$(1,2)

scan_literal:while loop:CAL A$(10),B$(1,2)

scan_literal:while loop:AL A$(10),B$(1,2)

scan_literal:while loop:L A$(10),B$(1,2)

check_variable:
check_vname 'A$(10),B$(1,2)
':
check_vname ret1 '$(10),B$(1,2)
':
check_variable: '$(10),B$(1,2)
'
check_variable: Ary test '(10),B$(1,2)
'
check_literal:lit='(' idx=8 '(10),B$(1,2)
'
check_literal:After drop space:'(' idx=8 '(10),B$(1,2)
'
check_literal:After while():10),B$(1,2)

check_literal:ret1 
check_variable: is array
check_expression: '10),B$(1,2)
'
check_eitem: '10),B$(1,2)
'
check_operator: 10),B$(1,2)

check_literal:lit=',' idx=9 '10),B$(1,2)
'
check_literal:After drop space:',' idx=9 '10),B$(1,2)
'
  ',' != '1'
check_literal: ret0
check_operator:ret0
check_function: '10),B$(1,2)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=9 '10),B$(1,2)
'
    dropping space
check_literal:After drop space:'%' idx=9 '10),B$(1,2)
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=9 '10),B$(1,2)
'
    dropping space
check_literal:After drop space:'"' idx=9 '10),B$(1,2)
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '10),B$(1,2)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: '),B$(1,2)
'
check_operator: ),B$(1,2)

check_literal:lit=',' idx=11 '),B$(1,2)
'
check_literal:After drop space:',' idx=11 '),B$(1,2)
'
  ',' != ')'
check_literal: ret0
check_operator:ret0
check_function: '),B$(1,2)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=11 '),B$(1,2)
'
    dropping space
check_literal:After drop space:'%' idx=11 '),B$(1,2)
'
  '%' != ')'
check_literal: ret0
check_literal:lit=' "' idx=11 '),B$(1,2)
'
    dropping space
check_literal:After drop space:'"' idx=11 '),B$(1,2)
'
  '"' != ')'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: '),B$(1,2)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname '),B$(1,2)
':
check_vname ret0 '),B$(1,2)
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=11 '),B$(1,2)
'
    dropping space
check_literal:After drop space:'(' idx=11 '),B$(1,2)
'
  '(' != ')'
check_literal: ret0
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 '),B$(1,2)
'
check_literal:lit=' ,' idx=11 '),B$(1,2)
'
    dropping space
check_literal:After drop space:',' idx=11 '),B$(1,2)
'
  ',' != ')'
check_literal: ret0
check_literal:lit=' )' idx=11 '),B$(1,2)
'
    dropping space
check_literal:After drop space:')' idx=11 '),B$(1,2)
'
check_literal:After while():,B$(1,2)

check_literal:ret1 
check_variable:ret1 
scan_variable:
scan_vname: ' A$(10),B$(1,2)
'
scan_vname: ret1 'A'
scan_variable: '$(10),B$(1,2)
' vname='A'
scan_variable: Ary test '(10),B$(1,2)
'
check_literal:lit='(' idx=8 '(10),B$(1,2)
'
check_literal:After drop space:'(' idx=8 '(10),B$(1,2)
'
check_literal:After while():10),B$(1,2)

check_literal:ret1 
scan_literal:lit='(' '(10),B$(1,2)
'
scan_literal:After drop space:(10),B$(1,2)

scan_literal:while loop:(10),B$(1,2)

scan_variable: is array
scan_integer:
scan_integer:ret1
check_literal:lit=' ,' idx=11 '),B$(1,2)
'
    dropping space
check_literal:After drop space:',' idx=11 '),B$(1,2)
'
  ',' != ')'
check_literal: ret0
scan_literal:lit=' )' '),B$(1,2)
'
scan_literal:After drop space:),B$(1,2)

scan_literal:while loop:),B$(1,2)

scan_variable:ret1 vname='A$' is str:1 int:0 flt:0 ary:0
scan_localglobal: LOCAL variable:''
VAR INFO: '                A$' gbl:0 ref:0 int:0 flt:0 str:1 ary:0 max_str:10 max_ary:0 num_ind:1
check_literal:lit=' ,' idx=12 ',B$(1,2)
'
    dropping space
check_literal:After drop space:',' idx=12 ',B$(1,2)
'
check_literal:After while():B$(1,2)

check_literal:ret1 
scan_literal:lit=' ,' ',B$(1,2)
'
scan_literal:After drop space:,B$(1,2)

scan_literal:while loop:,B$(1,2)

check_variable:
check_vname 'B$(1,2)
':
check_vname ret1 '$(1,2)
':
check_variable: '$(1,2)
'
check_variable: Ary test '(1,2)
'
check_literal:lit='(' idx=15 '(1,2)
'
check_literal:After drop space:'(' idx=15 '(1,2)
'
check_literal:After while():1,2)

check_literal:ret1 
check_variable: is array
check_expression: '1,2)
'
check_eitem: '1,2)
'
check_operator: 1,2)

check_literal:lit=',' idx=16 '1,2)
'
check_literal:After drop space:',' idx=16 '1,2)
'
  ',' != '1'
check_literal: ret0
check_operator:ret0
check_function: '1,2)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=16 '1,2)
'
    dropping space
check_literal:After drop space:'%' idx=16 '1,2)
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=16 '1,2)
'
    dropping space
check_literal:After drop space:'"' idx=16 '1,2)
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '1,2)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: ',2)
'
check_operator: ,2)

check_literal:lit=',' idx=17 ',2)
'
check_literal:After drop space:',' idx=17 ',2)
'
check_literal:After while():2)

check_literal:ret1 
scan_literal:lit=',' 'B$(1,2)
'
scan_literal:After drop space:B$(1,2)

scan_literal:while loop:B$(1,2)

check_function: ',2)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=17 ',2)
'
    dropping space
check_literal:After drop space:'%' idx=17 ',2)
'
  '%' != ','
check_literal: ret0
check_literal:lit=' "' idx=17 ',2)
'
    dropping space
check_literal:After drop space:'"' idx=17 ',2)
'
  '"' != ','
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ',2)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname ',2)
':
check_vname ret0 ',2)
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=17 ',2)
'
    dropping space
check_literal:After drop space:'(' idx=17 ',2)
'
  '(' != ','
check_literal: ret0
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 ',2)
'
check_literal:lit=' ,' idx=17 ',2)
'
    dropping space
check_literal:After drop space:',' idx=17 ',2)
'
check_literal:After while():2)

check_literal:ret1 
check_expression: '2)
'
check_eitem: '2)
'
check_operator: 2)

check_literal:lit=',' idx=18 '2)
'
check_literal:After drop space:',' idx=18 '2)
'
  ',' != '2'
check_literal: ret0
check_operator:ret0
check_function: '2)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=18 '2)
'
    dropping space
check_literal:After drop space:'%' idx=18 '2)
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=18 '2)
'
    dropping space
check_literal:After drop space:'"' idx=18 '2)
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: ')
'
check_operator: )

check_literal:lit=',' idx=19 ')
'
check_literal:After drop space:',' idx=19 ')
'
  ',' != ')'
check_literal: ret0
check_operator:ret0
check_function: ')
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=19 ')
'
    dropping space
check_literal:After drop space:'%' idx=19 ')
'
  '%' != ')'
check_literal: ret0
check_literal:lit=' "' idx=19 ')
'
    dropping space
check_literal:After drop space:'"' idx=19 ')
'
  '"' != ')'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ')
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname ')
':
check_vname ret0 ')
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=19 ')
'
    dropping space
check_literal:After drop space:'(' idx=19 ')
'
  '(' != ')'
check_literal: ret0
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 ')
'
check_literal:lit=' )' idx=19 ')
'
    dropping space
check_literal:After drop space:')' idx=19 ')
'
check_literal:After while():

check_literal:ret1 
check_variable:ret1 
scan_variable:
scan_vname: 'B$(1,2)
'
scan_vname: ret1 'B'
scan_variable: '$(1,2)
' vname='B'
scan_variable: Ary test '(1,2)
'
check_literal:lit='(' idx=15 '(1,2)
'
check_literal:After drop space:'(' idx=15 '(1,2)
'
check_literal:After while():1,2)

check_literal:ret1 
scan_literal:lit='(' '(1,2)
'
scan_literal:After drop space:(1,2)

scan_literal:while loop:(1,2)

scan_variable: is array
scan_integer:
scan_integer:ret1
check_literal:lit=' ,' idx=17 ',2)
'
    dropping space
check_literal:After drop space:',' idx=17 ',2)
'
check_literal:After while():2)

check_literal:ret1 
scan_literal:lit=' ,' ',2)
'
scan_literal:After drop space:,2)

scan_literal:while loop:,2)

scan_integer:
scan_integer:ret1
scan_literal:lit=' )' ')
'
scan_literal:After drop space:)

scan_literal:while loop:)

scan_variable:ret1 vname='B$' is str:1 int:0 flt:0 ary:1
scan_localglobal: LOCAL variable:''
VAR INFO: '                B$' gbl:0 ref:0 int:0 flt:0 str:1 ary:1 max_str:2 max_ary:1 num_ind:2
check_literal:lit=' ,' idx=20 '
'
    dropping space
check_literal:After drop space:',' idx=21 ''
check_literal  ret0 Empty test string
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
scan_localglobal:ret1
scan_declare:ret 1
=======================cline==========================
==LOCAL STR$(12 , 34)
==
check_declare:
check_literal:lit=' LOCAL' idx=0 'LOCAL STR$(12 , 34)
'
    dropping space
check_literal:After drop space:'LOCAL' idx=0 'LOCAL STR$(12 , 34)
'
check_literal:After while(): STR$(12 , 34)

check_literal:ret1 
check_declare:ret 1
scan_declare:
check_literal:lit=' LOCAL' idx=0 'LOCAL STR$(12 , 34)
'
    dropping space
check_literal:After drop space:'LOCAL' idx=0 'LOCAL STR$(12 , 34)
'
check_literal:After while(): STR$(12 , 34)

check_literal:ret1 
scan_localglobal:
scan_literal:lit=' LOCAL' 'LOCAL STR$(12 , 34)
'
scan_literal:After drop space:LOCAL STR$(12 , 34)

scan_literal:while loop:LOCAL STR$(12 , 34)

scan_literal:while loop:OCAL STR$(12 , 34)

scan_literal:while loop:CAL STR$(12 , 34)

scan_literal:while loop:AL STR$(12 , 34)

scan_literal:while loop:L STR$(12 , 34)

check_variable:
check_vname 'STR$(12 , 34)
':
check_vname ret1 '$(12 , 34)
':
check_variable: '$(12 , 34)
'
check_variable: Ary test '(12 , 34)
'
check_literal:lit='(' idx=10 '(12 , 34)
'
check_literal:After drop space:'(' idx=10 '(12 , 34)
'
check_literal:After while():12 , 34)

check_literal:ret1 
check_variable: is array
check_expression: '12 , 34)
'
check_eitem: '12 , 34)
'
check_operator: 12 , 34)

check_literal:lit=',' idx=11 '12 , 34)
'
check_literal:After drop space:',' idx=11 '12 , 34)
'
  ',' != '1'
check_literal: ret0
check_operator:ret0
check_function: '12 , 34)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=11 '12 , 34)
'
    dropping space
check_literal:After drop space:'%' idx=11 '12 , 34)
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=11 '12 , 34)
'
    dropping space
check_literal:After drop space:'"' idx=11 '12 , 34)
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '12 , 34)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: ' , 34)
'
check_operator:  , 34)

check_literal:lit=',' idx=14 ', 34)
'
check_literal:After drop space:',' idx=14 ', 34)
'
check_literal:After while(): 34)

check_literal:ret1 
scan_literal:lit=',' ' STR$(12 , 34)
'
scan_literal:After drop space: STR$(12 , 34)

scan_literal:while loop: STR$(12 , 34)

check_function: ', 34)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=13 ' , 34)
'
    dropping space
check_literal:After drop space:'%' idx=14 ', 34)
'
  '%' != ','
check_literal: ret0
check_literal:lit=' "' idx=13 ' , 34)
'
    dropping space
check_literal:After drop space:'"' idx=14 ', 34)
'
  '"' != ','
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ', 34)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname ', 34)
':
check_vname ret0 ', 34)
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=13 ' , 34)
'
    dropping space
check_literal:After drop space:'(' idx=14 ', 34)
'
  '(' != ','
check_literal: ret0
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 ' , 34)
'
check_literal:lit=' ,' idx=13 ' , 34)
'
    dropping space
check_literal:After drop space:',' idx=14 ', 34)
'
check_literal:After while(): 34)

check_literal:ret1 
check_expression: '34)
'
check_eitem: '34)
'
check_operator: 34)

check_literal:lit=',' idx=16 '34)
'
check_literal:After drop space:',' idx=16 '34)
'
  ',' != '3'
check_literal: ret0
check_operator:ret0
check_function: '34)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=16 '34)
'
    dropping space
check_literal:After drop space:'%' idx=16 '34)
'
  '%' != '3'
check_literal: ret0
check_literal:lit=' "' idx=16 '34)
'
    dropping space
check_literal:After drop space:'"' idx=16 '34)
'
  '"' != '3'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '34)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: ')
'
check_operator: )

check_literal:lit=',' idx=18 ')
'
check_literal:After drop space:',' idx=18 ')
'
  ',' != ')'
check_literal: ret0
check_operator:ret0
check_function: ')
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=18 ')
'
    dropping space
check_literal:After drop space:'%' idx=18 ')
'
  '%' != ')'
check_literal: ret0
check_literal:lit=' "' idx=18 ')
'
    dropping space
check_literal:After drop space:'"' idx=18 ')
'
  '"' != ')'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ')
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname ')
':
check_vname ret0 ')
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=18 ')
'
    dropping space
check_literal:After drop space:'(' idx=18 ')
'
  '(' != ')'
check_literal: ret0
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 ')
'
check_literal:lit=' )' idx=18 ')
'
    dropping space
check_literal:After drop space:')' idx=18 ')
'
check_literal:After while():

check_literal:ret1 
check_variable:ret1 
scan_variable:
scan_vname: ' STR$(12 , 34)
'
scan_vname: ret1 'STR'
scan_variable: '$(12 , 34)
' vname='STR'
scan_variable: Ary test '(12 , 34)
'
check_literal:lit='(' idx=10 '(12 , 34)
'
check_literal:After drop space:'(' idx=10 '(12 , 34)
'
check_literal:After while():12 , 34)

check_literal:ret1 
scan_literal:lit='(' '(12 , 34)
'
scan_literal:After drop space:(12 , 34)

scan_literal:while loop:(12 , 34)

scan_variable: is array
scan_integer:
scan_integer:ret1
check_literal:lit=' ,' idx=13 ' , 34)
'
    dropping space
check_literal:After drop space:',' idx=14 ', 34)
'
check_literal:After while(): 34)

check_literal:ret1 
scan_literal:lit=' ,' ' , 34)
'
scan_literal:After drop space:, 34)

scan_literal:while loop:, 34)

scan_integer:
scan_integer:ret1
scan_literal:lit=' )' ')
'
scan_literal:After drop space:)

scan_literal:while loop:)

scan_variable:ret1 vname='STR$' is str:1 int:0 flt:0 ary:1
scan_localglobal: LOCAL variable:''
VAR INFO: '              STR$' gbl:0 ref:0 int:0 flt:0 str:1 ary:1 max_str:34 max_ary:12 num_ind:2
check_literal:lit=' ,' idx=19 '
'
    dropping space
check_literal:After drop space:',' idx=20 ''
check_literal  ret0 Empty test string
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
scan_localglobal:ret1
scan_declare:ret 1
=======================cline==========================
==GLOBAL A%,B,C$(5),D$(20,40)
==
check_declare:
check_literal:lit=' LOCAL' idx=0 'GLOBAL A%,B,C$(5),D$(20,40)
'
    dropping space
check_literal:After drop space:'LOCAL' idx=0 'GLOBAL A%,B,C$(5),D$(20,40)
'
  'L' != 'G'
check_literal: ret0
check_literal:lit=' GLOBAL' idx=0 'GLOBAL A%,B,C$(5),D$(20,40)
'
    dropping space
check_literal:After drop space:'GLOBAL' idx=0 'GLOBAL A%,B,C$(5),D$(20,40)
'
check_literal:After while(): A%,B,C$(5),D$(20,40)

check_literal:ret1 
check_declare:ret 1
scan_declare:
check_literal:lit=' LOCAL' idx=0 'GLOBAL A%,B,C$(5),D$(20,40)
'
    dropping space
check_literal:After drop space:'LOCAL' idx=0 'GLOBAL A%,B,C$(5),D$(20,40)
'
  'L' != 'G'
check_literal: ret0
check_literal:lit=' GLOBAL' idx=0 'GLOBAL A%,B,C$(5),D$(20,40)
'
    dropping space
check_literal:After drop space:'GLOBAL' idx=0 'GLOBAL A%,B,C$(5),D$(20,40)
'
check_literal:After while(): A%,B,C$(5),D$(20,40)

check_literal:ret1 
scan_localglobal:
scan_literal:lit=' GLOBAL' 'GLOBAL A%,B,C$(5),D$(20,40)
'
scan_literal:After drop space:GLOBAL A%,B,C$(5),D$(20,40)

scan_literal:while loop:GLOBAL A%,B,C$(5),D$(20,40)

scan_literal:while loop:LOBAL A%,B,C$(5),D$(20,40)

scan_literal:while loop:OBAL A%,B,C$(5),D$(20,40)

scan_literal:while loop:BAL A%,B,C$(5),D$(20,40)

scan_literal:while loop:AL A%,B,C$(5),D$(20,40)

scan_literal:while loop:L A%,B,C$(5),D$(20,40)

check_variable:
check_vname 'A%,B,C$(5),D$(20,40)
':
check_vname ret1 '%,B,C$(5),D$(20,40)
':
check_variable: '%,B,C$(5),D$(20,40)
'
check_variable: Ary test ',B,C$(5),D$(20,40)
'
check_literal:lit='(' idx=9 ',B,C$(5),D$(20,40)
'
check_literal:After drop space:'(' idx=9 ',B,C$(5),D$(20,40)
'
  '(' != ','
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
scan_variable:
scan_vname: ' A%,B,C$(5),D$(20,40)
'
scan_vname: ret1 'A'
scan_variable: '%,B,C$(5),D$(20,40)
' vname='A'
scan_variable: Ary test ',B,C$(5),D$(20,40)
'
check_literal:lit='(' idx=9 ',B,C$(5),D$(20,40)
'
check_literal:After drop space:'(' idx=9 ',B,C$(5),D$(20,40)
'
  '(' != ','
check_literal: ret0
scan_variable:ret1 vname='A%' is str:0 int:1 flt:0 ary:0
scan_localglobal: GLOBAL variable:''
VAR INFO: '                A%' gbl:1 ref:0 int:1 flt:0 str:0 ary:0 max_str:0 max_ary:0 num_ind:0
check_literal:lit=' ,' idx=9 ',B,C$(5),D$(20,40)
'
    dropping space
check_literal:After drop space:',' idx=9 ',B,C$(5),D$(20,40)
'
check_literal:After while():B,C$(5),D$(20,40)

check_literal:ret1 
scan_literal:lit=' ,' ',B,C$(5),D$(20,40)
'
scan_literal:After drop space:,B,C$(5),D$(20,40)

scan_literal:while loop:,B,C$(5),D$(20,40)

check_variable:
check_vname 'B,C$(5),D$(20,40)
':
check_vname ret1 ',C$(5),D$(20,40)
':
check_variable: ',C$(5),D$(20,40)
'
check_variable: Ary test ',C$(5),D$(20,40)
'
check_literal:lit='(' idx=11 ',C$(5),D$(20,40)
'
check_literal:After drop space:'(' idx=11 ',C$(5),D$(20,40)
'
  '(' != ','
check_literal: ret0
check_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variable:ret1 
scan_variable:
scan_vname: 'B,C$(5),D$(20,40)
'
scan_vname: ret1 'B'
scan_variable: ',C$(5),D$(20,40)
' vname='B'
scan_variable: Ary test ',C$(5),D$(20,40)
'
check_literal:lit='(' idx=11 ',C$(5),D$(20,40)
'
check_literal:After drop space:'(' idx=11 ',C$(5),D$(20,40)
'
  '(' != ','
check_literal: ret0
scan_variable:ret1 vname='B' is str:0 int:0 flt:1 ary:0
scan_localglobal: GLOBAL variable:''
VAR INFO: '                 B' gbl:1 ref:0 int:0 flt:1 str:0 ary:0 max_str:0 max_ary:0 num_ind:0
check_literal:lit=' ,' idx=11 ',C$(5),D$(20,40)
'
    dropping space
check_literal:After drop space:',' idx=11 ',C$(5),D$(20,40)
'
check_literal:After while():C$(5),D$(20,40)

check_literal:ret1 
scan_literal:lit=' ,' ',C$(5),D$(20,40)
'
scan_literal:After drop space:,C$(5),D$(20,40)

scan_literal:while loop:,C$(5),D$(20,40)

check_variable:
check_vname 'C$(5),D$(20,40)
':
check_vname ret1 '$(5),D$(20,40)
':
check_variable: '$(5),D$(20,40)
'
check_variable: Ary test '(5),D$(20,40)
'
check_literal:lit='(' idx=14 '(5),D$(20,40)
'
check_literal:After drop space:'(' idx=14 '(5),D$(20,40)
'
check_literal:After while():5),D$(20,40)

check_literal:ret1 
check_variable: is array
check_expression: '5),D$(20,40)
'
check_eitem: '5),D$(20,40)
'
check_operator: 5),D$(20,40)

check_literal:lit=',' idx=15 '5),D$(20,40)
'
check_literal:After drop space:',' idx=15 '5),D$(20,40)
'
  ',' != '5'
check_literal: ret0
check_operator:ret0
check_function: '5),D$(20,40)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=15 '5),D$(20,40)
'
    dropping space
check_literal:After drop space:'%' idx=15 '5),D$(20,40)
'
  '%' != '5'
check_literal: ret0
check_literal:lit=' "' idx=15 '5),D$(20,40)
'
    dropping space
check_literal:After drop space:'"' idx=15 '5),D$(20,40)
'
  '"' != '5'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '5),D$(20,40)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: '),D$(20,40)
'
check_operator: ),D$(20,40)

check_literal:lit=',' idx=16 '),D$(20,40)
'
check_literal:After drop space:',' idx=16 '),D$(20,40)
'
  ',' != ')'
check_literal: ret0
check_operator:ret0
check_function: '),D$(20,40)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=16 '),D$(20,40)
'
    dropping space
check_literal:After drop space:'%' idx=16 '),D$(20,40)
'
  '%' != ')'
check_literal: ret0
check_literal:lit=' "' idx=16 '),D$(20,40)
'
    dropping space
check_literal:After drop space:'"' idx=16 '),D$(20,40)
'
  '"' != ')'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: '),D$(20,40)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname '),D$(20,40)
':
check_vname ret0 '),D$(20,40)
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=16 '),D$(20,40)
'
    dropping space
check_literal:After drop space:'(' idx=16 '),D$(20,40)
'
  '(' != ')'
check_literal: ret0
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 '),D$(20,40)
'
check_literal:lit=' ,' idx=16 '),D$(20,40)
'
    dropping space
check_literal:After drop space:',' idx=16 '),D$(20,40)
'
  ',' != ')'
check_literal: ret0
check_literal:lit=' )' idx=16 '),D$(20,40)
'
    dropping space
check_literal:After drop space:')' idx=16 '),D$(20,40)
'
check_literal:After while():,D$(20,40)

check_literal:ret1 
check_variable:ret1 
scan_variable:
scan_vname: 'C$(5),D$(20,40)
'
scan_vname: ret1 'C'
scan_variable: '$(5),D$(20,40)
' vname='C'
scan_variable: Ary test '(5),D$(20,40)
'
check_literal:lit='(' idx=14 '(5),D$(20,40)
'
check_literal:After drop space:'(' idx=14 '(5),D$(20,40)
'
check_literal:After while():5),D$(20,40)

check_literal:ret1 
scan_literal:lit='(' '(5),D$(20,40)
'
scan_literal:After drop space:(5),D$(20,40)

scan_literal:while loop:(5),D$(20,40)

scan_variable: is array
scan_integer:
scan_integer:ret1
check_literal:lit=' ,' idx=16 '),D$(20,40)
'
    dropping space
check_literal:After drop space:',' idx=16 '),D$(20,40)
'
  ',' != ')'
check_literal: ret0
scan_literal:lit=' )' '),D$(20,40)
'
scan_literal:After drop space:),D$(20,40)

scan_literal:while loop:),D$(20,40)

scan_variable:ret1 vname='C$' is str:1 int:0 flt:0 ary:0
scan_localglobal: GLOBAL variable:''
VAR INFO: '                C$' gbl:1 ref:0 int:0 flt:0 str:1 ary:0 max_str:5 max_ary:0 num_ind:1
check_literal:lit=' ,' idx=17 ',D$(20,40)
'
    dropping space
check_literal:After drop space:',' idx=17 ',D$(20,40)
'
check_literal:After while():D$(20,40)

check_literal:ret1 
scan_literal:lit=' ,' ',D$(20,40)
'
scan_literal:After drop space:,D$(20,40)

scan_literal:while loop:,D$(20,40)

check_variable:
check_vname 'D$(20,40)
':
check_vname ret1 '$(20,40)
':
check_variable: '$(20,40)
'
check_variable: Ary test '(20,40)
'
check_literal:lit='(' idx=20 '(20,40)
'
check_literal:After drop space:'(' idx=20 '(20,40)
'
check_literal:After while():20,40)

check_literal:ret1 
check_variable: is array
check_expression: '20,40)
'
check_eitem: '20,40)
'
check_operator: 20,40)

check_literal:lit=',' idx=21 '20,40)
'
check_literal:After drop space:',' idx=21 '20,40)
'
  ',' != '2'
check_literal: ret0
check_operator:ret0
check_function: '20,40)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=21 '20,40)
'
    dropping space
check_literal:After drop space:'%' idx=21 '20,40)
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=21 '20,40)
'
    dropping space
check_literal:After drop space:'"' idx=21 '20,40)
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '20,40)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: ',40)
'
check_operator: ,40)

check_literal:lit=',' idx=23 ',40)
'
check_literal:After drop space:',' idx=23 ',40)
'
check_literal:After while():40)

check_literal:ret1 
scan_literal:lit=',' 'D$(20,40)
'
scan_literal:After drop space:D$(20,40)

scan_literal:while loop:D$(20,40)

check_function: ',40)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=23 ',40)
'
    dropping space
check_literal:After drop space:'%' idx=23 ',40)
'
  '%' != ','
check_literal: ret0
check_literal:lit=' "' idx=23 ',40)
'
    dropping space
check_literal:After drop space:'"' idx=23 ',40)
'
  '"' != ','
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ',40)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname ',40)
':
check_vname ret0 ',40)
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=23 ',40)
'
    dropping space
check_literal:After drop space:'(' idx=23 ',40)
'
  '(' != ','
check_literal: ret0
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 ',40)
'
check_literal:lit=' ,' idx=23 ',40)
'
    dropping space
check_literal:After drop space:',' idx=23 ',40)
'
check_literal:After while():40)

check_literal:ret1 
check_expression: '40)
'
check_eitem: '40)
'
check_operator: 40)

check_literal:lit=',' idx=24 '40)
'
check_literal:After drop space:',' idx=24 '40)
'
  ',' != '4'
check_literal: ret0
check_operator:ret0
check_function: '40)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=24 '40)
'
    dropping space
check_literal:After drop space:'%' idx=24 '40)
'
  '%' != '4'
check_literal: ret0
check_literal:lit=' "' idx=24 '40)
'
    dropping space
check_literal:After drop space:'"' idx=24 '40)
'
  '"' != '4'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '40)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: ')
'
check_operator: )

check_literal:lit=',' idx=26 ')
'
check_literal:After drop space:',' idx=26 ')
'
  ',' != ')'
check_literal: ret0
check_operator:ret0
check_function: ')
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=26 ')
'
    dropping space
check_literal:After drop space:'%' idx=26 ')
'
  '%' != ')'
check_literal: ret0
check_literal:lit=' "' idx=26 ')
'
    dropping space
check_literal:After drop space:'"' idx=26 ')
'
  '"' != ')'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ')
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname ')
':
check_vname ret0 ')
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=26 ')
'
    dropping space
check_literal:After drop space:'(' idx=26 ')
'
  '(' != ')'
check_literal: ret0
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 ')
'
check_literal:lit=' )' idx=26 ')
'
    dropping space
check_literal:After drop space:')' idx=26 ')
'
check_literal:After while():

check_literal:ret1 
check_variable:ret1 
scan_variable:
scan_vname: 'D$(20,40)
'
scan_vname: ret1 'D'
scan_variable: '$(20,40)
' vname='D'
scan_variable: Ary test '(20,40)
'
check_literal:lit='(' idx=20 '(20,40)
'
check_literal:After drop space:'(' idx=20 '(20,40)
'
check_literal:After while():20,40)

check_literal:ret1 
scan_literal:lit='(' '(20,40)
'
scan_literal:After drop space:(20,40)

scan_literal:while loop:(20,40)

scan_variable: is array
scan_integer:
scan_integer:ret1
check_literal:lit=' ,' idx=23 ',40)
'
    dropping space
check_literal:After drop space:',' idx=23 ',40)
'
check_literal:After while():40)

check_literal:ret1 
scan_literal:lit=' ,' ',40)
'
scan_literal:After drop space:,40)

scan_literal:while loop:,40)

scan_integer:
scan_integer:ret1
scan_literal:lit=' )' ')
'
scan_literal:After drop space:)

scan_literal:while loop:)

scan_variable:ret1 vname='D$' is str:1 int:0 flt:0 ary:1
scan_localglobal: GLOBAL variable:''
VAR INFO: '                D$' gbl:1 ref:0 int:0 flt:0 str:1 ary:1 max_str:40 max_ary:20 num_ind:2
check_literal:lit=' ,' idx=27 '
'
    dropping space
check_literal:After drop space:',' idx=28 ''
check_literal  ret0 Empty test string
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
scan_localglobal:ret1
scan_declare:ret 1
=======================cline==========================
==A= A + (2*3+3*Z%-   ABC%*1.1)
==
check_declare:
check_literal:lit=' LOCAL' idx=0 'A= A + (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'LOCAL' idx=0 'A= A + (2*3+3*Z%-   ABC%*1.1)
'
  'L' != 'A'
check_literal: ret0
check_literal:lit=' GLOBAL' idx=0 'A= A + (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'GLOBAL' idx=0 'A= A + (2*3+3*Z%-   ABC%*1.1)
'
  'G' != 'A'
check_literal: ret0
check_declare:ret 0
scan_cline:
check_line:
check_assignment:
check_variable:
check_vname 'A= A + (2*3+3*Z%-   ABC%*1.1)
':
check_vname ret1 '= A + (2*3+3*Z%-   ABC%*1.1)
':
check_variable: '= A + (2*3+3*Z%-   ABC%*1.1)
'
check_variable: Ary test '= A + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:lit='(' idx=1 '= A + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:'(' idx=1 '= A + (2*3+3*Z%-   ABC%*1.1)
'
  '(' != '='
check_literal: ret0
check_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variable:ret1 
check_literal:lit=' =' idx=1 '= A + (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'=' idx=1 '= A + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After while(): A + (2*3+3*Z%-   ABC%*1.1)

check_literal:ret1 
check_expression: 'A + (2*3+3*Z%-   ABC%*1.1)
'
check_eitem: 'A + (2*3+3*Z%-   ABC%*1.1)
'
check_operator: A + (2*3+3*Z%-   ABC%*1.1)

check_literal:lit=',' idx=3 'A + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=3 'A + (2*3+3*Z%-   ABC%*1.1)
'
  ',' != 'A'
check_literal: ret0
check_operator:ret0
check_function: 'A + (2*3+3*Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=3 'A + (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=3 'A + (2*3+3*Z%-   ABC%*1.1)
'
  '%' != 'A'
check_literal: ret0
check_literal:lit=' "' idx=3 'A + (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=3 'A + (2*3+3*Z%-   ABC%*1.1)
'
  '"' != 'A'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'A + (2*3+3*Z%-   ABC%*1.1)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'A + (2*3+3*Z%-   ABC%*1.1)
':
check_vname ret1 ' + (2*3+3*Z%-   ABC%*1.1)
':
check_variable: ' + (2*3+3*Z%-   ABC%*1.1)
'
check_variable: Ary test ' + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:lit='(' idx=4 ' + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:'(' idx=4 ' + (2*3+3*Z%-   ABC%*1.1)
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variable:ret1 
check_eitem:ret1
check_eitem: ' + (2*3+3*Z%-   ABC%*1.1)
'
check_operator:  + (2*3+3*Z%-   ABC%*1.1)

check_literal:lit=',' idx=5 '+ (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=5 '+ (2*3+3*Z%-   ABC%*1.1)
'
  ',' != '+'
check_literal: ret0
check_operator: ret1
check_eitem:ret1
check_eitem: ' (2*3+3*Z%-   ABC%*1.1)
'
check_operator:  (2*3+3*Z%-   ABC%*1.1)

check_literal:lit=',' idx=7 '(2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=7 '(2*3+3*Z%-   ABC%*1.1)
'
  ',' != '('
check_literal: ret0
check_operator:ret0
check_function: '(2*3+3*Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=6 ' (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=7 '(2*3+3*Z%-   ABC%*1.1)
'
  '%' != '('
check_literal: ret0
check_literal:lit=' "' idx=6 ' (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=7 '(2*3+3*Z%-   ABC%*1.1)
'
  '"' != '('
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: '(2*3+3*Z%-   ABC%*1.1)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname '(2*3+3*Z%-   ABC%*1.1)
':
check_vname ret0 '(2*3+3*Z%-   ABC%*1.1)
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=6 ' (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'(' idx=7 '(2*3+3*Z%-   ABC%*1.1)
'
check_literal:After while():2*3+3*Z%-   ABC%*1.1)

check_literal:ret1 
check_sub_expr: ret1
check_eitem:ret1
check_eitem: '2*3+3*Z%-   ABC%*1.1)
'
check_operator: 2*3+3*Z%-   ABC%*1.1)

check_literal:lit=',' idx=8 '2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=8 '2*3+3*Z%-   ABC%*1.1)
'
  ',' != '2'
check_literal: ret0
check_operator:ret0
check_function: '2*3+3*Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=8 '2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=8 '2*3+3*Z%-   ABC%*1.1)
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=8 '2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=8 '2*3+3*Z%-   ABC%*1.1)
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2*3+3*Z%-   ABC%*1.1)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: '*3+3*Z%-   ABC%*1.1)
'
check_operator: *3+3*Z%-   ABC%*1.1)

check_literal:lit=',' idx=9 '*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=9 '*3+3*Z%-   ABC%*1.1)
'
  ',' != '*'
check_literal: ret0
check_operator: ret1
check_eitem:ret1
check_eitem: '3+3*Z%-   ABC%*1.1)
'
check_operator: 3+3*Z%-   ABC%*1.1)

check_literal:lit=',' idx=10 '3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=10 '3+3*Z%-   ABC%*1.1)
'
  ',' != '3'
check_literal: ret0
check_operator:ret0
check_function: '3+3*Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=10 '3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=10 '3+3*Z%-   ABC%*1.1)
'
  '%' != '3'
check_literal: ret0
check_literal:lit=' "' idx=10 '3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=10 '3+3*Z%-   ABC%*1.1)
'
  '"' != '3'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '3+3*Z%-   ABC%*1.1)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: '+3*Z%-   ABC%*1.1)
'
check_operator: +3*Z%-   ABC%*1.1)

check_literal:lit=',' idx=11 '+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=11 '+3*Z%-   ABC%*1.1)
'
  ',' != '+'
check_literal: ret0
check_operator: ret1
check_eitem:ret1
check_eitem: '3*Z%-   ABC%*1.1)
'
check_operator: 3*Z%-   ABC%*1.1)

check_literal:lit=',' idx=12 '3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=12 '3*Z%-   ABC%*1.1)
'
  ',' != '3'
check_literal: ret0
check_operator:ret0
check_function: '3*Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=12 '3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=12 '3*Z%-   ABC%*1.1)
'
  '%' != '3'
check_literal: ret0
check_literal:lit=' "' idx=12 '3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=12 '3*Z%-   ABC%*1.1)
'
  '"' != '3'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '3*Z%-   ABC%*1.1)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: '*Z%-   ABC%*1.1)
'
check_operator: *Z%-   ABC%*1.1)

check_literal:lit=',' idx=13 '*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=13 '*Z%-   ABC%*1.1)
'
  ',' != '*'
check_literal: ret0
check_operator: ret1
check_eitem:ret1
check_eitem: 'Z%-   ABC%*1.1)
'
check_operator: Z%-   ABC%*1.1)

check_literal:lit=',' idx=14 'Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=14 'Z%-   ABC%*1.1)
'
  ',' != 'Z'
check_literal: ret0
check_operator:ret0
check_function: 'Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=14 'Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=14 'Z%-   ABC%*1.1)
'
  '%' != 'Z'
check_literal: ret0
check_literal:lit=' "' idx=14 'Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=14 'Z%-   ABC%*1.1)
'
  '"' != 'Z'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'Z%-   ABC%*1.1)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'Z%-   ABC%*1.1)
':
check_vname ret1 '%-   ABC%*1.1)
':
check_variable: '%-   ABC%*1.1)
'
check_variable: Ary test '-   ABC%*1.1)
'
check_literal:lit='(' idx=16 '-   ABC%*1.1)
'
check_literal:After drop space:'(' idx=16 '-   ABC%*1.1)
'
  '(' != '-'
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_eitem:ret1
check_eitem: '-   ABC%*1.1)
'
check_operator: -   ABC%*1.1)

check_literal:lit=',' idx=16 '-   ABC%*1.1)
'
check_literal:After drop space:',' idx=16 '-   ABC%*1.1)
'
  ',' != '-'
check_literal: ret0
check_operator: ret1
check_eitem:ret1
check_eitem: '   ABC%*1.1)
'
check_operator:    ABC%*1.1)

check_literal:lit=',' idx=20 'ABC%*1.1)
'
check_literal:After drop space:',' idx=20 'ABC%*1.1)
'
  ',' != 'A'
check_literal: ret0
check_operator:ret0
check_function: 'ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=17 '   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=20 'ABC%*1.1)
'
  '%' != 'A'
check_literal: ret0
check_literal:lit=' "' idx=17 '   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=20 'ABC%*1.1)
'
  '"' != 'A'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'ABC%*1.1)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'ABC%*1.1)
':
check_vname ret1 '%*1.1)
':
check_variable: '%*1.1)
'
check_variable: Ary test '*1.1)
'
check_literal:lit='(' idx=24 '*1.1)
'
check_literal:After drop space:'(' idx=24 '*1.1)
'
  '(' != '*'
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_eitem:ret1
check_eitem: '*1.1)
'
check_operator: *1.1)

check_literal:lit=',' idx=24 '*1.1)
'
check_literal:After drop space:',' idx=24 '*1.1)
'
  ',' != '*'
check_literal: ret0
check_operator: ret1
check_eitem:ret1
check_eitem: '1.1)
'
check_operator: 1.1)

check_literal:lit=',' idx=25 '1.1)
'
check_literal:After drop space:',' idx=25 '1.1)
'
  ',' != '1'
check_literal: ret0
check_operator:ret0
check_function: '1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=25 '1.1)
'
    dropping space
check_literal:After drop space:'%' idx=25 '1.1)
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=25 '1.1)
'
    dropping space
check_literal:After drop space:'"' idx=25 '1.1)
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret1
check_number: ret1
check_eitem:ret1
check_eitem: ')
'
check_operator: )

check_literal:lit=',' idx=28 ')
'
check_literal:After drop space:',' idx=28 ')
'
  ',' != ')'
check_literal: ret0
check_operator:ret0
check_function: ')
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=28 ')
'
    dropping space
check_literal:After drop space:'%' idx=28 ')
'
  '%' != ')'
check_literal: ret0
check_literal:lit=' "' idx=28 ')
'
    dropping space
check_literal:After drop space:'"' idx=28 ')
'
  '"' != ')'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ')
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname ')
':
check_vname ret0 ')
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=28 ')
'
    dropping space
check_literal:After drop space:'(' idx=28 ')
'
  '(' != ')'
check_literal: ret0
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 ')
'
check_assignment:ret1
check_line:ret1
scan_cline: Checked len=2, ')
'
scan_line:
check_assignment:
check_variable:
check_vname 'A= A + (2*3+3*Z%-   ABC%*1.1)
':
check_vname ret1 '= A + (2*3+3*Z%-   ABC%*1.1)
':
check_variable: '= A + (2*3+3*Z%-   ABC%*1.1)
'
check_variable: Ary test '= A + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:lit='(' idx=1 '= A + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:'(' idx=1 '= A + (2*3+3*Z%-   ABC%*1.1)
'
  '(' != '='
check_literal: ret0
check_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variable:ret1 
check_literal:lit=' =' idx=1 '= A + (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'=' idx=1 '= A + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After while(): A + (2*3+3*Z%-   ABC%*1.1)

check_literal:ret1 
check_expression: 'A + (2*3+3*Z%-   ABC%*1.1)
'
check_eitem: 'A + (2*3+3*Z%-   ABC%*1.1)
'
check_operator: A + (2*3+3*Z%-   ABC%*1.1)

check_literal:lit=',' idx=3 'A + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=3 'A + (2*3+3*Z%-   ABC%*1.1)
'
  ',' != 'A'
check_literal: ret0
check_operator:ret0
check_function: 'A + (2*3+3*Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=3 'A + (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=3 'A + (2*3+3*Z%-   ABC%*1.1)
'
  '%' != 'A'
check_literal: ret0
check_literal:lit=' "' idx=3 'A + (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=3 'A + (2*3+3*Z%-   ABC%*1.1)
'
  '"' != 'A'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'A + (2*3+3*Z%-   ABC%*1.1)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'A + (2*3+3*Z%-   ABC%*1.1)
':
check_vname ret1 ' + (2*3+3*Z%-   ABC%*1.1)
':
check_variable: ' + (2*3+3*Z%-   ABC%*1.1)
'
check_variable: Ary test ' + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:lit='(' idx=4 ' + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:'(' idx=4 ' + (2*3+3*Z%-   ABC%*1.1)
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variable:ret1 
check_eitem:ret1
check_eitem: ' + (2*3+3*Z%-   ABC%*1.1)
'
check_operator:  + (2*3+3*Z%-   ABC%*1.1)

check_literal:lit=',' idx=5 '+ (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=5 '+ (2*3+3*Z%-   ABC%*1.1)
'
  ',' != '+'
check_literal: ret0
check_operator: ret1
check_eitem:ret1
check_eitem: ' (2*3+3*Z%-   ABC%*1.1)
'
check_operator:  (2*3+3*Z%-   ABC%*1.1)

check_literal:lit=',' idx=7 '(2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=7 '(2*3+3*Z%-   ABC%*1.1)
'
  ',' != '('
check_literal: ret0
check_operator:ret0
check_function: '(2*3+3*Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=6 ' (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=7 '(2*3+3*Z%-   ABC%*1.1)
'
  '%' != '('
check_literal: ret0
check_literal:lit=' "' idx=6 ' (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=7 '(2*3+3*Z%-   ABC%*1.1)
'
  '"' != '('
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: '(2*3+3*Z%-   ABC%*1.1)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname '(2*3+3*Z%-   ABC%*1.1)
':
check_vname ret0 '(2*3+3*Z%-   ABC%*1.1)
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=6 ' (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'(' idx=7 '(2*3+3*Z%-   ABC%*1.1)
'
check_literal:After while():2*3+3*Z%-   ABC%*1.1)

check_literal:ret1 
check_sub_expr: ret1
check_eitem:ret1
check_eitem: '2*3+3*Z%-   ABC%*1.1)
'
check_operator: 2*3+3*Z%-   ABC%*1.1)

check_literal:lit=',' idx=8 '2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=8 '2*3+3*Z%-   ABC%*1.1)
'
  ',' != '2'
check_literal: ret0
check_operator:ret0
check_function: '2*3+3*Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=8 '2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=8 '2*3+3*Z%-   ABC%*1.1)
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=8 '2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=8 '2*3+3*Z%-   ABC%*1.1)
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2*3+3*Z%-   ABC%*1.1)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: '*3+3*Z%-   ABC%*1.1)
'
check_operator: *3+3*Z%-   ABC%*1.1)

check_literal:lit=',' idx=9 '*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=9 '*3+3*Z%-   ABC%*1.1)
'
  ',' != '*'
check_literal: ret0
check_operator: ret1
check_eitem:ret1
check_eitem: '3+3*Z%-   ABC%*1.1)
'
check_operator: 3+3*Z%-   ABC%*1.1)

check_literal:lit=',' idx=10 '3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=10 '3+3*Z%-   ABC%*1.1)
'
  ',' != '3'
check_literal: ret0
check_operator:ret0
check_function: '3+3*Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=10 '3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=10 '3+3*Z%-   ABC%*1.1)
'
  '%' != '3'
check_literal: ret0
check_literal:lit=' "' idx=10 '3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=10 '3+3*Z%-   ABC%*1.1)
'
  '"' != '3'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '3+3*Z%-   ABC%*1.1)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: '+3*Z%-   ABC%*1.1)
'
check_operator: +3*Z%-   ABC%*1.1)

check_literal:lit=',' idx=11 '+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=11 '+3*Z%-   ABC%*1.1)
'
  ',' != '+'
check_literal: ret0
check_operator: ret1
check_eitem:ret1
check_eitem: '3*Z%-   ABC%*1.1)
'
check_operator: 3*Z%-   ABC%*1.1)

check_literal:lit=',' idx=12 '3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=12 '3*Z%-   ABC%*1.1)
'
  ',' != '3'
check_literal: ret0
check_operator:ret0
check_function: '3*Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=12 '3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=12 '3*Z%-   ABC%*1.1)
'
  '%' != '3'
check_literal: ret0
check_literal:lit=' "' idx=12 '3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=12 '3*Z%-   ABC%*1.1)
'
  '"' != '3'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '3*Z%-   ABC%*1.1)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: '*Z%-   ABC%*1.1)
'
check_operator: *Z%-   ABC%*1.1)

check_literal:lit=',' idx=13 '*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=13 '*Z%-   ABC%*1.1)
'
  ',' != '*'
check_literal: ret0
check_operator: ret1
check_eitem:ret1
check_eitem: 'Z%-   ABC%*1.1)
'
check_operator: Z%-   ABC%*1.1)

check_literal:lit=',' idx=14 'Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=14 'Z%-   ABC%*1.1)
'
  ',' != 'Z'
check_literal: ret0
check_operator:ret0
check_function: 'Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=14 'Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=14 'Z%-   ABC%*1.1)
'
  '%' != 'Z'
check_literal: ret0
check_literal:lit=' "' idx=14 'Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=14 'Z%-   ABC%*1.1)
'
  '"' != 'Z'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'Z%-   ABC%*1.1)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'Z%-   ABC%*1.1)
':
check_vname ret1 '%-   ABC%*1.1)
':
check_variable: '%-   ABC%*1.1)
'
check_variable: Ary test '-   ABC%*1.1)
'
check_literal:lit='(' idx=16 '-   ABC%*1.1)
'
check_literal:After drop space:'(' idx=16 '-   ABC%*1.1)
'
  '(' != '-'
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_eitem:ret1
check_eitem: '-   ABC%*1.1)
'
check_operator: -   ABC%*1.1)

check_literal:lit=',' idx=16 '-   ABC%*1.1)
'
check_literal:After drop space:',' idx=16 '-   ABC%*1.1)
'
  ',' != '-'
check_literal: ret0
check_operator: ret1
check_eitem:ret1
check_eitem: '   ABC%*1.1)
'
check_operator:    ABC%*1.1)

check_literal:lit=',' idx=20 'ABC%*1.1)
'
check_literal:After drop space:',' idx=20 'ABC%*1.1)
'
  ',' != 'A'
check_literal: ret0
check_operator:ret0
check_function: 'ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=17 '   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=20 'ABC%*1.1)
'
  '%' != 'A'
check_literal: ret0
check_literal:lit=' "' idx=17 '   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=20 'ABC%*1.1)
'
  '"' != 'A'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'ABC%*1.1)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'ABC%*1.1)
':
check_vname ret1 '%*1.1)
':
check_variable: '%*1.1)
'
check_variable: Ary test '*1.1)
'
check_literal:lit='(' idx=24 '*1.1)
'
check_literal:After drop space:'(' idx=24 '*1.1)
'
  '(' != '*'
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_eitem:ret1
check_eitem: '*1.1)
'
check_operator: *1.1)

check_literal:lit=',' idx=24 '*1.1)
'
check_literal:After drop space:',' idx=24 '*1.1)
'
  ',' != '*'
check_literal: ret0
check_operator: ret1
check_eitem:ret1
check_eitem: '1.1)
'
check_operator: 1.1)

check_literal:lit=',' idx=25 '1.1)
'
check_literal:After drop space:',' idx=25 '1.1)
'
  ',' != '1'
check_literal: ret0
check_operator:ret0
check_function: '1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=25 '1.1)
'
    dropping space
check_literal:After drop space:'%' idx=25 '1.1)
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=25 '1.1)
'
    dropping space
check_literal:After drop space:'"' idx=25 '1.1)
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret1
check_number: ret1
check_eitem:ret1
check_eitem: ')
'
check_operator: )

check_literal:lit=',' idx=28 ')
'
check_literal:After drop space:',' idx=28 ')
'
  ',' != ')'
check_literal: ret0
check_operator:ret0
check_function: ')
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=28 ')
'
    dropping space
check_literal:After drop space:'%' idx=28 ')
'
  '%' != ')'
check_literal: ret0
check_literal:lit=' "' idx=28 ')
'
    dropping space
check_literal:After drop space:'"' idx=28 ')
'
  '"' != ')'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ')
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname ')
':
check_vname ret0 ')
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=28 ')
'
    dropping space
check_literal:After drop space:'(' idx=28 ')
'
  '(' != ')'
check_literal: ret0
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 ')
'
check_assignment:ret1
scan_assignment:
scan_variable:
scan_vname: 'A= A + (2*3+3*Z%-   ABC%*1.1)
'
scan_vname: ret1 'A'
scan_variable: '= A + (2*3+3*Z%-   ABC%*1.1)
' vname='A'
scan_variable: Ary test '= A + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:lit='(' idx=1 '= A + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:'(' idx=1 '= A + (2*3+3*Z%-   ABC%*1.1)
'
  '(' != '='
check_literal: ret0
scan_variable:ret1 vname='A' is str:0 int:0 flt:1 ary:0
VAR INFO: '                 A' gbl:0 ref:1 int:0 flt:1 str:0 ary:0 max_str:0 max_ary:0 num_ind:0
scan_literal:lit=' =' '= A + (2*3+3*Z%-   ABC%*1.1)
'
scan_literal:After drop space:= A + (2*3+3*Z%-   ABC%*1.1)

scan_literal:while loop:= A + (2*3+3*Z%-   ABC%*1.1)

scan_expression: ' A + (2*3+3*Z%-   ABC%*1.1)
'
check_eitem: 'A + (2*3+3*Z%-   ABC%*1.1)
'
check_operator: A + (2*3+3*Z%-   ABC%*1.1)

check_literal:lit=',' idx=3 'A + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=3 'A + (2*3+3*Z%-   ABC%*1.1)
'
  ',' != 'A'
check_literal: ret0
check_operator:ret0
check_function: 'A + (2*3+3*Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=3 'A + (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=3 'A + (2*3+3*Z%-   ABC%*1.1)
'
  '%' != 'A'
check_literal: ret0
check_literal:lit=' "' idx=3 'A + (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=3 'A + (2*3+3*Z%-   ABC%*1.1)
'
  '"' != 'A'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'A + (2*3+3*Z%-   ABC%*1.1)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'A + (2*3+3*Z%-   ABC%*1.1)
':
check_vname ret1 ' + (2*3+3*Z%-   ABC%*1.1)
':
check_variable: ' + (2*3+3*Z%-   ABC%*1.1)
'
check_variable: Ary test ' + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:lit='(' idx=4 ' + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:'(' idx=4 ' + (2*3+3*Z%-   ABC%*1.1)
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variable:ret1 
check_eitem:ret1
scan_eitem:
check_operator: A + (2*3+3*Z%-   ABC%*1.1)

check_literal:lit=',' idx=3 'A + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=3 'A + (2*3+3*Z%-   ABC%*1.1)
'
  ',' != 'A'
check_literal: ret0
check_operator:ret0
check_function: 'A + (2*3+3*Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=3 'A + (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=3 'A + (2*3+3*Z%-   ABC%*1.1)
'
  '%' != 'A'
check_literal: ret0
check_literal:lit=' "' idx=3 'A + (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=3 'A + (2*3+3*Z%-   ABC%*1.1)
'
  '"' != 'A'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'A + (2*3+3*Z%-   ABC%*1.1)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'A + (2*3+3*Z%-   ABC%*1.1)
':
check_vname ret1 ' + (2*3+3*Z%-   ABC%*1.1)
':
check_variable: ' + (2*3+3*Z%-   ABC%*1.1)
'
check_variable: Ary test ' + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:lit='(' idx=4 ' + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:'(' idx=4 ' + (2*3+3*Z%-   ABC%*1.1)
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variable:ret1 
scan_atom:
check_literal:lit=' %' idx=3 'A + (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=3 'A + (2*3+3*Z%-   ABC%*1.1)
'
  '%' != 'A'
check_literal: ret0
check_literal:lit=' "' idx=3 'A + (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=3 'A + (2*3+3*Z%-   ABC%*1.1)
'
  '"' != 'A'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'A + (2*3+3*Z%-   ABC%*1.1)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'A + (2*3+3*Z%-   ABC%*1.1)
':
check_vname ret1 ' + (2*3+3*Z%-   ABC%*1.1)
':
check_variable: ' + (2*3+3*Z%-   ABC%*1.1)
'
check_variable: Ary test ' + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:lit='(' idx=4 ' + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:'(' idx=4 ' + (2*3+3*Z%-   ABC%*1.1)
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variable:ret1 
scan_variable:
scan_vname: 'A + (2*3+3*Z%-   ABC%*1.1)
'
scan_vname: ret1 'A'
scan_variable: ' + (2*3+3*Z%-   ABC%*1.1)
' vname='A'
scan_variable: Ary test ' + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:lit='(' idx=4 ' + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:'(' idx=4 ' + (2*3+3*Z%-   ABC%*1.1)
'
  '(' != ' '
check_literal: ret0
scan_variable:ret1 vname='A' is str:0 int:0 flt:1 ary:0
VAR INFO: '                 A' gbl:0 ref:1 int:0 flt:1 str:0 ary:0 max_str:0 max_ary:0 num_ind:0
check_eitem: ' + (2*3+3*Z%-   ABC%*1.1)
'
check_operator:  + (2*3+3*Z%-   ABC%*1.1)

check_literal:lit=',' idx=5 '+ (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=5 '+ (2*3+3*Z%-   ABC%*1.1)
'
  ',' != '+'
check_literal: ret0
check_operator: ret1
check_eitem:ret1
scan_eitem:
check_operator:  + (2*3+3*Z%-   ABC%*1.1)

check_literal:lit=',' idx=5 '+ (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=5 '+ (2*3+3*Z%-   ABC%*1.1)
'
  ',' != '+'
check_literal: ret0
check_operator: ret1
scan_operator: ' + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:lit=',' idx=5 '+ (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=5 '+ (2*3+3*Z%-   ABC%*1.1)
'
  ',' != '+'
check_literal: ret0
scan_operator: ret1 ' (2*3+3*Z%-   ABC%*1.1)
'
check_eitem: ' (2*3+3*Z%-   ABC%*1.1)
'
check_operator:  (2*3+3*Z%-   ABC%*1.1)

check_literal:lit=',' idx=7 '(2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=7 '(2*3+3*Z%-   ABC%*1.1)
'
  ',' != '('
check_literal: ret0
check_operator:ret0
check_function: '(2*3+3*Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=6 ' (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=7 '(2*3+3*Z%-   ABC%*1.1)
'
  '%' != '('
check_literal: ret0
check_literal:lit=' "' idx=6 ' (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=7 '(2*3+3*Z%-   ABC%*1.1)
'
  '"' != '('
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: '(2*3+3*Z%-   ABC%*1.1)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname '(2*3+3*Z%-   ABC%*1.1)
':
check_vname ret0 '(2*3+3*Z%-   ABC%*1.1)
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=6 ' (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'(' idx=7 '(2*3+3*Z%-   ABC%*1.1)
'
check_literal:After while():2*3+3*Z%-   ABC%*1.1)

check_literal:ret1 
check_sub_expr: ret1
check_eitem:ret1
scan_eitem:
check_operator:  (2*3+3*Z%-   ABC%*1.1)

check_literal:lit=',' idx=7 '(2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=7 '(2*3+3*Z%-   ABC%*1.1)
'
  ',' != '('
check_literal: ret0
check_operator:ret0
check_function: '(2*3+3*Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=6 ' (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=7 '(2*3+3*Z%-   ABC%*1.1)
'
  '%' != '('
check_literal: ret0
check_literal:lit=' "' idx=6 ' (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=7 '(2*3+3*Z%-   ABC%*1.1)
'
  '"' != '('
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: '(2*3+3*Z%-   ABC%*1.1)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname '(2*3+3*Z%-   ABC%*1.1)
':
check_vname ret0 '(2*3+3*Z%-   ABC%*1.1)
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=6 ' (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'(' idx=7 '(2*3+3*Z%-   ABC%*1.1)
'
check_literal:After while():2*3+3*Z%-   ABC%*1.1)

check_literal:ret1 
check_sub_expr: ret1
scan_sub_expr:
scan_literal:lit=' (' ' (2*3+3*Z%-   ABC%*1.1)
'
scan_literal:After drop space:(2*3+3*Z%-   ABC%*1.1)

scan_literal:while loop:(2*3+3*Z%-   ABC%*1.1)

scan_expression: '2*3+3*Z%-   ABC%*1.1)
'
check_eitem: '2*3+3*Z%-   ABC%*1.1)
'
check_operator: 2*3+3*Z%-   ABC%*1.1)

check_literal:lit=',' idx=8 '2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=8 '2*3+3*Z%-   ABC%*1.1)
'
  ',' != '2'
check_literal: ret0
check_operator:ret0
check_function: '2*3+3*Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=8 '2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=8 '2*3+3*Z%-   ABC%*1.1)
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=8 '2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=8 '2*3+3*Z%-   ABC%*1.1)
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2*3+3*Z%-   ABC%*1.1)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
scan_eitem:
check_operator: 2*3+3*Z%-   ABC%*1.1)

check_literal:lit=',' idx=8 '2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=8 '2*3+3*Z%-   ABC%*1.1)
'
  ',' != '2'
check_literal: ret0
check_operator:ret0
check_function: '2*3+3*Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=8 '2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=8 '2*3+3*Z%-   ABC%*1.1)
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=8 '2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=8 '2*3+3*Z%-   ABC%*1.1)
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2*3+3*Z%-   ABC%*1.1)
'
check_integer:ret1
check_number: ret1
scan_atom:
check_literal:lit=' %' idx=8 '2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=8 '2*3+3*Z%-   ABC%*1.1)
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=8 '2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=8 '2*3+3*Z%-   ABC%*1.1)
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2*3+3*Z%-   ABC%*1.1)
'
check_integer:ret1
check_number: ret1
scan_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2*3+3*Z%-   ABC%*1.1)
'
check_integer:ret1
scan_integer:
scan_integer:ret0
check_eitem: '*3+3*Z%-   ABC%*1.1)
'
check_operator: *3+3*Z%-   ABC%*1.1)

check_literal:lit=',' idx=9 '*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=9 '*3+3*Z%-   ABC%*1.1)
'
  ',' != '*'
check_literal: ret0
check_operator: ret1
check_eitem:ret1
scan_eitem:
check_operator: *3+3*Z%-   ABC%*1.1)

check_literal:lit=',' idx=9 '*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=9 '*3+3*Z%-   ABC%*1.1)
'
  ',' != '*'
check_literal: ret0
check_operator: ret1
scan_operator: '*3+3*Z%-   ABC%*1.1)
'
check_literal:lit=',' idx=9 '*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=9 '*3+3*Z%-   ABC%*1.1)
'
  ',' != '*'
check_literal: ret0
scan_operator: ret1 '3+3*Z%-   ABC%*1.1)
'
check_eitem: '3+3*Z%-   ABC%*1.1)
'
check_operator: 3+3*Z%-   ABC%*1.1)

check_literal:lit=',' idx=10 '3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=10 '3+3*Z%-   ABC%*1.1)
'
  ',' != '3'
check_literal: ret0
check_operator:ret0
check_function: '3+3*Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=10 '3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=10 '3+3*Z%-   ABC%*1.1)
'
  '%' != '3'
check_literal: ret0
check_literal:lit=' "' idx=10 '3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=10 '3+3*Z%-   ABC%*1.1)
'
  '"' != '3'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '3+3*Z%-   ABC%*1.1)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
scan_eitem:
check_operator: 3+3*Z%-   ABC%*1.1)

check_literal:lit=',' idx=10 '3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=10 '3+3*Z%-   ABC%*1.1)
'
  ',' != '3'
check_literal: ret0
check_operator:ret0
check_function: '3+3*Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=10 '3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=10 '3+3*Z%-   ABC%*1.1)
'
  '%' != '3'
check_literal: ret0
check_literal:lit=' "' idx=10 '3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=10 '3+3*Z%-   ABC%*1.1)
'
  '"' != '3'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '3+3*Z%-   ABC%*1.1)
'
check_integer:ret1
check_number: ret1
scan_atom:
check_literal:lit=' %' idx=10 '3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=10 '3+3*Z%-   ABC%*1.1)
'
  '%' != '3'
check_literal: ret0
check_literal:lit=' "' idx=10 '3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=10 '3+3*Z%-   ABC%*1.1)
'
  '"' != '3'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '3+3*Z%-   ABC%*1.1)
'
check_integer:ret1
check_number: ret1
scan_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '3+3*Z%-   ABC%*1.1)
'
check_integer:ret1
scan_integer:
scan_integer:ret0
check_eitem: '+3*Z%-   ABC%*1.1)
'
check_operator: +3*Z%-   ABC%*1.1)

check_literal:lit=',' idx=11 '+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=11 '+3*Z%-   ABC%*1.1)
'
  ',' != '+'
check_literal: ret0
check_operator: ret1
check_eitem:ret1
scan_eitem:
check_operator: +3*Z%-   ABC%*1.1)

check_literal:lit=',' idx=11 '+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=11 '+3*Z%-   ABC%*1.1)
'
  ',' != '+'
check_literal: ret0
check_operator: ret1
scan_operator: '+3*Z%-   ABC%*1.1)
'
check_literal:lit=',' idx=11 '+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=11 '+3*Z%-   ABC%*1.1)
'
  ',' != '+'
check_literal: ret0
scan_operator: ret1 '3*Z%-   ABC%*1.1)
'
check_eitem: '3*Z%-   ABC%*1.1)
'
check_operator: 3*Z%-   ABC%*1.1)

check_literal:lit=',' idx=12 '3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=12 '3*Z%-   ABC%*1.1)
'
  ',' != '3'
check_literal: ret0
check_operator:ret0
check_function: '3*Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=12 '3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=12 '3*Z%-   ABC%*1.1)
'
  '%' != '3'
check_literal: ret0
check_literal:lit=' "' idx=12 '3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=12 '3*Z%-   ABC%*1.1)
'
  '"' != '3'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '3*Z%-   ABC%*1.1)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
scan_eitem:
check_operator: 3*Z%-   ABC%*1.1)

check_literal:lit=',' idx=12 '3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=12 '3*Z%-   ABC%*1.1)
'
  ',' != '3'
check_literal: ret0
check_operator:ret0
check_function: '3*Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=12 '3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=12 '3*Z%-   ABC%*1.1)
'
  '%' != '3'
check_literal: ret0
check_literal:lit=' "' idx=12 '3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=12 '3*Z%-   ABC%*1.1)
'
  '"' != '3'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '3*Z%-   ABC%*1.1)
'
check_integer:ret1
check_number: ret1
scan_atom:
check_literal:lit=' %' idx=12 '3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=12 '3*Z%-   ABC%*1.1)
'
  '%' != '3'
check_literal: ret0
check_literal:lit=' "' idx=12 '3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=12 '3*Z%-   ABC%*1.1)
'
  '"' != '3'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '3*Z%-   ABC%*1.1)
'
check_integer:ret1
check_number: ret1
scan_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '3*Z%-   ABC%*1.1)
'
check_integer:ret1
scan_integer:
scan_integer:ret0
check_eitem: '*Z%-   ABC%*1.1)
'
check_operator: *Z%-   ABC%*1.1)

check_literal:lit=',' idx=13 '*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=13 '*Z%-   ABC%*1.1)
'
  ',' != '*'
check_literal: ret0
check_operator: ret1
check_eitem:ret1
scan_eitem:
check_operator: *Z%-   ABC%*1.1)

check_literal:lit=',' idx=13 '*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=13 '*Z%-   ABC%*1.1)
'
  ',' != '*'
check_literal: ret0
check_operator: ret1
scan_operator: '*Z%-   ABC%*1.1)
'
check_literal:lit=',' idx=13 '*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=13 '*Z%-   ABC%*1.1)
'
  ',' != '*'
check_literal: ret0
scan_operator: ret1 'Z%-   ABC%*1.1)
'
check_eitem: 'Z%-   ABC%*1.1)
'
check_operator: Z%-   ABC%*1.1)

check_literal:lit=',' idx=14 'Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=14 'Z%-   ABC%*1.1)
'
  ',' != 'Z'
check_literal: ret0
check_operator:ret0
check_function: 'Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=14 'Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=14 'Z%-   ABC%*1.1)
'
  '%' != 'Z'
check_literal: ret0
check_literal:lit=' "' idx=14 'Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=14 'Z%-   ABC%*1.1)
'
  '"' != 'Z'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'Z%-   ABC%*1.1)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'Z%-   ABC%*1.1)
':
check_vname ret1 '%-   ABC%*1.1)
':
check_variable: '%-   ABC%*1.1)
'
check_variable: Ary test '-   ABC%*1.1)
'
check_literal:lit='(' idx=16 '-   ABC%*1.1)
'
check_literal:After drop space:'(' idx=16 '-   ABC%*1.1)
'
  '(' != '-'
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_eitem:ret1
scan_eitem:
check_operator: Z%-   ABC%*1.1)

check_literal:lit=',' idx=14 'Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=14 'Z%-   ABC%*1.1)
'
  ',' != 'Z'
check_literal: ret0
check_operator:ret0
check_function: 'Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=14 'Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=14 'Z%-   ABC%*1.1)
'
  '%' != 'Z'
check_literal: ret0
check_literal:lit=' "' idx=14 'Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=14 'Z%-   ABC%*1.1)
'
  '"' != 'Z'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'Z%-   ABC%*1.1)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'Z%-   ABC%*1.1)
':
check_vname ret1 '%-   ABC%*1.1)
':
check_variable: '%-   ABC%*1.1)
'
check_variable: Ary test '-   ABC%*1.1)
'
check_literal:lit='(' idx=16 '-   ABC%*1.1)
'
check_literal:After drop space:'(' idx=16 '-   ABC%*1.1)
'
  '(' != '-'
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
scan_atom:
check_literal:lit=' %' idx=14 'Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=14 'Z%-   ABC%*1.1)
'
  '%' != 'Z'
check_literal: ret0
check_literal:lit=' "' idx=14 'Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=14 'Z%-   ABC%*1.1)
'
  '"' != 'Z'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'Z%-   ABC%*1.1)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'Z%-   ABC%*1.1)
':
check_vname ret1 '%-   ABC%*1.1)
':
check_variable: '%-   ABC%*1.1)
'
check_variable: Ary test '-   ABC%*1.1)
'
check_literal:lit='(' idx=16 '-   ABC%*1.1)
'
check_literal:After drop space:'(' idx=16 '-   ABC%*1.1)
'
  '(' != '-'
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
scan_variable:
scan_vname: 'Z%-   ABC%*1.1)
'
scan_vname: ret1 'Z'
scan_variable: '%-   ABC%*1.1)
' vname='Z'
scan_variable: Ary test '-   ABC%*1.1)
'
check_literal:lit='(' idx=16 '-   ABC%*1.1)
'
check_literal:After drop space:'(' idx=16 '-   ABC%*1.1)
'
  '(' != '-'
check_literal: ret0
scan_variable:ret1 vname='Z%' is str:0 int:1 flt:0 ary:0
VAR INFO: '                Z%' gbl:0 ref:1 int:1 flt:0 str:0 ary:0 max_str:0 max_ary:0 num_ind:0
check_eitem: '-   ABC%*1.1)
'
check_operator: -   ABC%*1.1)

check_literal:lit=',' idx=16 '-   ABC%*1.1)
'
check_literal:After drop space:',' idx=16 '-   ABC%*1.1)
'
  ',' != '-'
check_literal: ret0
check_operator: ret1
check_eitem:ret1
scan_eitem:
check_operator: -   ABC%*1.1)

check_literal:lit=',' idx=16 '-   ABC%*1.1)
'
check_literal:After drop space:',' idx=16 '-   ABC%*1.1)
'
  ',' != '-'
check_literal: ret0
check_operator: ret1
scan_operator: '-   ABC%*1.1)
'
check_literal:lit=',' idx=16 '-   ABC%*1.1)
'
check_literal:After drop space:',' idx=16 '-   ABC%*1.1)
'
  ',' != '-'
check_literal: ret0
scan_operator: ret1 '   ABC%*1.1)
'
check_eitem: '   ABC%*1.1)
'
check_operator:    ABC%*1.1)

check_literal:lit=',' idx=20 'ABC%*1.1)
'
check_literal:After drop space:',' idx=20 'ABC%*1.1)
'
  ',' != 'A'
check_literal: ret0
check_operator:ret0
check_function: 'ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=17 '   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=20 'ABC%*1.1)
'
  '%' != 'A'
check_literal: ret0
check_literal:lit=' "' idx=17 '   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=20 'ABC%*1.1)
'
  '"' != 'A'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'ABC%*1.1)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'ABC%*1.1)
':
check_vname ret1 '%*1.1)
':
check_variable: '%*1.1)
'
check_variable: Ary test '*1.1)
'
check_literal:lit='(' idx=24 '*1.1)
'
check_literal:After drop space:'(' idx=24 '*1.1)
'
  '(' != '*'
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_eitem:ret1
scan_eitem:
check_operator:    ABC%*1.1)

check_literal:lit=',' idx=20 'ABC%*1.1)
'
check_literal:After drop space:',' idx=20 'ABC%*1.1)
'
  ',' != 'A'
check_literal: ret0
check_operator:ret0
check_function: 'ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=17 '   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=20 'ABC%*1.1)
'
  '%' != 'A'
check_literal: ret0
check_literal:lit=' "' idx=17 '   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=20 'ABC%*1.1)
'
  '"' != 'A'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'ABC%*1.1)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'ABC%*1.1)
':
check_vname ret1 '%*1.1)
':
check_variable: '%*1.1)
'
check_variable: Ary test '*1.1)
'
check_literal:lit='(' idx=24 '*1.1)
'
check_literal:After drop space:'(' idx=24 '*1.1)
'
  '(' != '*'
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
scan_atom:
check_literal:lit=' %' idx=17 '   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=20 'ABC%*1.1)
'
  '%' != 'A'
check_literal: ret0
check_literal:lit=' "' idx=17 '   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=20 'ABC%*1.1)
'
  '"' != 'A'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'ABC%*1.1)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'ABC%*1.1)
':
check_vname ret1 '%*1.1)
':
check_variable: '%*1.1)
'
check_variable: Ary test '*1.1)
'
check_literal:lit='(' idx=24 '*1.1)
'
check_literal:After drop space:'(' idx=24 '*1.1)
'
  '(' != '*'
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
scan_variable:
scan_vname: '   ABC%*1.1)
'
scan_vname: ret1 'ABC'
scan_variable: '%*1.1)
' vname='ABC'
scan_variable: Ary test '*1.1)
'
check_literal:lit='(' idx=24 '*1.1)
'
check_literal:After drop space:'(' idx=24 '*1.1)
'
  '(' != '*'
check_literal: ret0
scan_variable:ret1 vname='ABC%' is str:0 int:1 flt:0 ary:0
VAR INFO: '              ABC%' gbl:0 ref:1 int:1 flt:0 str:0 ary:0 max_str:0 max_ary:0 num_ind:0
check_eitem: '*1.1)
'
check_operator: *1.1)

check_literal:lit=',' idx=24 '*1.1)
'
check_literal:After drop space:',' idx=24 '*1.1)
'
  ',' != '*'
check_literal: ret0
check_operator: ret1
check_eitem:ret1
scan_eitem:
check_operator: *1.1)

check_literal:lit=',' idx=24 '*1.1)
'
check_literal:After drop space:',' idx=24 '*1.1)
'
  ',' != '*'
check_literal: ret0
check_operator: ret1
scan_operator: '*1.1)
'
check_literal:lit=',' idx=24 '*1.1)
'
check_literal:After drop space:',' idx=24 '*1.1)
'
  ',' != '*'
check_literal: ret0
scan_operator: ret1 '1.1)
'
check_eitem: '1.1)
'
check_operator: 1.1)

check_literal:lit=',' idx=25 '1.1)
'
check_literal:After drop space:',' idx=25 '1.1)
'
  ',' != '1'
check_literal: ret0
check_operator:ret0
check_function: '1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=25 '1.1)
'
    dropping space
check_literal:After drop space:'%' idx=25 '1.1)
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=25 '1.1)
'
    dropping space
check_literal:After drop space:'"' idx=25 '1.1)
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret1
check_number: ret1
check_eitem:ret1
scan_eitem:
check_operator: 1.1)

check_literal:lit=',' idx=25 '1.1)
'
check_literal:After drop space:',' idx=25 '1.1)
'
  ',' != '1'
check_literal: ret0
check_operator:ret0
check_function: '1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=25 '1.1)
'
    dropping space
check_literal:After drop space:'%' idx=25 '1.1)
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=25 '1.1)
'
    dropping space
check_literal:After drop space:'"' idx=25 '1.1)
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret1
check_number: ret1
scan_atom:
check_literal:lit=' %' idx=25 '1.1)
'
    dropping space
check_literal:After drop space:'%' idx=25 '1.1)
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=25 '1.1)
'
    dropping space
check_literal:After drop space:'"' idx=25 '1.1)
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret1
check_number: ret1
scan_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret1
scan_float:
isfloatdigit:
scan_float: ret0
check_eitem: ')
'
check_operator: )

check_literal:lit=',' idx=28 ')
'
check_literal:After drop space:',' idx=28 ')
'
  ',' != ')'
check_literal: ret0
check_operator:ret0
check_function: ')
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=28 ')
'
    dropping space
check_literal:After drop space:'%' idx=28 ')
'
  '%' != ')'
check_literal: ret0
check_literal:lit=' "' idx=28 ')
'
    dropping space
check_literal:After drop space:'"' idx=28 ')
'
  '"' != ')'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ')
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname ')
':
check_vname ret0 ')
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=28 ')
'
    dropping space
check_literal:After drop space:'(' idx=28 ')
'
  '(' != ')'
check_literal: ret0
check_sub_expr: ret0
check_eitem:ret0
scan_expression: ret1 ')
'
scan_literal:lit=' )' ')
'
scan_literal:After drop space:)

scan_literal:while loop:)

scan_sub_expr:ret1
check_eitem: '
'
check_operator: 

check_literal:lit=',' idx=30 ''
check_literal:After drop space:',' idx=30 ''
check_literal  ret0 Empty test string
check_operator:ret0
check_function: ''
check_function: ret0
check_atom:
check_literal:lit=' %' idx=29 '
'
    dropping space
check_literal:After drop space:'%' idx=30 ''
check_literal  ret0 Empty test string
check_literal:lit=' "' idx=29 '
'
    dropping space
check_literal:After drop space:'"' idx=30 ''
check_literal  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ''
check_integer:ret0
check_number: ret0
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=29 '
'
    dropping space
check_literal:After drop space:'(' idx=30 ''
check_literal  ret0 Empty test string
check_sub_expr: ret0
check_eitem:ret0
scan_expression: ret1 '
'
scan_assignment: ret1
check_literal:lit=':' idx=30 ''
check_literal:After drop space:':' idx=30 ''
check_literal  ret0 Empty test string
cline scanned OK
=======================cline==========================
==X%=2
==
scan_cline:
check_line:
check_assignment:
check_variable:
check_vname 'X%=2
':
check_vname ret1 '%=2
':
check_variable: '%=2
'
check_variable: Ary test '=2
'
check_literal:lit='(' idx=2 '=2
'
check_literal:After drop space:'(' idx=2 '=2
'
  '(' != '='
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_literal:lit=' =' idx=2 '=2
'
    dropping space
check_literal:After drop space:'=' idx=2 '=2
'
check_literal:After while():2

check_literal:ret1 
check_expression: '2
'
check_eitem: '2
'
check_operator: 2

check_literal:lit=',' idx=3 '2
'
check_literal:After drop space:',' idx=3 '2
'
  ',' != '2'
check_literal: ret0
check_operator:ret0
check_function: '2
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=3 '2
'
    dropping space
check_literal:After drop space:'%' idx=3 '2
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=3 '2
'
    dropping space
check_literal:After drop space:'"' idx=3 '2
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: '
'
check_operator: 

check_literal:lit=',' idx=5 ''
check_literal:After drop space:',' idx=5 ''
check_literal  ret0 Empty test string
check_operator:ret0
check_function: ''
check_function: ret0
check_atom:
check_literal:lit=' %' idx=4 '
'
    dropping space
check_literal:After drop space:'%' idx=5 ''
check_literal  ret0 Empty test string
check_literal:lit=' "' idx=4 '
'
    dropping space
check_literal:After drop space:'"' idx=5 ''
check_literal  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ''
check_integer:ret0
check_number: ret0
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=4 '
'
    dropping space
check_literal:After drop space:'(' idx=5 ''
check_literal  ret0 Empty test string
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 '
'
check_assignment:ret1
check_line:ret1
scan_cline: Checked len=1, '
'
scan_line:
check_assignment:
check_variable:
check_vname 'X%=2
':
check_vname ret1 '%=2
':
check_variable: '%=2
'
check_variable: Ary test '=2
'
check_literal:lit='(' idx=2 '=2
'
check_literal:After drop space:'(' idx=2 '=2
'
  '(' != '='
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_literal:lit=' =' idx=2 '=2
'
    dropping space
check_literal:After drop space:'=' idx=2 '=2
'
check_literal:After while():2

check_literal:ret1 
check_expression: '2
'
check_eitem: '2
'
check_operator: 2

check_literal:lit=',' idx=3 '2
'
check_literal:After drop space:',' idx=3 '2
'
  ',' != '2'
check_literal: ret0
check_operator:ret0
check_function: '2
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=3 '2
'
    dropping space
check_literal:After drop space:'%' idx=3 '2
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=3 '2
'
    dropping space
check_literal:After drop space:'"' idx=3 '2
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: '
'
check_operator: 

check_literal:lit=',' idx=5 ''
check_literal:After drop space:',' idx=5 ''
check_literal  ret0 Empty test string
check_operator:ret0
check_function: ''
check_function: ret0
check_atom:
check_literal:lit=' %' idx=4 '
'
    dropping space
check_literal:After drop space:'%' idx=5 ''
check_literal  ret0 Empty test string
check_literal:lit=' "' idx=4 '
'
    dropping space
check_literal:After drop space:'"' idx=5 ''
check_literal  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ''
check_integer:ret0
check_number: ret0
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=4 '
'
    dropping space
check_literal:After drop space:'(' idx=5 ''
check_literal  ret0 Empty test string
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 '
'
check_assignment:ret1
scan_assignment:
scan_variable:
scan_vname: 'X%=2
'
scan_vname: ret1 'X'
scan_variable: '%=2
' vname='X'
scan_variable: Ary test '=2
'
check_literal:lit='(' idx=2 '=2
'
check_literal:After drop space:'(' idx=2 '=2
'
  '(' != '='
check_literal: ret0
scan_variable:ret1 vname='X%' is str:0 int:1 flt:0 ary:0
VAR INFO: '                X%' gbl:0 ref:1 int:1 flt:0 str:0 ary:0 max_str:0 max_ary:0 num_ind:0
scan_literal:lit=' =' '=2
'
scan_literal:After drop space:=2

scan_literal:while loop:=2

scan_expression: '2
'
check_eitem: '2
'
check_operator: 2

check_literal:lit=',' idx=3 '2
'
check_literal:After drop space:',' idx=3 '2
'
  ',' != '2'
check_literal: ret0
check_operator:ret0
check_function: '2
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=3 '2
'
    dropping space
check_literal:After drop space:'%' idx=3 '2
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=3 '2
'
    dropping space
check_literal:After drop space:'"' idx=3 '2
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
scan_eitem:
check_operator: 2

check_literal:lit=',' idx=3 '2
'
check_literal:After drop space:',' idx=3 '2
'
  ',' != '2'
check_literal: ret0
check_operator:ret0
check_function: '2
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=3 '2
'
    dropping space
check_literal:After drop space:'%' idx=3 '2
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=3 '2
'
    dropping space
check_literal:After drop space:'"' idx=3 '2
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2
'
check_integer:ret1
check_number: ret1
scan_atom:
check_literal:lit=' %' idx=3 '2
'
    dropping space
check_literal:After drop space:'%' idx=3 '2
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=3 '2
'
    dropping space
check_literal:After drop space:'"' idx=3 '2
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2
'
check_integer:ret1
check_number: ret1
scan_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2
'
check_integer:ret1
scan_integer:
scan_integer:ret0
check_eitem: ''
check_operator: 
check_literal:lit=',' idx=5 ''
check_literal:After drop space:',' idx=5 ''
check_literal  ret0 Empty test string
check_operator:ret0
check_function: ''
check_function: ret0
check_atom:
check_literal:lit=' %' idx=5 ''
    dropping space
check_literal:After drop space:'%' idx=5 ''
check_literal  ret0 Empty test string
check_literal:lit=' "' idx=5 ''
    dropping space
check_literal:After drop space:'"' idx=5 ''
check_literal  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ''
check_integer:ret0
check_number: ret0
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=5 ''
    dropping space
check_literal:After drop space:'(' idx=5 ''
check_literal  ret0 Empty test string
check_sub_expr: ret0
check_eitem:ret0
scan_expression: ret1 ''
scan_assignment: ret1
check_literal:lit=':' idx=5 ''
check_literal:After drop space:':' idx=5 ''
check_literal  ret0 Empty test string
cline scanned OK
=======================cline==========================
==  A   = A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
==
scan_cline:
check_line:
check_assignment:
check_variable:
check_vname 'A   = A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
':
check_vname ret1 '   = A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
':
check_variable: '   = A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_variable: Ary test '   = A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_literal:lit='(' idx=3 '   = A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_literal:After drop space:'(' idx=3 '   = A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variable:ret1 
check_literal:lit=' =' idx=3 '   = A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'=' idx=6 '= A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_literal:After while(): A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)

check_literal:ret1 
check_expression: 'A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_eitem: 'A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_operator: A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)

check_literal:lit=',' idx=8 'A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=8 'A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
  ',' != 'A'
check_literal: ret0
check_operator:ret0
check_function: 'A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=8 'A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=8 'A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
  '%' != 'A'
check_literal: ret0
check_literal:lit=' "' idx=8 'A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=8 'A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
  '"' != 'A'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
':
check_vname ret1 ' + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
':
check_variable: ' + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_variable: Ary test ' + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_literal:lit='(' idx=9 ' + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_literal:After drop space:'(' idx=9 ' + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variable:ret1 
check_eitem:ret1
check_eitem: ' + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_operator:  + ( 2 * 3 + 3 * Z%-   ABC%*1.1)

check_literal:lit=',' idx=10 '+ ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=10 '+ ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
  ',' != '+'
check_literal: ret0
check_operator: ret1
check_eitem:ret1
check_eitem: ' ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_operator:  ( 2 * 3 + 3 * Z%-   ABC%*1.1)

check_literal:lit=',' idx=12 '( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=12 '( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
  ',' != '('
check_literal: ret0
check_operator:ret0
check_function: '( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=11 ' ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=12 '( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
  '%' != '('
check_literal: ret0
check_literal:lit=' "' idx=11 ' ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=12 '( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
  '"' != '('
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: '( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname '( 2 * 3 + 3 * Z%-   ABC%*1.1)
':
check_vname ret0 '( 2 * 3 + 3 * Z%-   ABC%*1.1)
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=11 ' ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'(' idx=12 '( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_literal:After while(): 2 * 3 + 3 * Z%-   ABC%*1.1)

check_literal:ret1 
check_sub_expr: ret1
check_eitem:ret1
check_eitem: ' 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_operator:  2 * 3 + 3 * Z%-   ABC%*1.1)

check_literal:lit=',' idx=14 '2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=14 '2 * 3 + 3 * Z%-   ABC%*1.1)
'
  ',' != '2'
check_literal: ret0
check_operator:ret0
check_function: '2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=13 ' 2 * 3 + 3 * Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=14 '2 * 3 + 3 * Z%-   ABC%*1.1)
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=13 ' 2 * 3 + 3 * Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=14 '2 * 3 + 3 * Z%-   ABC%*1.1)
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: ' * 3 + 3 * Z%-   ABC%*1.1)
'
check_operator:  * 3 + 3 * Z%-   ABC%*1.1)

check_literal:lit=',' idx=16 '* 3 + 3 * Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=16 '* 3 + 3 * Z%-   ABC%*1.1)
'
  ',' != '*'
check_literal: ret0
check_operator: ret1
check_eitem:ret1
check_eitem: ' 3 + 3 * Z%-   ABC%*1.1)
'
check_operator:  3 + 3 * Z%-   ABC%*1.1)

check_literal:lit=',' idx=18 '3 + 3 * Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=18 '3 + 3 * Z%-   ABC%*1.1)
'
  ',' != '3'
check_literal: ret0
check_operator:ret0
check_function: '3 + 3 * Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=17 ' 3 + 3 * Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=18 '3 + 3 * Z%-   ABC%*1.1)
'
  '%' != '3'
check_literal: ret0
check_literal:lit=' "' idx=17 ' 3 + 3 * Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=18 '3 + 3 * Z%-   ABC%*1.1)
'
  '"' != '3'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '3 + 3 * Z%-   ABC%*1.1)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: ' + 3 * Z%-   ABC%*1.1)
'
check_operator:  + 3 * Z%-   ABC%*1.1)

check_literal:lit=',' idx=20 '+ 3 * Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=20 '+ 3 * Z%-   ABC%*1.1)
'
  ',' != '+'
check_literal: ret0
check_operator: ret1
check_eitem:ret1
check_eitem: ' 3 * Z%-   ABC%*1.1)
'
check_operator:  3 * Z%-   ABC%*1.1)

check_literal:lit=',' idx=22 '3 * Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=22 '3 * Z%-   ABC%*1.1)
'
  ',' != '3'
check_literal: ret0
check_operator:ret0
check_function: '3 * Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=21 ' 3 * Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=22 '3 * Z%-   ABC%*1.1)
'
  '%' != '3'
check_literal: ret0
check_literal:lit=' "' idx=21 ' 3 * Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=22 '3 * Z%-   ABC%*1.1)
'
  '"' != '3'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '3 * Z%-   ABC%*1.1)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: ' * Z%-   ABC%*1.1)
'
check_operator:  * Z%-   ABC%*1.1)

check_literal:lit=',' idx=24 '* Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=24 '* Z%-   ABC%*1.1)
'
  ',' != '*'
check_literal: ret0
check_operator: ret1
check_eitem:ret1
check_eitem: ' Z%-   ABC%*1.1)
'
check_operator:  Z%-   ABC%*1.1)

check_literal:lit=',' idx=26 'Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=26 'Z%-   ABC%*1.1)
'
  ',' != 'Z'
check_literal: ret0
check_operator:ret0
check_function: 'Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=25 ' Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=26 'Z%-   ABC%*1.1)
'
  '%' != 'Z'
check_literal: ret0
check_literal:lit=' "' idx=25 ' Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=26 'Z%-   ABC%*1.1)
'
  '"' != 'Z'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'Z%-   ABC%*1.1)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'Z%-   ABC%*1.1)
':
check_vname ret1 '%-   ABC%*1.1)
':
check_variable: '%-   ABC%*1.1)
'
check_variable: Ary test '-   ABC%*1.1)
'
check_literal:lit='(' idx=28 '-   ABC%*1.1)
'
check_literal:After drop space:'(' idx=28 '-   ABC%*1.1)
'
  '(' != '-'
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_eitem:ret1
check_eitem: '-   ABC%*1.1)
'
check_operator: -   ABC%*1.1)

check_literal:lit=',' idx=28 '-   ABC%*1.1)
'
check_literal:After drop space:',' idx=28 '-   ABC%*1.1)
'
  ',' != '-'
check_literal: ret0
check_operator: ret1
check_eitem:ret1
check_eitem: '   ABC%*1.1)
'
check_operator:    ABC%*1.1)

check_literal:lit=',' idx=32 'ABC%*1.1)
'
check_literal:After drop space:',' idx=32 'ABC%*1.1)
'
  ',' != 'A'
check_literal: ret0
check_operator:ret0
check_function: 'ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=29 '   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=32 'ABC%*1.1)
'
  '%' != 'A'
check_literal: ret0
check_literal:lit=' "' idx=29 '   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=32 'ABC%*1.1)
'
  '"' != 'A'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'ABC%*1.1)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'ABC%*1.1)
':
check_vname ret1 '%*1.1)
':
check_variable: '%*1.1)
'
check_variable: Ary test '*1.1)
'
check_literal:lit='(' idx=36 '*1.1)
'
check_literal:After drop space:'(' idx=36 '*1.1)
'
  '(' != '*'
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_eitem:ret1
check_eitem: '*1.1)
'
check_operator: *1.1)

check_literal:lit=',' idx=36 '*1.1)
'
check_literal:After drop space:',' idx=36 '*1.1)
'
  ',' != '*'
check_literal: ret0
check_operator: ret1
check_eitem:ret1
check_eitem: '1.1)
'
check_operator: 1.1)

check_literal:lit=',' idx=37 '1.1)
'
check_literal:After drop space:',' idx=37 '1.1)
'
  ',' != '1'
check_literal: ret0
check_operator:ret0
check_function: '1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=37 '1.1)
'
    dropping space
check_literal:After drop space:'%' idx=37 '1.1)
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=37 '1.1)
'
    dropping space
check_literal:After drop space:'"' idx=37 '1.1)
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret1
check_number: ret1
check_eitem:ret1
check_eitem: ')
'
check_operator: )

check_literal:lit=',' idx=40 ')
'
check_literal:After drop space:',' idx=40 ')
'
  ',' != ')'
check_literal: ret0
check_operator:ret0
check_function: ')
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=40 ')
'
    dropping space
check_literal:After drop space:'%' idx=40 ')
'
  '%' != ')'
check_literal: ret0
check_literal:lit=' "' idx=40 ')
'
    dropping space
check_literal:After drop space:'"' idx=40 ')
'
  '"' != ')'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ')
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname ')
':
check_vname ret0 ')
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=40 ')
'
    dropping space
check_literal:After drop space:'(' idx=40 ')
'
  '(' != ')'
check_literal: ret0
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 ')
'
check_assignment:ret1
check_line:ret1
scan_cline: Checked len=2, ')
'
scan_line:
check_assignment:
check_variable:
check_vname 'A   = A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
':
check_vname ret1 '   = A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
':
check_variable: '   = A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_variable: Ary test '   = A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_literal:lit='(' idx=3 '   = A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_literal:After drop space:'(' idx=3 '   = A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variable:ret1 
check_literal:lit=' =' idx=3 '   = A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'=' idx=6 '= A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_literal:After while(): A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)

check_literal:ret1 
check_expression: 'A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_eitem: 'A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_operator: A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)

check_literal:lit=',' idx=8 'A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=8 'A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
  ',' != 'A'
check_literal: ret0
check_operator:ret0
check_function: 'A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=8 'A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=8 'A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
  '%' != 'A'
check_literal: ret0
check_literal:lit=' "' idx=8 'A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=8 'A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
  '"' != 'A'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
':
check_vname ret1 ' + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
':
check_variable: ' + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_variable: Ary test ' + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_literal:lit='(' idx=9 ' + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_literal:After drop space:'(' idx=9 ' + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variable:ret1 
check_eitem:ret1
check_eitem: ' + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_operator:  + ( 2 * 3 + 3 * Z%-   ABC%*1.1)

check_literal:lit=',' idx=10 '+ ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=10 '+ ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
  ',' != '+'
check_literal: ret0
check_operator: ret1
check_eitem:ret1
check_eitem: ' ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_operator:  ( 2 * 3 + 3 * Z%-   ABC%*1.1)

check_literal:lit=',' idx=12 '( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=12 '( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
  ',' != '('
check_literal: ret0
check_operator:ret0
check_function: '( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=11 ' ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=12 '( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
  '%' != '('
check_literal: ret0
check_literal:lit=' "' idx=11 ' ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=12 '( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
  '"' != '('
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: '( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname '( 2 * 3 + 3 * Z%-   ABC%*1.1)
':
check_vname ret0 '( 2 * 3 + 3 * Z%-   ABC%*1.1)
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=11 ' ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'(' idx=12 '( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_literal:After while(): 2 * 3 + 3 * Z%-   ABC%*1.1)

check_literal:ret1 
check_sub_expr: ret1
check_eitem:ret1
check_eitem: ' 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_operator:  2 * 3 + 3 * Z%-   ABC%*1.1)

check_literal:lit=',' idx=14 '2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=14 '2 * 3 + 3 * Z%-   ABC%*1.1)
'
  ',' != '2'
check_literal: ret0
check_operator:ret0
check_function: '2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=13 ' 2 * 3 + 3 * Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=14 '2 * 3 + 3 * Z%-   ABC%*1.1)
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=13 ' 2 * 3 + 3 * Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=14 '2 * 3 + 3 * Z%-   ABC%*1.1)
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: ' * 3 + 3 * Z%-   ABC%*1.1)
'
check_operator:  * 3 + 3 * Z%-   ABC%*1.1)

check_literal:lit=',' idx=16 '* 3 + 3 * Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=16 '* 3 + 3 * Z%-   ABC%*1.1)
'
  ',' != '*'
check_literal: ret0
check_operator: ret1
check_eitem:ret1
check_eitem: ' 3 + 3 * Z%-   ABC%*1.1)
'
check_operator:  3 + 3 * Z%-   ABC%*1.1)

check_literal:lit=',' idx=18 '3 + 3 * Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=18 '3 + 3 * Z%-   ABC%*1.1)
'
  ',' != '3'
check_literal: ret0
check_operator:ret0
check_function: '3 + 3 * Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=17 ' 3 + 3 * Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=18 '3 + 3 * Z%-   ABC%*1.1)
'
  '%' != '3'
check_literal: ret0
check_literal:lit=' "' idx=17 ' 3 + 3 * Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=18 '3 + 3 * Z%-   ABC%*1.1)
'
  '"' != '3'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '3 + 3 * Z%-   ABC%*1.1)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: ' + 3 * Z%-   ABC%*1.1)
'
check_operator:  + 3 * Z%-   ABC%*1.1)

check_literal:lit=',' idx=20 '+ 3 * Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=20 '+ 3 * Z%-   ABC%*1.1)
'
  ',' != '+'
check_literal: ret0
check_operator: ret1
check_eitem:ret1
check_eitem: ' 3 * Z%-   ABC%*1.1)
'
check_operator:  3 * Z%-   ABC%*1.1)

check_literal:lit=',' idx=22 '3 * Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=22 '3 * Z%-   ABC%*1.1)
'
  ',' != '3'
check_literal: ret0
check_operator:ret0
check_function: '3 * Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=21 ' 3 * Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=22 '3 * Z%-   ABC%*1.1)
'
  '%' != '3'
check_literal: ret0
check_literal:lit=' "' idx=21 ' 3 * Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=22 '3 * Z%-   ABC%*1.1)
'
  '"' != '3'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '3 * Z%-   ABC%*1.1)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: ' * Z%-   ABC%*1.1)
'
check_operator:  * Z%-   ABC%*1.1)

check_literal:lit=',' idx=24 '* Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=24 '* Z%-   ABC%*1.1)
'
  ',' != '*'
check_literal: ret0
check_operator: ret1
check_eitem:ret1
check_eitem: ' Z%-   ABC%*1.1)
'
check_operator:  Z%-   ABC%*1.1)

check_literal:lit=',' idx=26 'Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=26 'Z%-   ABC%*1.1)
'
  ',' != 'Z'
check_literal: ret0
check_operator:ret0
check_function: 'Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=25 ' Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=26 'Z%-   ABC%*1.1)
'
  '%' != 'Z'
check_literal: ret0
check_literal:lit=' "' idx=25 ' Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=26 'Z%-   ABC%*1.1)
'
  '"' != 'Z'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'Z%-   ABC%*1.1)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'Z%-   ABC%*1.1)
':
check_vname ret1 '%-   ABC%*1.1)
':
check_variable: '%-   ABC%*1.1)
'
check_variable: Ary test '-   ABC%*1.1)
'
check_literal:lit='(' idx=28 '-   ABC%*1.1)
'
check_literal:After drop space:'(' idx=28 '-   ABC%*1.1)
'
  '(' != '-'
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_eitem:ret1
check_eitem: '-   ABC%*1.1)
'
check_operator: -   ABC%*1.1)

check_literal:lit=',' idx=28 '-   ABC%*1.1)
'
check_literal:After drop space:',' idx=28 '-   ABC%*1.1)
'
  ',' != '-'
check_literal: ret0
check_operator: ret1
check_eitem:ret1
check_eitem: '   ABC%*1.1)
'
check_operator:    ABC%*1.1)

check_literal:lit=',' idx=32 'ABC%*1.1)
'
check_literal:After drop space:',' idx=32 'ABC%*1.1)
'
  ',' != 'A'
check_literal: ret0
check_operator:ret0
check_function: 'ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=29 '   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=32 'ABC%*1.1)
'
  '%' != 'A'
check_literal: ret0
check_literal:lit=' "' idx=29 '   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=32 'ABC%*1.1)
'
  '"' != 'A'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'ABC%*1.1)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'ABC%*1.1)
':
check_vname ret1 '%*1.1)
':
check_variable: '%*1.1)
'
check_variable: Ary test '*1.1)
'
check_literal:lit='(' idx=36 '*1.1)
'
check_literal:After drop space:'(' idx=36 '*1.1)
'
  '(' != '*'
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_eitem:ret1
check_eitem: '*1.1)
'
check_operator: *1.1)

check_literal:lit=',' idx=36 '*1.1)
'
check_literal:After drop space:',' idx=36 '*1.1)
'
  ',' != '*'
check_literal: ret0
check_operator: ret1
check_eitem:ret1
check_eitem: '1.1)
'
check_operator: 1.1)

check_literal:lit=',' idx=37 '1.1)
'
check_literal:After drop space:',' idx=37 '1.1)
'
  ',' != '1'
check_literal: ret0
check_operator:ret0
check_function: '1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=37 '1.1)
'
    dropping space
check_literal:After drop space:'%' idx=37 '1.1)
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=37 '1.1)
'
    dropping space
check_literal:After drop space:'"' idx=37 '1.1)
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret1
check_number: ret1
check_eitem:ret1
check_eitem: ')
'
check_operator: )

check_literal:lit=',' idx=40 ')
'
check_literal:After drop space:',' idx=40 ')
'
  ',' != ')'
check_literal: ret0
check_operator:ret0
check_function: ')
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=40 ')
'
    dropping space
check_literal:After drop space:'%' idx=40 ')
'
  '%' != ')'
check_literal: ret0
check_literal:lit=' "' idx=40 ')
'
    dropping space
check_literal:After drop space:'"' idx=40 ')
'
  '"' != ')'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ')
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname ')
':
check_vname ret0 ')
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=40 ')
'
    dropping space
check_literal:After drop space:'(' idx=40 ')
'
  '(' != ')'
check_literal: ret0
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 ')
'
check_assignment:ret1
scan_assignment:
scan_variable:
scan_vname: 'A   = A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
scan_vname: ret1 'A'
scan_variable: '   = A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
' vname='A'
scan_variable: Ary test '   = A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_literal:lit='(' idx=3 '   = A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_literal:After drop space:'(' idx=3 '   = A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
  '(' != ' '
check_literal: ret0
scan_variable:ret1 vname='A' is str:0 int:0 flt:1 ary:0
VAR INFO: '                 A' gbl:0 ref:1 int:0 flt:1 str:0 ary:0 max_str:0 max_ary:0 num_ind:0
scan_literal:lit=' =' '   = A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
scan_literal:After drop space:= A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)

scan_literal:while loop:= A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)

scan_expression: ' A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_eitem: 'A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_operator: A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)

check_literal:lit=',' idx=8 'A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=8 'A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
  ',' != 'A'
check_literal: ret0
check_operator:ret0
check_function: 'A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=8 'A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=8 'A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
  '%' != 'A'
check_literal: ret0
check_literal:lit=' "' idx=8 'A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=8 'A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
  '"' != 'A'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
':
check_vname ret1 ' + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
':
check_variable: ' + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_variable: Ary test ' + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_literal:lit='(' idx=9 ' + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_literal:After drop space:'(' idx=9 ' + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variable:ret1 
check_eitem:ret1
scan_eitem:
check_operator: A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)

check_literal:lit=',' idx=8 'A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=8 'A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
  ',' != 'A'
check_literal: ret0
check_operator:ret0
check_function: 'A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=8 'A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=8 'A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
  '%' != 'A'
check_literal: ret0
check_literal:lit=' "' idx=8 'A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=8 'A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
  '"' != 'A'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
':
check_vname ret1 ' + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
':
check_variable: ' + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_variable: Ary test ' + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_literal:lit='(' idx=9 ' + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_literal:After drop space:'(' idx=9 ' + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variable:ret1 
scan_atom:
check_literal:lit=' %' idx=8 'A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=8 'A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
  '%' != 'A'
check_literal: ret0
check_literal:lit=' "' idx=8 'A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=8 'A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
  '"' != 'A'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
':
check_vname ret1 ' + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
':
check_variable: ' + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_variable: Ary test ' + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_literal:lit='(' idx=9 ' + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_literal:After drop space:'(' idx=9 ' + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variable:ret1 
scan_variable:
scan_vname: 'A + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
scan_vname: ret1 'A'
scan_variable: ' + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
' vname='A'
scan_variable: Ary test ' + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_literal:lit='(' idx=9 ' + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_literal:After drop space:'(' idx=9 ' + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
  '(' != ' '
check_literal: ret0
scan_variable:ret1 vname='A' is str:0 int:0 flt:1 ary:0
VAR INFO: '                 A' gbl:0 ref:1 int:0 flt:1 str:0 ary:0 max_str:0 max_ary:0 num_ind:0
check_eitem: ' + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_operator:  + ( 2 * 3 + 3 * Z%-   ABC%*1.1)

check_literal:lit=',' idx=10 '+ ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=10 '+ ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
  ',' != '+'
check_literal: ret0
check_operator: ret1
check_eitem:ret1
scan_eitem:
check_operator:  + ( 2 * 3 + 3 * Z%-   ABC%*1.1)

check_literal:lit=',' idx=10 '+ ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=10 '+ ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
  ',' != '+'
check_literal: ret0
check_operator: ret1
scan_operator: ' + ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_literal:lit=',' idx=10 '+ ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=10 '+ ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
  ',' != '+'
check_literal: ret0
scan_operator: ret1 ' ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_eitem: ' ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_operator:  ( 2 * 3 + 3 * Z%-   ABC%*1.1)

check_literal:lit=',' idx=12 '( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=12 '( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
  ',' != '('
check_literal: ret0
check_operator:ret0
check_function: '( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=11 ' ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=12 '( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
  '%' != '('
check_literal: ret0
check_literal:lit=' "' idx=11 ' ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=12 '( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
  '"' != '('
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: '( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname '( 2 * 3 + 3 * Z%-   ABC%*1.1)
':
check_vname ret0 '( 2 * 3 + 3 * Z%-   ABC%*1.1)
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=11 ' ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'(' idx=12 '( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_literal:After while(): 2 * 3 + 3 * Z%-   ABC%*1.1)

check_literal:ret1 
check_sub_expr: ret1
check_eitem:ret1
scan_eitem:
check_operator:  ( 2 * 3 + 3 * Z%-   ABC%*1.1)

check_literal:lit=',' idx=12 '( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=12 '( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
  ',' != '('
check_literal: ret0
check_operator:ret0
check_function: '( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=11 ' ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=12 '( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
  '%' != '('
check_literal: ret0
check_literal:lit=' "' idx=11 ' ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=12 '( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
  '"' != '('
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: '( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname '( 2 * 3 + 3 * Z%-   ABC%*1.1)
':
check_vname ret0 '( 2 * 3 + 3 * Z%-   ABC%*1.1)
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=11 ' ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'(' idx=12 '( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_literal:After while(): 2 * 3 + 3 * Z%-   ABC%*1.1)

check_literal:ret1 
check_sub_expr: ret1
scan_sub_expr:
scan_literal:lit=' (' ' ( 2 * 3 + 3 * Z%-   ABC%*1.1)
'
scan_literal:After drop space:( 2 * 3 + 3 * Z%-   ABC%*1.1)

scan_literal:while loop:( 2 * 3 + 3 * Z%-   ABC%*1.1)

scan_expression: ' 2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_eitem: '2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_operator: 2 * 3 + 3 * Z%-   ABC%*1.1)

check_literal:lit=',' idx=14 '2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=14 '2 * 3 + 3 * Z%-   ABC%*1.1)
'
  ',' != '2'
check_literal: ret0
check_operator:ret0
check_function: '2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=14 '2 * 3 + 3 * Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=14 '2 * 3 + 3 * Z%-   ABC%*1.1)
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=14 '2 * 3 + 3 * Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=14 '2 * 3 + 3 * Z%-   ABC%*1.1)
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
scan_eitem:
check_operator: 2 * 3 + 3 * Z%-   ABC%*1.1)

check_literal:lit=',' idx=14 '2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=14 '2 * 3 + 3 * Z%-   ABC%*1.1)
'
  ',' != '2'
check_literal: ret0
check_operator:ret0
check_function: '2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=14 '2 * 3 + 3 * Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=14 '2 * 3 + 3 * Z%-   ABC%*1.1)
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=14 '2 * 3 + 3 * Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=14 '2 * 3 + 3 * Z%-   ABC%*1.1)
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_integer:ret1
check_number: ret1
scan_atom:
check_literal:lit=' %' idx=14 '2 * 3 + 3 * Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=14 '2 * 3 + 3 * Z%-   ABC%*1.1)
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=14 '2 * 3 + 3 * Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=14 '2 * 3 + 3 * Z%-   ABC%*1.1)
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_integer:ret1
check_number: ret1
scan_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2 * 3 + 3 * Z%-   ABC%*1.1)
'
check_integer:ret1
scan_integer:
scan_integer:ret0
check_eitem: '* 3 + 3 * Z%-   ABC%*1.1)
'
check_operator: * 3 + 3 * Z%-   ABC%*1.1)

check_literal:lit=',' idx=16 '* 3 + 3 * Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=16 '* 3 + 3 * Z%-   ABC%*1.1)
'
  ',' != '*'
check_literal: ret0
check_operator: ret1
check_eitem:ret1
scan_eitem:
check_operator: * 3 + 3 * Z%-   ABC%*1.1)

check_literal:lit=',' idx=16 '* 3 + 3 * Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=16 '* 3 + 3 * Z%-   ABC%*1.1)
'
  ',' != '*'
check_literal: ret0
check_operator: ret1
scan_operator: '* 3 + 3 * Z%-   ABC%*1.1)
'
check_literal:lit=',' idx=16 '* 3 + 3 * Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=16 '* 3 + 3 * Z%-   ABC%*1.1)
'
  ',' != '*'
check_literal: ret0
scan_operator: ret1 ' 3 + 3 * Z%-   ABC%*1.1)
'
check_eitem: ' 3 + 3 * Z%-   ABC%*1.1)
'
check_operator:  3 + 3 * Z%-   ABC%*1.1)

check_literal:lit=',' idx=18 '3 + 3 * Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=18 '3 + 3 * Z%-   ABC%*1.1)
'
  ',' != '3'
check_literal: ret0
check_operator:ret0
check_function: '3 + 3 * Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=17 ' 3 + 3 * Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=18 '3 + 3 * Z%-   ABC%*1.1)
'
  '%' != '3'
check_literal: ret0
check_literal:lit=' "' idx=17 ' 3 + 3 * Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=18 '3 + 3 * Z%-   ABC%*1.1)
'
  '"' != '3'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '3 + 3 * Z%-   ABC%*1.1)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
scan_eitem:
check_operator:  3 + 3 * Z%-   ABC%*1.1)

check_literal:lit=',' idx=18 '3 + 3 * Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=18 '3 + 3 * Z%-   ABC%*1.1)
'
  ',' != '3'
check_literal: ret0
check_operator:ret0
check_function: '3 + 3 * Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=17 ' 3 + 3 * Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=18 '3 + 3 * Z%-   ABC%*1.1)
'
  '%' != '3'
check_literal: ret0
check_literal:lit=' "' idx=17 ' 3 + 3 * Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=18 '3 + 3 * Z%-   ABC%*1.1)
'
  '"' != '3'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '3 + 3 * Z%-   ABC%*1.1)
'
check_integer:ret1
check_number: ret1
scan_atom:
check_literal:lit=' %' idx=17 ' 3 + 3 * Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=18 '3 + 3 * Z%-   ABC%*1.1)
'
  '%' != '3'
check_literal: ret0
check_literal:lit=' "' idx=17 ' 3 + 3 * Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=18 '3 + 3 * Z%-   ABC%*1.1)
'
  '"' != '3'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '3 + 3 * Z%-   ABC%*1.1)
'
check_integer:ret1
check_number: ret1
scan_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '3 + 3 * Z%-   ABC%*1.1)
'
check_integer:ret1
scan_integer:
scan_integer:ret0
check_eitem: '+ 3 * Z%-   ABC%*1.1)
'
check_operator: + 3 * Z%-   ABC%*1.1)

check_literal:lit=',' idx=20 '+ 3 * Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=20 '+ 3 * Z%-   ABC%*1.1)
'
  ',' != '+'
check_literal: ret0
check_operator: ret1
check_eitem:ret1
scan_eitem:
check_operator: + 3 * Z%-   ABC%*1.1)

check_literal:lit=',' idx=20 '+ 3 * Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=20 '+ 3 * Z%-   ABC%*1.1)
'
  ',' != '+'
check_literal: ret0
check_operator: ret1
scan_operator: '+ 3 * Z%-   ABC%*1.1)
'
check_literal:lit=',' idx=20 '+ 3 * Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=20 '+ 3 * Z%-   ABC%*1.1)
'
  ',' != '+'
check_literal: ret0
scan_operator: ret1 ' 3 * Z%-   ABC%*1.1)
'
check_eitem: ' 3 * Z%-   ABC%*1.1)
'
check_operator:  3 * Z%-   ABC%*1.1)

check_literal:lit=',' idx=22 '3 * Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=22 '3 * Z%-   ABC%*1.1)
'
  ',' != '3'
check_literal: ret0
check_operator:ret0
check_function: '3 * Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=21 ' 3 * Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=22 '3 * Z%-   ABC%*1.1)
'
  '%' != '3'
check_literal: ret0
check_literal:lit=' "' idx=21 ' 3 * Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=22 '3 * Z%-   ABC%*1.1)
'
  '"' != '3'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '3 * Z%-   ABC%*1.1)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
scan_eitem:
check_operator:  3 * Z%-   ABC%*1.1)

check_literal:lit=',' idx=22 '3 * Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=22 '3 * Z%-   ABC%*1.1)
'
  ',' != '3'
check_literal: ret0
check_operator:ret0
check_function: '3 * Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=21 ' 3 * Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=22 '3 * Z%-   ABC%*1.1)
'
  '%' != '3'
check_literal: ret0
check_literal:lit=' "' idx=21 ' 3 * Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=22 '3 * Z%-   ABC%*1.1)
'
  '"' != '3'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '3 * Z%-   ABC%*1.1)
'
check_integer:ret1
check_number: ret1
scan_atom:
check_literal:lit=' %' idx=21 ' 3 * Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=22 '3 * Z%-   ABC%*1.1)
'
  '%' != '3'
check_literal: ret0
check_literal:lit=' "' idx=21 ' 3 * Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=22 '3 * Z%-   ABC%*1.1)
'
  '"' != '3'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '3 * Z%-   ABC%*1.1)
'
check_integer:ret1
check_number: ret1
scan_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '3 * Z%-   ABC%*1.1)
'
check_integer:ret1
scan_integer:
scan_integer:ret0
check_eitem: '* Z%-   ABC%*1.1)
'
check_operator: * Z%-   ABC%*1.1)

check_literal:lit=',' idx=24 '* Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=24 '* Z%-   ABC%*1.1)
'
  ',' != '*'
check_literal: ret0
check_operator: ret1
check_eitem:ret1
scan_eitem:
check_operator: * Z%-   ABC%*1.1)

check_literal:lit=',' idx=24 '* Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=24 '* Z%-   ABC%*1.1)
'
  ',' != '*'
check_literal: ret0
check_operator: ret1
scan_operator: '* Z%-   ABC%*1.1)
'
check_literal:lit=',' idx=24 '* Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=24 '* Z%-   ABC%*1.1)
'
  ',' != '*'
check_literal: ret0
scan_operator: ret1 ' Z%-   ABC%*1.1)
'
check_eitem: ' Z%-   ABC%*1.1)
'
check_operator:  Z%-   ABC%*1.1)

check_literal:lit=',' idx=26 'Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=26 'Z%-   ABC%*1.1)
'
  ',' != 'Z'
check_literal: ret0
check_operator:ret0
check_function: 'Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=25 ' Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=26 'Z%-   ABC%*1.1)
'
  '%' != 'Z'
check_literal: ret0
check_literal:lit=' "' idx=25 ' Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=26 'Z%-   ABC%*1.1)
'
  '"' != 'Z'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'Z%-   ABC%*1.1)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'Z%-   ABC%*1.1)
':
check_vname ret1 '%-   ABC%*1.1)
':
check_variable: '%-   ABC%*1.1)
'
check_variable: Ary test '-   ABC%*1.1)
'
check_literal:lit='(' idx=28 '-   ABC%*1.1)
'
check_literal:After drop space:'(' idx=28 '-   ABC%*1.1)
'
  '(' != '-'
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_eitem:ret1
scan_eitem:
check_operator:  Z%-   ABC%*1.1)

check_literal:lit=',' idx=26 'Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=26 'Z%-   ABC%*1.1)
'
  ',' != 'Z'
check_literal: ret0
check_operator:ret0
check_function: 'Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=25 ' Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=26 'Z%-   ABC%*1.1)
'
  '%' != 'Z'
check_literal: ret0
check_literal:lit=' "' idx=25 ' Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=26 'Z%-   ABC%*1.1)
'
  '"' != 'Z'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'Z%-   ABC%*1.1)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'Z%-   ABC%*1.1)
':
check_vname ret1 '%-   ABC%*1.1)
':
check_variable: '%-   ABC%*1.1)
'
check_variable: Ary test '-   ABC%*1.1)
'
check_literal:lit='(' idx=28 '-   ABC%*1.1)
'
check_literal:After drop space:'(' idx=28 '-   ABC%*1.1)
'
  '(' != '-'
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
scan_atom:
check_literal:lit=' %' idx=25 ' Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=26 'Z%-   ABC%*1.1)
'
  '%' != 'Z'
check_literal: ret0
check_literal:lit=' "' idx=25 ' Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=26 'Z%-   ABC%*1.1)
'
  '"' != 'Z'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'Z%-   ABC%*1.1)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'Z%-   ABC%*1.1)
':
check_vname ret1 '%-   ABC%*1.1)
':
check_variable: '%-   ABC%*1.1)
'
check_variable: Ary test '-   ABC%*1.1)
'
check_literal:lit='(' idx=28 '-   ABC%*1.1)
'
check_literal:After drop space:'(' idx=28 '-   ABC%*1.1)
'
  '(' != '-'
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
scan_variable:
scan_vname: ' Z%-   ABC%*1.1)
'
scan_vname: ret1 'Z'
scan_variable: '%-   ABC%*1.1)
' vname='Z'
scan_variable: Ary test '-   ABC%*1.1)
'
check_literal:lit='(' idx=28 '-   ABC%*1.1)
'
check_literal:After drop space:'(' idx=28 '-   ABC%*1.1)
'
  '(' != '-'
check_literal: ret0
scan_variable:ret1 vname='Z%' is str:0 int:1 flt:0 ary:0
VAR INFO: '                Z%' gbl:0 ref:1 int:1 flt:0 str:0 ary:0 max_str:0 max_ary:0 num_ind:0
check_eitem: '-   ABC%*1.1)
'
check_operator: -   ABC%*1.1)

check_literal:lit=',' idx=28 '-   ABC%*1.1)
'
check_literal:After drop space:',' idx=28 '-   ABC%*1.1)
'
  ',' != '-'
check_literal: ret0
check_operator: ret1
check_eitem:ret1
scan_eitem:
check_operator: -   ABC%*1.1)

check_literal:lit=',' idx=28 '-   ABC%*1.1)
'
check_literal:After drop space:',' idx=28 '-   ABC%*1.1)
'
  ',' != '-'
check_literal: ret0
check_operator: ret1
scan_operator: '-   ABC%*1.1)
'
check_literal:lit=',' idx=28 '-   ABC%*1.1)
'
check_literal:After drop space:',' idx=28 '-   ABC%*1.1)
'
  ',' != '-'
check_literal: ret0
scan_operator: ret1 '   ABC%*1.1)
'
check_eitem: '   ABC%*1.1)
'
check_operator:    ABC%*1.1)

check_literal:lit=',' idx=32 'ABC%*1.1)
'
check_literal:After drop space:',' idx=32 'ABC%*1.1)
'
  ',' != 'A'
check_literal: ret0
check_operator:ret0
check_function: 'ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=29 '   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=32 'ABC%*1.1)
'
  '%' != 'A'
check_literal: ret0
check_literal:lit=' "' idx=29 '   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=32 'ABC%*1.1)
'
  '"' != 'A'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'ABC%*1.1)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'ABC%*1.1)
':
check_vname ret1 '%*1.1)
':
check_variable: '%*1.1)
'
check_variable: Ary test '*1.1)
'
check_literal:lit='(' idx=36 '*1.1)
'
check_literal:After drop space:'(' idx=36 '*1.1)
'
  '(' != '*'
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_eitem:ret1
scan_eitem:
check_operator:    ABC%*1.1)

check_literal:lit=',' idx=32 'ABC%*1.1)
'
check_literal:After drop space:',' idx=32 'ABC%*1.1)
'
  ',' != 'A'
check_literal: ret0
check_operator:ret0
check_function: 'ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=29 '   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=32 'ABC%*1.1)
'
  '%' != 'A'
check_literal: ret0
check_literal:lit=' "' idx=29 '   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=32 'ABC%*1.1)
'
  '"' != 'A'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'ABC%*1.1)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'ABC%*1.1)
':
check_vname ret1 '%*1.1)
':
check_variable: '%*1.1)
'
check_variable: Ary test '*1.1)
'
check_literal:lit='(' idx=36 '*1.1)
'
check_literal:After drop space:'(' idx=36 '*1.1)
'
  '(' != '*'
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
scan_atom:
check_literal:lit=' %' idx=29 '   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=32 'ABC%*1.1)
'
  '%' != 'A'
check_literal: ret0
check_literal:lit=' "' idx=29 '   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=32 'ABC%*1.1)
'
  '"' != 'A'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'ABC%*1.1)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'ABC%*1.1)
':
check_vname ret1 '%*1.1)
':
check_variable: '%*1.1)
'
check_variable: Ary test '*1.1)
'
check_literal:lit='(' idx=36 '*1.1)
'
check_literal:After drop space:'(' idx=36 '*1.1)
'
  '(' != '*'
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
scan_variable:
scan_vname: '   ABC%*1.1)
'
scan_vname: ret1 'ABC'
scan_variable: '%*1.1)
' vname='ABC'
scan_variable: Ary test '*1.1)
'
check_literal:lit='(' idx=36 '*1.1)
'
check_literal:After drop space:'(' idx=36 '*1.1)
'
  '(' != '*'
check_literal: ret0
scan_variable:ret1 vname='ABC%' is str:0 int:1 flt:0 ary:0
VAR INFO: '              ABC%' gbl:0 ref:1 int:1 flt:0 str:0 ary:0 max_str:0 max_ary:0 num_ind:0
check_eitem: '*1.1)
'
check_operator: *1.1)

check_literal:lit=',' idx=36 '*1.1)
'
check_literal:After drop space:',' idx=36 '*1.1)
'
  ',' != '*'
check_literal: ret0
check_operator: ret1
check_eitem:ret1
scan_eitem:
check_operator: *1.1)

check_literal:lit=',' idx=36 '*1.1)
'
check_literal:After drop space:',' idx=36 '*1.1)
'
  ',' != '*'
check_literal: ret0
check_operator: ret1
scan_operator: '*1.1)
'
check_literal:lit=',' idx=36 '*1.1)
'
check_literal:After drop space:',' idx=36 '*1.1)
'
  ',' != '*'
check_literal: ret0
scan_operator: ret1 '1.1)
'
check_eitem: '1.1)
'
check_operator: 1.1)

check_literal:lit=',' idx=37 '1.1)
'
check_literal:After drop space:',' idx=37 '1.1)
'
  ',' != '1'
check_literal: ret0
check_operator:ret0
check_function: '1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=37 '1.1)
'
    dropping space
check_literal:After drop space:'%' idx=37 '1.1)
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=37 '1.1)
'
    dropping space
check_literal:After drop space:'"' idx=37 '1.1)
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret1
check_number: ret1
check_eitem:ret1
scan_eitem:
check_operator: 1.1)

check_literal:lit=',' idx=37 '1.1)
'
check_literal:After drop space:',' idx=37 '1.1)
'
  ',' != '1'
check_literal: ret0
check_operator:ret0
check_function: '1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=37 '1.1)
'
    dropping space
check_literal:After drop space:'%' idx=37 '1.1)
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=37 '1.1)
'
    dropping space
check_literal:After drop space:'"' idx=37 '1.1)
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret1
check_number: ret1
scan_atom:
check_literal:lit=' %' idx=37 '1.1)
'
    dropping space
check_literal:After drop space:'%' idx=37 '1.1)
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=37 '1.1)
'
    dropping space
check_literal:After drop space:'"' idx=37 '1.1)
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret1
check_number: ret1
scan_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret1
scan_float:
isfloatdigit:
scan_float: ret0
check_eitem: ')
'
check_operator: )

check_literal:lit=',' idx=40 ')
'
check_literal:After drop space:',' idx=40 ')
'
  ',' != ')'
check_literal: ret0
check_operator:ret0
check_function: ')
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=40 ')
'
    dropping space
check_literal:After drop space:'%' idx=40 ')
'
  '%' != ')'
check_literal: ret0
check_literal:lit=' "' idx=40 ')
'
    dropping space
check_literal:After drop space:'"' idx=40 ')
'
  '"' != ')'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ')
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname ')
':
check_vname ret0 ')
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=40 ')
'
    dropping space
check_literal:After drop space:'(' idx=40 ')
'
  '(' != ')'
check_literal: ret0
check_sub_expr: ret0
check_eitem:ret0
scan_expression: ret1 ')
'
scan_literal:lit=' )' ')
'
scan_literal:After drop space:)

scan_literal:while loop:)

scan_sub_expr:ret1
check_eitem: '
'
check_operator: 

check_literal:lit=',' idx=42 ''
check_literal:After drop space:',' idx=42 ''
check_literal  ret0 Empty test string
check_operator:ret0
check_function: ''
check_function: ret0
check_atom:
check_literal:lit=' %' idx=41 '
'
    dropping space
check_literal:After drop space:'%' idx=42 ''
check_literal  ret0 Empty test string
check_literal:lit=' "' idx=41 '
'
    dropping space
check_literal:After drop space:'"' idx=42 ''
check_literal  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ''
check_integer:ret0
check_number: ret0
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=41 '
'
    dropping space
check_literal:After drop space:'(' idx=42 ''
check_literal  ret0 Empty test string
check_sub_expr: ret0
check_eitem:ret0
scan_expression: ret1 '
'
scan_assignment: ret1
check_literal:lit=':' idx=42 ''
check_literal:After drop space:':' idx=42 ''
check_literal  ret0 Empty test string
cline scanned OK
=======================cline==========================
==  X%  =  2
==
scan_cline:
check_line:
check_assignment:
check_variable:
check_vname 'X%  =  2
':
check_vname ret1 '%  =  2
':
check_variable: '%  =  2
'
check_variable: Ary test '  =  2
'
check_literal:lit='(' idx=4 '  =  2
'
check_literal:After drop space:'(' idx=4 '  =  2
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_literal:lit=' =' idx=4 '  =  2
'
    dropping space
check_literal:After drop space:'=' idx=6 '=  2
'
check_literal:After while():  2

check_literal:ret1 
check_expression: '2
'
check_eitem: '2
'
check_operator: 2

check_literal:lit=',' idx=9 '2
'
check_literal:After drop space:',' idx=9 '2
'
  ',' != '2'
check_literal: ret0
check_operator:ret0
check_function: '2
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=9 '2
'
    dropping space
check_literal:After drop space:'%' idx=9 '2
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=9 '2
'
    dropping space
check_literal:After drop space:'"' idx=9 '2
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: '
'
check_operator: 

check_literal:lit=',' idx=11 ''
check_literal:After drop space:',' idx=11 ''
check_literal  ret0 Empty test string
check_operator:ret0
check_function: ''
check_function: ret0
check_atom:
check_literal:lit=' %' idx=10 '
'
    dropping space
check_literal:After drop space:'%' idx=11 ''
check_literal  ret0 Empty test string
check_literal:lit=' "' idx=10 '
'
    dropping space
check_literal:After drop space:'"' idx=11 ''
check_literal  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ''
check_integer:ret0
check_number: ret0
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=10 '
'
    dropping space
check_literal:After drop space:'(' idx=11 ''
check_literal  ret0 Empty test string
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 '
'
check_assignment:ret1
check_line:ret1
scan_cline: Checked len=1, '
'
scan_line:
check_assignment:
check_variable:
check_vname 'X%  =  2
':
check_vname ret1 '%  =  2
':
check_variable: '%  =  2
'
check_variable: Ary test '  =  2
'
check_literal:lit='(' idx=4 '  =  2
'
check_literal:After drop space:'(' idx=4 '  =  2
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_literal:lit=' =' idx=4 '  =  2
'
    dropping space
check_literal:After drop space:'=' idx=6 '=  2
'
check_literal:After while():  2

check_literal:ret1 
check_expression: '2
'
check_eitem: '2
'
check_operator: 2

check_literal:lit=',' idx=9 '2
'
check_literal:After drop space:',' idx=9 '2
'
  ',' != '2'
check_literal: ret0
check_operator:ret0
check_function: '2
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=9 '2
'
    dropping space
check_literal:After drop space:'%' idx=9 '2
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=9 '2
'
    dropping space
check_literal:After drop space:'"' idx=9 '2
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: '
'
check_operator: 

check_literal:lit=',' idx=11 ''
check_literal:After drop space:',' idx=11 ''
check_literal  ret0 Empty test string
check_operator:ret0
check_function: ''
check_function: ret0
check_atom:
check_literal:lit=' %' idx=10 '
'
    dropping space
check_literal:After drop space:'%' idx=11 ''
check_literal  ret0 Empty test string
check_literal:lit=' "' idx=10 '
'
    dropping space
check_literal:After drop space:'"' idx=11 ''
check_literal  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ''
check_integer:ret0
check_number: ret0
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=10 '
'
    dropping space
check_literal:After drop space:'(' idx=11 ''
check_literal  ret0 Empty test string
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 '
'
check_assignment:ret1
scan_assignment:
scan_variable:
scan_vname: 'X%  =  2
'
scan_vname: ret1 'X'
scan_variable: '%  =  2
' vname='X'
scan_variable: Ary test '  =  2
'
check_literal:lit='(' idx=4 '  =  2
'
check_literal:After drop space:'(' idx=4 '  =  2
'
  '(' != ' '
check_literal: ret0
scan_variable:ret1 vname='X%' is str:0 int:1 flt:0 ary:0
VAR INFO: '                X%' gbl:0 ref:1 int:1 flt:0 str:0 ary:0 max_str:0 max_ary:0 num_ind:0
scan_literal:lit=' =' '  =  2
'
scan_literal:After drop space:=  2

scan_literal:while loop:=  2

scan_expression: '  2
'
check_eitem: '2
'
check_operator: 2

check_literal:lit=',' idx=9 '2
'
check_literal:After drop space:',' idx=9 '2
'
  ',' != '2'
check_literal: ret0
check_operator:ret0
check_function: '2
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=9 '2
'
    dropping space
check_literal:After drop space:'%' idx=9 '2
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=9 '2
'
    dropping space
check_literal:After drop space:'"' idx=9 '2
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
scan_eitem:
check_operator: 2

check_literal:lit=',' idx=9 '2
'
check_literal:After drop space:',' idx=9 '2
'
  ',' != '2'
check_literal: ret0
check_operator:ret0
check_function: '2
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=9 '2
'
    dropping space
check_literal:After drop space:'%' idx=9 '2
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=9 '2
'
    dropping space
check_literal:After drop space:'"' idx=9 '2
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2
'
check_integer:ret1
check_number: ret1
scan_atom:
check_literal:lit=' %' idx=9 '2
'
    dropping space
check_literal:After drop space:'%' idx=9 '2
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=9 '2
'
    dropping space
check_literal:After drop space:'"' idx=9 '2
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2
'
check_integer:ret1
check_number: ret1
scan_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2
'
check_integer:ret1
scan_integer:
scan_integer:ret0
check_eitem: ''
check_operator: 
check_literal:lit=',' idx=11 ''
check_literal:After drop space:',' idx=11 ''
check_literal  ret0 Empty test string
check_operator:ret0
check_function: ''
check_function: ret0
check_atom:
check_literal:lit=' %' idx=11 ''
    dropping space
check_literal:After drop space:'%' idx=11 ''
check_literal  ret0 Empty test string
check_literal:lit=' "' idx=11 ''
    dropping space
check_literal:After drop space:'"' idx=11 ''
check_literal  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ''
check_integer:ret0
check_number: ret0
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=11 ''
    dropping space
check_literal:After drop space:'(' idx=11 ''
check_literal  ret0 Empty test string
check_sub_expr: ret0
check_eitem:ret0
scan_expression: ret1 ''
scan_assignment: ret1
check_literal:lit=':' idx=11 ''
check_literal:After drop space:':' idx=11 ''
check_literal  ret0 Empty test string
cline scanned OK
=======================cline==========================
==X%=Y%
==
scan_cline:
check_line:
check_assignment:
check_variable:
check_vname 'X%=Y%
':
check_vname ret1 '%=Y%
':
check_variable: '%=Y%
'
check_variable: Ary test '=Y%
'
check_literal:lit='(' idx=2 '=Y%
'
check_literal:After drop space:'(' idx=2 '=Y%
'
  '(' != '='
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_literal:lit=' =' idx=2 '=Y%
'
    dropping space
check_literal:After drop space:'=' idx=2 '=Y%
'
check_literal:After while():Y%

check_literal:ret1 
check_expression: 'Y%
'
check_eitem: 'Y%
'
check_operator: Y%

check_literal:lit=',' idx=3 'Y%
'
check_literal:After drop space:',' idx=3 'Y%
'
  ',' != 'Y'
check_literal: ret0
check_operator:ret0
check_function: 'Y%
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=3 'Y%
'
    dropping space
check_literal:After drop space:'%' idx=3 'Y%
'
  '%' != 'Y'
check_literal: ret0
check_literal:lit=' "' idx=3 'Y%
'
    dropping space
check_literal:After drop space:'"' idx=3 'Y%
'
  '"' != 'Y'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'Y%
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'Y%
':
check_vname ret1 '%
':
check_variable: '%
'
check_variable: Ary test '
'
check_literal:lit='(' idx=5 '
'
check_literal:After drop space:'(' idx=5 '
'
  '(' != '
'
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_eitem:ret1
check_eitem: '
'
check_operator: 

check_literal:lit=',' idx=6 ''
check_literal:After drop space:',' idx=6 ''
check_literal  ret0 Empty test string
check_operator:ret0
check_function: ''
check_function: ret0
check_atom:
check_literal:lit=' %' idx=5 '
'
    dropping space
check_literal:After drop space:'%' idx=6 ''
check_literal  ret0 Empty test string
check_literal:lit=' "' idx=5 '
'
    dropping space
check_literal:After drop space:'"' idx=6 ''
check_literal  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ''
check_integer:ret0
check_number: ret0
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=5 '
'
    dropping space
check_literal:After drop space:'(' idx=6 ''
check_literal  ret0 Empty test string
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 '
'
check_assignment:ret1
check_line:ret1
scan_cline: Checked len=1, '
'
scan_line:
check_assignment:
check_variable:
check_vname 'X%=Y%
':
check_vname ret1 '%=Y%
':
check_variable: '%=Y%
'
check_variable: Ary test '=Y%
'
check_literal:lit='(' idx=2 '=Y%
'
check_literal:After drop space:'(' idx=2 '=Y%
'
  '(' != '='
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_literal:lit=' =' idx=2 '=Y%
'
    dropping space
check_literal:After drop space:'=' idx=2 '=Y%
'
check_literal:After while():Y%

check_literal:ret1 
check_expression: 'Y%
'
check_eitem: 'Y%
'
check_operator: Y%

check_literal:lit=',' idx=3 'Y%
'
check_literal:After drop space:',' idx=3 'Y%
'
  ',' != 'Y'
check_literal: ret0
check_operator:ret0
check_function: 'Y%
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=3 'Y%
'
    dropping space
check_literal:After drop space:'%' idx=3 'Y%
'
  '%' != 'Y'
check_literal: ret0
check_literal:lit=' "' idx=3 'Y%
'
    dropping space
check_literal:After drop space:'"' idx=3 'Y%
'
  '"' != 'Y'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'Y%
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'Y%
':
check_vname ret1 '%
':
check_variable: '%
'
check_variable: Ary test '
'
check_literal:lit='(' idx=5 '
'
check_literal:After drop space:'(' idx=5 '
'
  '(' != '
'
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_eitem:ret1
check_eitem: '
'
check_operator: 

check_literal:lit=',' idx=6 ''
check_literal:After drop space:',' idx=6 ''
check_literal  ret0 Empty test string
check_operator:ret0
check_function: ''
check_function: ret0
check_atom:
check_literal:lit=' %' idx=5 '
'
    dropping space
check_literal:After drop space:'%' idx=6 ''
check_literal  ret0 Empty test string
check_literal:lit=' "' idx=5 '
'
    dropping space
check_literal:After drop space:'"' idx=6 ''
check_literal  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ''
check_integer:ret0
check_number: ret0
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=5 '
'
    dropping space
check_literal:After drop space:'(' idx=6 ''
check_literal  ret0 Empty test string
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 '
'
check_assignment:ret1
scan_assignment:
scan_variable:
scan_vname: 'X%=Y%
'
scan_vname: ret1 'X'
scan_variable: '%=Y%
' vname='X'
scan_variable: Ary test '=Y%
'
check_literal:lit='(' idx=2 '=Y%
'
check_literal:After drop space:'(' idx=2 '=Y%
'
  '(' != '='
check_literal: ret0
scan_variable:ret1 vname='X%' is str:0 int:1 flt:0 ary:0
VAR INFO: '                X%' gbl:0 ref:1 int:1 flt:0 str:0 ary:0 max_str:0 max_ary:0 num_ind:0
scan_literal:lit=' =' '=Y%
'
scan_literal:After drop space:=Y%

scan_literal:while loop:=Y%

scan_expression: 'Y%
'
check_eitem: 'Y%
'
check_operator: Y%

check_literal:lit=',' idx=3 'Y%
'
check_literal:After drop space:',' idx=3 'Y%
'
  ',' != 'Y'
check_literal: ret0
check_operator:ret0
check_function: 'Y%
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=3 'Y%
'
    dropping space
check_literal:After drop space:'%' idx=3 'Y%
'
  '%' != 'Y'
check_literal: ret0
check_literal:lit=' "' idx=3 'Y%
'
    dropping space
check_literal:After drop space:'"' idx=3 'Y%
'
  '"' != 'Y'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'Y%
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'Y%
':
check_vname ret1 '%
':
check_variable: '%
'
check_variable: Ary test '
'
check_literal:lit='(' idx=5 '
'
check_literal:After drop space:'(' idx=5 '
'
  '(' != '
'
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_eitem:ret1
scan_eitem:
check_operator: Y%

check_literal:lit=',' idx=3 'Y%
'
check_literal:After drop space:',' idx=3 'Y%
'
  ',' != 'Y'
check_literal: ret0
check_operator:ret0
check_function: 'Y%
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=3 'Y%
'
    dropping space
check_literal:After drop space:'%' idx=3 'Y%
'
  '%' != 'Y'
check_literal: ret0
check_literal:lit=' "' idx=3 'Y%
'
    dropping space
check_literal:After drop space:'"' idx=3 'Y%
'
  '"' != 'Y'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'Y%
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'Y%
':
check_vname ret1 '%
':
check_variable: '%
'
check_variable: Ary test '
'
check_literal:lit='(' idx=5 '
'
check_literal:After drop space:'(' idx=5 '
'
  '(' != '
'
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
scan_atom:
check_literal:lit=' %' idx=3 'Y%
'
    dropping space
check_literal:After drop space:'%' idx=3 'Y%
'
  '%' != 'Y'
check_literal: ret0
check_literal:lit=' "' idx=3 'Y%
'
    dropping space
check_literal:After drop space:'"' idx=3 'Y%
'
  '"' != 'Y'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'Y%
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'Y%
':
check_vname ret1 '%
':
check_variable: '%
'
check_variable: Ary test '
'
check_literal:lit='(' idx=5 '
'
check_literal:After drop space:'(' idx=5 '
'
  '(' != '
'
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
scan_variable:
scan_vname: 'Y%
'
scan_vname: ret1 'Y'
scan_variable: '%
' vname='Y'
scan_variable: Ary test '
'
check_literal:lit='(' idx=5 '
'
check_literal:After drop space:'(' idx=5 '
'
  '(' != '
'
check_literal: ret0
scan_variable:ret1 vname='Y%' is str:0 int:1 flt:0 ary:0
VAR INFO: '                Y%' gbl:0 ref:1 int:1 flt:0 str:0 ary:0 max_str:0 max_ary:0 num_ind:0
check_eitem: '
'
check_operator: 

check_literal:lit=',' idx=6 ''
check_literal:After drop space:',' idx=6 ''
check_literal  ret0 Empty test string
check_operator:ret0
check_function: ''
check_function: ret0
check_atom:
check_literal:lit=' %' idx=5 '
'
    dropping space
check_literal:After drop space:'%' idx=6 ''
check_literal  ret0 Empty test string
check_literal:lit=' "' idx=5 '
'
    dropping space
check_literal:After drop space:'"' idx=6 ''
check_literal  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ''
check_integer:ret0
check_number: ret0
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=5 '
'
    dropping space
check_literal:After drop space:'(' idx=6 ''
check_literal  ret0 Empty test string
check_sub_expr: ret0
check_eitem:ret0
scan_expression: ret1 '
'
scan_assignment: ret1
check_literal:lit=':' idx=6 ''
check_literal:After drop space:':' idx=6 ''
check_literal  ret0 Empty test string
cline scanned OK
=======================cline==========================
==X%= Z%
==
scan_cline:
check_line:
check_assignment:
check_variable:
check_vname 'X%= Z%
':
check_vname ret1 '%= Z%
':
check_variable: '%= Z%
'
check_variable: Ary test '= Z%
'
check_literal:lit='(' idx=2 '= Z%
'
check_literal:After drop space:'(' idx=2 '= Z%
'
  '(' != '='
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_literal:lit=' =' idx=2 '= Z%
'
    dropping space
check_literal:After drop space:'=' idx=2 '= Z%
'
check_literal:After while(): Z%

check_literal:ret1 
check_expression: 'Z%
'
check_eitem: 'Z%
'
check_operator: Z%

check_literal:lit=',' idx=4 'Z%
'
check_literal:After drop space:',' idx=4 'Z%
'
  ',' != 'Z'
check_literal: ret0
check_operator:ret0
check_function: 'Z%
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=4 'Z%
'
    dropping space
check_literal:After drop space:'%' idx=4 'Z%
'
  '%' != 'Z'
check_literal: ret0
check_literal:lit=' "' idx=4 'Z%
'
    dropping space
check_literal:After drop space:'"' idx=4 'Z%
'
  '"' != 'Z'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'Z%
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'Z%
':
check_vname ret1 '%
':
check_variable: '%
'
check_variable: Ary test '
'
check_literal:lit='(' idx=6 '
'
check_literal:After drop space:'(' idx=6 '
'
  '(' != '
'
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_eitem:ret1
check_eitem: '
'
check_operator: 

check_literal:lit=',' idx=7 ''
check_literal:After drop space:',' idx=7 ''
check_literal  ret0 Empty test string
check_operator:ret0
check_function: ''
check_function: ret0
check_atom:
check_literal:lit=' %' idx=6 '
'
    dropping space
check_literal:After drop space:'%' idx=7 ''
check_literal  ret0 Empty test string
check_literal:lit=' "' idx=6 '
'
    dropping space
check_literal:After drop space:'"' idx=7 ''
check_literal  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ''
check_integer:ret0
check_number: ret0
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=6 '
'
    dropping space
check_literal:After drop space:'(' idx=7 ''
check_literal  ret0 Empty test string
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 '
'
check_assignment:ret1
check_line:ret1
scan_cline: Checked len=1, '
'
scan_line:
check_assignment:
check_variable:
check_vname 'X%= Z%
':
check_vname ret1 '%= Z%
':
check_variable: '%= Z%
'
check_variable: Ary test '= Z%
'
check_literal:lit='(' idx=2 '= Z%
'
check_literal:After drop space:'(' idx=2 '= Z%
'
  '(' != '='
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_literal:lit=' =' idx=2 '= Z%
'
    dropping space
check_literal:After drop space:'=' idx=2 '= Z%
'
check_literal:After while(): Z%

check_literal:ret1 
check_expression: 'Z%
'
check_eitem: 'Z%
'
check_operator: Z%

check_literal:lit=',' idx=4 'Z%
'
check_literal:After drop space:',' idx=4 'Z%
'
  ',' != 'Z'
check_literal: ret0
check_operator:ret0
check_function: 'Z%
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=4 'Z%
'
    dropping space
check_literal:After drop space:'%' idx=4 'Z%
'
  '%' != 'Z'
check_literal: ret0
check_literal:lit=' "' idx=4 'Z%
'
    dropping space
check_literal:After drop space:'"' idx=4 'Z%
'
  '"' != 'Z'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'Z%
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'Z%
':
check_vname ret1 '%
':
check_variable: '%
'
check_variable: Ary test '
'
check_literal:lit='(' idx=6 '
'
check_literal:After drop space:'(' idx=6 '
'
  '(' != '
'
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_eitem:ret1
check_eitem: '
'
check_operator: 

check_literal:lit=',' idx=7 ''
check_literal:After drop space:',' idx=7 ''
check_literal  ret0 Empty test string
check_operator:ret0
check_function: ''
check_function: ret0
check_atom:
check_literal:lit=' %' idx=6 '
'
    dropping space
check_literal:After drop space:'%' idx=7 ''
check_literal  ret0 Empty test string
check_literal:lit=' "' idx=6 '
'
    dropping space
check_literal:After drop space:'"' idx=7 ''
check_literal  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ''
check_integer:ret0
check_number: ret0
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=6 '
'
    dropping space
check_literal:After drop space:'(' idx=7 ''
check_literal  ret0 Empty test string
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 '
'
check_assignment:ret1
scan_assignment:
scan_variable:
scan_vname: 'X%= Z%
'
scan_vname: ret1 'X'
scan_variable: '%= Z%
' vname='X'
scan_variable: Ary test '= Z%
'
check_literal:lit='(' idx=2 '= Z%
'
check_literal:After drop space:'(' idx=2 '= Z%
'
  '(' != '='
check_literal: ret0
scan_variable:ret1 vname='X%' is str:0 int:1 flt:0 ary:0
VAR INFO: '                X%' gbl:0 ref:1 int:1 flt:0 str:0 ary:0 max_str:0 max_ary:0 num_ind:0
scan_literal:lit=' =' '= Z%
'
scan_literal:After drop space:= Z%

scan_literal:while loop:= Z%

scan_expression: ' Z%
'
check_eitem: 'Z%
'
check_operator: Z%

check_literal:lit=',' idx=4 'Z%
'
check_literal:After drop space:',' idx=4 'Z%
'
  ',' != 'Z'
check_literal: ret0
check_operator:ret0
check_function: 'Z%
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=4 'Z%
'
    dropping space
check_literal:After drop space:'%' idx=4 'Z%
'
  '%' != 'Z'
check_literal: ret0
check_literal:lit=' "' idx=4 'Z%
'
    dropping space
check_literal:After drop space:'"' idx=4 'Z%
'
  '"' != 'Z'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'Z%
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'Z%
':
check_vname ret1 '%
':
check_variable: '%
'
check_variable: Ary test '
'
check_literal:lit='(' idx=6 '
'
check_literal:After drop space:'(' idx=6 '
'
  '(' != '
'
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_eitem:ret1
scan_eitem:
check_operator: Z%

check_literal:lit=',' idx=4 'Z%
'
check_literal:After drop space:',' idx=4 'Z%
'
  ',' != 'Z'
check_literal: ret0
check_operator:ret0
check_function: 'Z%
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=4 'Z%
'
    dropping space
check_literal:After drop space:'%' idx=4 'Z%
'
  '%' != 'Z'
check_literal: ret0
check_literal:lit=' "' idx=4 'Z%
'
    dropping space
check_literal:After drop space:'"' idx=4 'Z%
'
  '"' != 'Z'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'Z%
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'Z%
':
check_vname ret1 '%
':
check_variable: '%
'
check_variable: Ary test '
'
check_literal:lit='(' idx=6 '
'
check_literal:After drop space:'(' idx=6 '
'
  '(' != '
'
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
scan_atom:
check_literal:lit=' %' idx=4 'Z%
'
    dropping space
check_literal:After drop space:'%' idx=4 'Z%
'
  '%' != 'Z'
check_literal: ret0
check_literal:lit=' "' idx=4 'Z%
'
    dropping space
check_literal:After drop space:'"' idx=4 'Z%
'
  '"' != 'Z'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'Z%
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'Z%
':
check_vname ret1 '%
':
check_variable: '%
'
check_variable: Ary test '
'
check_literal:lit='(' idx=6 '
'
check_literal:After drop space:'(' idx=6 '
'
  '(' != '
'
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
scan_variable:
scan_vname: 'Z%
'
scan_vname: ret1 'Z'
scan_variable: '%
' vname='Z'
scan_variable: Ary test '
'
check_literal:lit='(' idx=6 '
'
check_literal:After drop space:'(' idx=6 '
'
  '(' != '
'
check_literal: ret0
scan_variable:ret1 vname='Z%' is str:0 int:1 flt:0 ary:0
VAR INFO: '                Z%' gbl:0 ref:1 int:1 flt:0 str:0 ary:0 max_str:0 max_ary:0 num_ind:0
check_eitem: '
'
check_operator: 

check_literal:lit=',' idx=7 ''
check_literal:After drop space:',' idx=7 ''
check_literal  ret0 Empty test string
check_operator:ret0
check_function: ''
check_function: ret0
check_atom:
check_literal:lit=' %' idx=6 '
'
    dropping space
check_literal:After drop space:'%' idx=7 ''
check_literal  ret0 Empty test string
check_literal:lit=' "' idx=6 '
'
    dropping space
check_literal:After drop space:'"' idx=7 ''
check_literal  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ''
check_integer:ret0
check_number: ret0
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=6 '
'
    dropping space
check_literal:After drop space:'(' idx=7 ''
check_literal  ret0 Empty test string
check_sub_expr: ret0
check_eitem:ret0
scan_expression: ret1 '
'
scan_assignment: ret1
check_literal:lit=':' idx=7 ''
check_literal:After drop space:':' idx=7 ''
check_literal  ret0 Empty test string
cline scanned OK
=======================cline==========================
==A% = 1+2
==
scan_cline:
check_line:
check_assignment:
check_variable:
check_vname 'A% = 1+2
':
check_vname ret1 '% = 1+2
':
check_variable: '% = 1+2
'
check_variable: Ary test ' = 1+2
'
check_literal:lit='(' idx=2 ' = 1+2
'
check_literal:After drop space:'(' idx=2 ' = 1+2
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_literal:lit=' =' idx=2 ' = 1+2
'
    dropping space
check_literal:After drop space:'=' idx=3 '= 1+2
'
check_literal:After while(): 1+2

check_literal:ret1 
check_expression: '1+2
'
check_eitem: '1+2
'
check_operator: 1+2

check_literal:lit=',' idx=5 '1+2
'
check_literal:After drop space:',' idx=5 '1+2
'
  ',' != '1'
check_literal: ret0
check_operator:ret0
check_function: '1+2
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=5 '1+2
'
    dropping space
check_literal:After drop space:'%' idx=5 '1+2
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=5 '1+2
'
    dropping space
check_literal:After drop space:'"' idx=5 '1+2
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '1+2
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: '+2
'
check_operator: +2

check_literal:lit=',' idx=6 '+2
'
check_literal:After drop space:',' idx=6 '+2
'
  ',' != '+'
check_literal: ret0
check_operator: ret1
check_eitem:ret1
check_eitem: '2
'
check_operator: 2

check_literal:lit=',' idx=7 '2
'
check_literal:After drop space:',' idx=7 '2
'
  ',' != '2'
check_literal: ret0
check_operator:ret0
check_function: '2
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=7 '2
'
    dropping space
check_literal:After drop space:'%' idx=7 '2
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=7 '2
'
    dropping space
check_literal:After drop space:'"' idx=7 '2
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: '
'
check_operator: 

check_literal:lit=',' idx=9 ''
check_literal:After drop space:',' idx=9 ''
check_literal  ret0 Empty test string
check_operator:ret0
check_function: ''
check_function: ret0
check_atom:
check_literal:lit=' %' idx=8 '
'
    dropping space
check_literal:After drop space:'%' idx=9 ''
check_literal  ret0 Empty test string
check_literal:lit=' "' idx=8 '
'
    dropping space
check_literal:After drop space:'"' idx=9 ''
check_literal  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ''
check_integer:ret0
check_number: ret0
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=8 '
'
    dropping space
check_literal:After drop space:'(' idx=9 ''
check_literal  ret0 Empty test string
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 '
'
check_assignment:ret1
check_line:ret1
scan_cline: Checked len=1, '
'
scan_line:
check_assignment:
check_variable:
check_vname 'A% = 1+2
':
check_vname ret1 '% = 1+2
':
check_variable: '% = 1+2
'
check_variable: Ary test ' = 1+2
'
check_literal:lit='(' idx=2 ' = 1+2
'
check_literal:After drop space:'(' idx=2 ' = 1+2
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_literal:lit=' =' idx=2 ' = 1+2
'
    dropping space
check_literal:After drop space:'=' idx=3 '= 1+2
'
check_literal:After while(): 1+2

check_literal:ret1 
check_expression: '1+2
'
check_eitem: '1+2
'
check_operator: 1+2

check_literal:lit=',' idx=5 '1+2
'
check_literal:After drop space:',' idx=5 '1+2
'
  ',' != '1'
check_literal: ret0
check_operator:ret0
check_function: '1+2
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=5 '1+2
'
    dropping space
check_literal:After drop space:'%' idx=5 '1+2
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=5 '1+2
'
    dropping space
check_literal:After drop space:'"' idx=5 '1+2
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '1+2
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: '+2
'
check_operator: +2

check_literal:lit=',' idx=6 '+2
'
check_literal:After drop space:',' idx=6 '+2
'
  ',' != '+'
check_literal: ret0
check_operator: ret1
check_eitem:ret1
check_eitem: '2
'
check_operator: 2

check_literal:lit=',' idx=7 '2
'
check_literal:After drop space:',' idx=7 '2
'
  ',' != '2'
check_literal: ret0
check_operator:ret0
check_function: '2
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=7 '2
'
    dropping space
check_literal:After drop space:'%' idx=7 '2
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=7 '2
'
    dropping space
check_literal:After drop space:'"' idx=7 '2
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: '
'
check_operator: 

check_literal:lit=',' idx=9 ''
check_literal:After drop space:',' idx=9 ''
check_literal  ret0 Empty test string
check_operator:ret0
check_function: ''
check_function: ret0
check_atom:
check_literal:lit=' %' idx=8 '
'
    dropping space
check_literal:After drop space:'%' idx=9 ''
check_literal  ret0 Empty test string
check_literal:lit=' "' idx=8 '
'
    dropping space
check_literal:After drop space:'"' idx=9 ''
check_literal  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ''
check_integer:ret0
check_number: ret0
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=8 '
'
    dropping space
check_literal:After drop space:'(' idx=9 ''
check_literal  ret0 Empty test string
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 '
'
check_assignment:ret1
scan_assignment:
scan_variable:
scan_vname: 'A% = 1+2
'
scan_vname: ret1 'A'
scan_variable: '% = 1+2
' vname='A'
scan_variable: Ary test ' = 1+2
'
check_literal:lit='(' idx=2 ' = 1+2
'
check_literal:After drop space:'(' idx=2 ' = 1+2
'
  '(' != ' '
check_literal: ret0
scan_variable:ret1 vname='A%' is str:0 int:1 flt:0 ary:0
VAR INFO: '                A%' gbl:0 ref:1 int:1 flt:0 str:0 ary:0 max_str:0 max_ary:0 num_ind:0
scan_literal:lit=' =' ' = 1+2
'
scan_literal:After drop space:= 1+2

scan_literal:while loop:= 1+2

scan_expression: ' 1+2
'
check_eitem: '1+2
'
check_operator: 1+2

check_literal:lit=',' idx=5 '1+2
'
check_literal:After drop space:',' idx=5 '1+2
'
  ',' != '1'
check_literal: ret0
check_operator:ret0
check_function: '1+2
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=5 '1+2
'
    dropping space
check_literal:After drop space:'%' idx=5 '1+2
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=5 '1+2
'
    dropping space
check_literal:After drop space:'"' idx=5 '1+2
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '1+2
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
scan_eitem:
check_operator: 1+2

check_literal:lit=',' idx=5 '1+2
'
check_literal:After drop space:',' idx=5 '1+2
'
  ',' != '1'
check_literal: ret0
check_operator:ret0
check_function: '1+2
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=5 '1+2
'
    dropping space
check_literal:After drop space:'%' idx=5 '1+2
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=5 '1+2
'
    dropping space
check_literal:After drop space:'"' idx=5 '1+2
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '1+2
'
check_integer:ret1
check_number: ret1
scan_atom:
check_literal:lit=' %' idx=5 '1+2
'
    dropping space
check_literal:After drop space:'%' idx=5 '1+2
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=5 '1+2
'
    dropping space
check_literal:After drop space:'"' idx=5 '1+2
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '1+2
'
check_integer:ret1
check_number: ret1
scan_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '1+2
'
check_integer:ret1
scan_integer:
scan_integer:ret0
check_eitem: '+2
'
check_operator: +2

check_literal:lit=',' idx=6 '+2
'
check_literal:After drop space:',' idx=6 '+2
'
  ',' != '+'
check_literal: ret0
check_operator: ret1
check_eitem:ret1
scan_eitem:
check_operator: +2

check_literal:lit=',' idx=6 '+2
'
check_literal:After drop space:',' idx=6 '+2
'
  ',' != '+'
check_literal: ret0
check_operator: ret1
scan_operator: '+2
'
check_literal:lit=',' idx=6 '+2
'
check_literal:After drop space:',' idx=6 '+2
'
  ',' != '+'
check_literal: ret0
scan_operator: ret1 '2
'
check_eitem: '2
'
check_operator: 2

check_literal:lit=',' idx=7 '2
'
check_literal:After drop space:',' idx=7 '2
'
  ',' != '2'
check_literal: ret0
check_operator:ret0
check_function: '2
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=7 '2
'
    dropping space
check_literal:After drop space:'%' idx=7 '2
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=7 '2
'
    dropping space
check_literal:After drop space:'"' idx=7 '2
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
scan_eitem:
check_operator: 2

check_literal:lit=',' idx=7 '2
'
check_literal:After drop space:',' idx=7 '2
'
  ',' != '2'
check_literal: ret0
check_operator:ret0
check_function: '2
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=7 '2
'
    dropping space
check_literal:After drop space:'%' idx=7 '2
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=7 '2
'
    dropping space
check_literal:After drop space:'"' idx=7 '2
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2
'
check_integer:ret1
check_number: ret1
scan_atom:
check_literal:lit=' %' idx=7 '2
'
    dropping space
check_literal:After drop space:'%' idx=7 '2
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=7 '2
'
    dropping space
check_literal:After drop space:'"' idx=7 '2
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2
'
check_integer:ret1
check_number: ret1
scan_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2
'
check_integer:ret1
scan_integer:
scan_integer:ret0
check_eitem: ''
check_operator: 
check_literal:lit=',' idx=9 ''
check_literal:After drop space:',' idx=9 ''
check_literal  ret0 Empty test string
check_operator:ret0
check_function: ''
check_function: ret0
check_atom:
check_literal:lit=' %' idx=9 ''
    dropping space
check_literal:After drop space:'%' idx=9 ''
check_literal  ret0 Empty test string
check_literal:lit=' "' idx=9 ''
    dropping space
check_literal:After drop space:'"' idx=9 ''
check_literal  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ''
check_integer:ret0
check_number: ret0
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=9 ''
    dropping space
check_literal:After drop space:'(' idx=9 ''
check_literal  ret0 Empty test string
check_sub_expr: ret0
check_eitem:ret0
scan_expression: ret1 ''
scan_assignment: ret1
check_literal:lit=':' idx=9 ''
check_literal:After drop space:':' idx=9 ''
check_literal  ret0 Empty test string
cline scanned OK
=======================cline==========================
==A% = B%
==
scan_cline:
check_line:
check_assignment:
check_variable:
check_vname 'A% = B%
':
check_vname ret1 '% = B%
':
check_variable: '% = B%
'
check_variable: Ary test ' = B%
'
check_literal:lit='(' idx=2 ' = B%
'
check_literal:After drop space:'(' idx=2 ' = B%
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_literal:lit=' =' idx=2 ' = B%
'
    dropping space
check_literal:After drop space:'=' idx=3 '= B%
'
check_literal:After while(): B%

check_literal:ret1 
check_expression: 'B%
'
check_eitem: 'B%
'
check_operator: B%

check_literal:lit=',' idx=5 'B%
'
check_literal:After drop space:',' idx=5 'B%
'
  ',' != 'B'
check_literal: ret0
check_operator:ret0
check_function: 'B%
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=5 'B%
'
    dropping space
check_literal:After drop space:'%' idx=5 'B%
'
  '%' != 'B'
check_literal: ret0
check_literal:lit=' "' idx=5 'B%
'
    dropping space
check_literal:After drop space:'"' idx=5 'B%
'
  '"' != 'B'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'B%
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'B%
':
check_vname ret1 '%
':
check_variable: '%
'
check_variable: Ary test '
'
check_literal:lit='(' idx=7 '
'
check_literal:After drop space:'(' idx=7 '
'
  '(' != '
'
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_eitem:ret1
check_eitem: '
'
check_operator: 

check_literal:lit=',' idx=8 ''
check_literal:After drop space:',' idx=8 ''
check_literal  ret0 Empty test string
check_operator:ret0
check_function: ''
check_function: ret0
check_atom:
check_literal:lit=' %' idx=7 '
'
    dropping space
check_literal:After drop space:'%' idx=8 ''
check_literal  ret0 Empty test string
check_literal:lit=' "' idx=7 '
'
    dropping space
check_literal:After drop space:'"' idx=8 ''
check_literal  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ''
check_integer:ret0
check_number: ret0
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=7 '
'
    dropping space
check_literal:After drop space:'(' idx=8 ''
check_literal  ret0 Empty test string
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 '
'
check_assignment:ret1
check_line:ret1
scan_cline: Checked len=1, '
'
scan_line:
check_assignment:
check_variable:
check_vname 'A% = B%
':
check_vname ret1 '% = B%
':
check_variable: '% = B%
'
check_variable: Ary test ' = B%
'
check_literal:lit='(' idx=2 ' = B%
'
check_literal:After drop space:'(' idx=2 ' = B%
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_literal:lit=' =' idx=2 ' = B%
'
    dropping space
check_literal:After drop space:'=' idx=3 '= B%
'
check_literal:After while(): B%

check_literal:ret1 
check_expression: 'B%
'
check_eitem: 'B%
'
check_operator: B%

check_literal:lit=',' idx=5 'B%
'
check_literal:After drop space:',' idx=5 'B%
'
  ',' != 'B'
check_literal: ret0
check_operator:ret0
check_function: 'B%
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=5 'B%
'
    dropping space
check_literal:After drop space:'%' idx=5 'B%
'
  '%' != 'B'
check_literal: ret0
check_literal:lit=' "' idx=5 'B%
'
    dropping space
check_literal:After drop space:'"' idx=5 'B%
'
  '"' != 'B'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'B%
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'B%
':
check_vname ret1 '%
':
check_variable: '%
'
check_variable: Ary test '
'
check_literal:lit='(' idx=7 '
'
check_literal:After drop space:'(' idx=7 '
'
  '(' != '
'
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_eitem:ret1
check_eitem: '
'
check_operator: 

check_literal:lit=',' idx=8 ''
check_literal:After drop space:',' idx=8 ''
check_literal  ret0 Empty test string
check_operator:ret0
check_function: ''
check_function: ret0
check_atom:
check_literal:lit=' %' idx=7 '
'
    dropping space
check_literal:After drop space:'%' idx=8 ''
check_literal  ret0 Empty test string
check_literal:lit=' "' idx=7 '
'
    dropping space
check_literal:After drop space:'"' idx=8 ''
check_literal  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ''
check_integer:ret0
check_number: ret0
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=7 '
'
    dropping space
check_literal:After drop space:'(' idx=8 ''
check_literal  ret0 Empty test string
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 '
'
check_assignment:ret1
scan_assignment:
scan_variable:
scan_vname: 'A% = B%
'
scan_vname: ret1 'A'
scan_variable: '% = B%
' vname='A'
scan_variable: Ary test ' = B%
'
check_literal:lit='(' idx=2 ' = B%
'
check_literal:After drop space:'(' idx=2 ' = B%
'
  '(' != ' '
check_literal: ret0
scan_variable:ret1 vname='A%' is str:0 int:1 flt:0 ary:0
VAR INFO: '                A%' gbl:0 ref:1 int:1 flt:0 str:0 ary:0 max_str:0 max_ary:0 num_ind:0
scan_literal:lit=' =' ' = B%
'
scan_literal:After drop space:= B%

scan_literal:while loop:= B%

scan_expression: ' B%
'
check_eitem: 'B%
'
check_operator: B%

check_literal:lit=',' idx=5 'B%
'
check_literal:After drop space:',' idx=5 'B%
'
  ',' != 'B'
check_literal: ret0
check_operator:ret0
check_function: 'B%
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=5 'B%
'
    dropping space
check_literal:After drop space:'%' idx=5 'B%
'
  '%' != 'B'
check_literal: ret0
check_literal:lit=' "' idx=5 'B%
'
    dropping space
check_literal:After drop space:'"' idx=5 'B%
'
  '"' != 'B'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'B%
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'B%
':
check_vname ret1 '%
':
check_variable: '%
'
check_variable: Ary test '
'
check_literal:lit='(' idx=7 '
'
check_literal:After drop space:'(' idx=7 '
'
  '(' != '
'
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_eitem:ret1
scan_eitem:
check_operator: B%

check_literal:lit=',' idx=5 'B%
'
check_literal:After drop space:',' idx=5 'B%
'
  ',' != 'B'
check_literal: ret0
check_operator:ret0
check_function: 'B%
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=5 'B%
'
    dropping space
check_literal:After drop space:'%' idx=5 'B%
'
  '%' != 'B'
check_literal: ret0
check_literal:lit=' "' idx=5 'B%
'
    dropping space
check_literal:After drop space:'"' idx=5 'B%
'
  '"' != 'B'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'B%
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'B%
':
check_vname ret1 '%
':
check_variable: '%
'
check_variable: Ary test '
'
check_literal:lit='(' idx=7 '
'
check_literal:After drop space:'(' idx=7 '
'
  '(' != '
'
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
scan_atom:
check_literal:lit=' %' idx=5 'B%
'
    dropping space
check_literal:After drop space:'%' idx=5 'B%
'
  '%' != 'B'
check_literal: ret0
check_literal:lit=' "' idx=5 'B%
'
    dropping space
check_literal:After drop space:'"' idx=5 'B%
'
  '"' != 'B'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'B%
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'B%
':
check_vname ret1 '%
':
check_variable: '%
'
check_variable: Ary test '
'
check_literal:lit='(' idx=7 '
'
check_literal:After drop space:'(' idx=7 '
'
  '(' != '
'
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
scan_variable:
scan_vname: 'B%
'
scan_vname: ret1 'B'
scan_variable: '%
' vname='B'
scan_variable: Ary test '
'
check_literal:lit='(' idx=7 '
'
check_literal:After drop space:'(' idx=7 '
'
  '(' != '
'
check_literal: ret0
scan_variable:ret1 vname='B%' is str:0 int:1 flt:0 ary:0
VAR INFO: '                B%' gbl:0 ref:1 int:1 flt:0 str:0 ary:0 max_str:0 max_ary:0 num_ind:0
check_eitem: '
'
check_operator: 

check_literal:lit=',' idx=8 ''
check_literal:After drop space:',' idx=8 ''
check_literal  ret0 Empty test string
check_operator:ret0
check_function: ''
check_function: ret0
check_atom:
check_literal:lit=' %' idx=7 '
'
    dropping space
check_literal:After drop space:'%' idx=8 ''
check_literal  ret0 Empty test string
check_literal:lit=' "' idx=7 '
'
    dropping space
check_literal:After drop space:'"' idx=8 ''
check_literal  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ''
check_integer:ret0
check_number: ret0
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=7 '
'
    dropping space
check_literal:After drop space:'(' idx=8 ''
check_literal  ret0 Empty test string
check_sub_expr: ret0
check_eitem:ret0
scan_expression: ret1 '
'
scan_assignment: ret1
check_literal:lit=':' idx=8 ''
check_literal:After drop space:':' idx=8 ''
check_literal  ret0 Empty test string
cline scanned OK
=======================cline==========================
==A% = A% + B%
==
scan_cline:
check_line:
check_assignment:
check_variable:
check_vname 'A% = A% + B%
':
check_vname ret1 '% = A% + B%
':
check_variable: '% = A% + B%
'
check_variable: Ary test ' = A% + B%
'
check_literal:lit='(' idx=2 ' = A% + B%
'
check_literal:After drop space:'(' idx=2 ' = A% + B%
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_literal:lit=' =' idx=2 ' = A% + B%
'
    dropping space
check_literal:After drop space:'=' idx=3 '= A% + B%
'
check_literal:After while(): A% + B%

check_literal:ret1 
check_expression: 'A% + B%
'
check_eitem: 'A% + B%
'
check_operator: A% + B%

check_literal:lit=',' idx=5 'A% + B%
'
check_literal:After drop space:',' idx=5 'A% + B%
'
  ',' != 'A'
check_literal: ret0
check_operator:ret0
check_function: 'A% + B%
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=5 'A% + B%
'
    dropping space
check_literal:After drop space:'%' idx=5 'A% + B%
'
  '%' != 'A'
check_literal: ret0
check_literal:lit=' "' idx=5 'A% + B%
'
    dropping space
check_literal:After drop space:'"' idx=5 'A% + B%
'
  '"' != 'A'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'A% + B%
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'A% + B%
':
check_vname ret1 '% + B%
':
check_variable: '% + B%
'
check_variable: Ary test ' + B%
'
check_literal:lit='(' idx=7 ' + B%
'
check_literal:After drop space:'(' idx=7 ' + B%
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_eitem:ret1
check_eitem: ' + B%
'
check_operator:  + B%

check_literal:lit=',' idx=8 '+ B%
'
check_literal:After drop space:',' idx=8 '+ B%
'
  ',' != '+'
check_literal: ret0
check_operator: ret1
check_eitem:ret1
check_eitem: ' B%
'
check_operator:  B%

check_literal:lit=',' idx=10 'B%
'
check_literal:After drop space:',' idx=10 'B%
'
  ',' != 'B'
check_literal: ret0
check_operator:ret0
check_function: 'B%
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=9 ' B%
'
    dropping space
check_literal:After drop space:'%' idx=10 'B%
'
  '%' != 'B'
check_literal: ret0
check_literal:lit=' "' idx=9 ' B%
'
    dropping space
check_literal:After drop space:'"' idx=10 'B%
'
  '"' != 'B'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'B%
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'B%
':
check_vname ret1 '%
':
check_variable: '%
'
check_variable: Ary test '
'
check_literal:lit='(' idx=12 '
'
check_literal:After drop space:'(' idx=12 '
'
  '(' != '
'
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_eitem:ret1
check_eitem: '
'
check_operator: 

check_literal:lit=',' idx=13 ''
check_literal:After drop space:',' idx=13 ''
check_literal  ret0 Empty test string
check_operator:ret0
check_function: ''
check_function: ret0
check_atom:
check_literal:lit=' %' idx=12 '
'
    dropping space
check_literal:After drop space:'%' idx=13 ''
check_literal  ret0 Empty test string
check_literal:lit=' "' idx=12 '
'
    dropping space
check_literal:After drop space:'"' idx=13 ''
check_literal  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ''
check_integer:ret0
check_number: ret0
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=12 '
'
    dropping space
check_literal:After drop space:'(' idx=13 ''
check_literal  ret0 Empty test string
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 '
'
check_assignment:ret1
check_line:ret1
scan_cline: Checked len=1, '
'
scan_line:
check_assignment:
check_variable:
check_vname 'A% = A% + B%
':
check_vname ret1 '% = A% + B%
':
check_variable: '% = A% + B%
'
check_variable: Ary test ' = A% + B%
'
check_literal:lit='(' idx=2 ' = A% + B%
'
check_literal:After drop space:'(' idx=2 ' = A% + B%
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_literal:lit=' =' idx=2 ' = A% + B%
'
    dropping space
check_literal:After drop space:'=' idx=3 '= A% + B%
'
check_literal:After while(): A% + B%

check_literal:ret1 
check_expression: 'A% + B%
'
check_eitem: 'A% + B%
'
check_operator: A% + B%

check_literal:lit=',' idx=5 'A% + B%
'
check_literal:After drop space:',' idx=5 'A% + B%
'
  ',' != 'A'
check_literal: ret0
check_operator:ret0
check_function: 'A% + B%
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=5 'A% + B%
'
    dropping space
check_literal:After drop space:'%' idx=5 'A% + B%
'
  '%' != 'A'
check_literal: ret0
check_literal:lit=' "' idx=5 'A% + B%
'
    dropping space
check_literal:After drop space:'"' idx=5 'A% + B%
'
  '"' != 'A'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'A% + B%
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'A% + B%
':
check_vname ret1 '% + B%
':
check_variable: '% + B%
'
check_variable: Ary test ' + B%
'
check_literal:lit='(' idx=7 ' + B%
'
check_literal:After drop space:'(' idx=7 ' + B%
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_eitem:ret1
check_eitem: ' + B%
'
check_operator:  + B%

check_literal:lit=',' idx=8 '+ B%
'
check_literal:After drop space:',' idx=8 '+ B%
'
  ',' != '+'
check_literal: ret0
check_operator: ret1
check_eitem:ret1
check_eitem: ' B%
'
check_operator:  B%

check_literal:lit=',' idx=10 'B%
'
check_literal:After drop space:',' idx=10 'B%
'
  ',' != 'B'
check_literal: ret0
check_operator:ret0
check_function: 'B%
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=9 ' B%
'
    dropping space
check_literal:After drop space:'%' idx=10 'B%
'
  '%' != 'B'
check_literal: ret0
check_literal:lit=' "' idx=9 ' B%
'
    dropping space
check_literal:After drop space:'"' idx=10 'B%
'
  '"' != 'B'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'B%
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'B%
':
check_vname ret1 '%
':
check_variable: '%
'
check_variable: Ary test '
'
check_literal:lit='(' idx=12 '
'
check_literal:After drop space:'(' idx=12 '
'
  '(' != '
'
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_eitem:ret1
check_eitem: '
'
check_operator: 

check_literal:lit=',' idx=13 ''
check_literal:After drop space:',' idx=13 ''
check_literal  ret0 Empty test string
check_operator:ret0
check_function: ''
check_function: ret0
check_atom:
check_literal:lit=' %' idx=12 '
'
    dropping space
check_literal:After drop space:'%' idx=13 ''
check_literal  ret0 Empty test string
check_literal:lit=' "' idx=12 '
'
    dropping space
check_literal:After drop space:'"' idx=13 ''
check_literal  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ''
check_integer:ret0
check_number: ret0
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=12 '
'
    dropping space
check_literal:After drop space:'(' idx=13 ''
check_literal  ret0 Empty test string
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 '
'
check_assignment:ret1
scan_assignment:
scan_variable:
scan_vname: 'A% = A% + B%
'
scan_vname: ret1 'A'
scan_variable: '% = A% + B%
' vname='A'
scan_variable: Ary test ' = A% + B%
'
check_literal:lit='(' idx=2 ' = A% + B%
'
check_literal:After drop space:'(' idx=2 ' = A% + B%
'
  '(' != ' '
check_literal: ret0
scan_variable:ret1 vname='A%' is str:0 int:1 flt:0 ary:0
VAR INFO: '                A%' gbl:0 ref:1 int:1 flt:0 str:0 ary:0 max_str:0 max_ary:0 num_ind:0
scan_literal:lit=' =' ' = A% + B%
'
scan_literal:After drop space:= A% + B%

scan_literal:while loop:= A% + B%

scan_expression: ' A% + B%
'
check_eitem: 'A% + B%
'
check_operator: A% + B%

check_literal:lit=',' idx=5 'A% + B%
'
check_literal:After drop space:',' idx=5 'A% + B%
'
  ',' != 'A'
check_literal: ret0
check_operator:ret0
check_function: 'A% + B%
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=5 'A% + B%
'
    dropping space
check_literal:After drop space:'%' idx=5 'A% + B%
'
  '%' != 'A'
check_literal: ret0
check_literal:lit=' "' idx=5 'A% + B%
'
    dropping space
check_literal:After drop space:'"' idx=5 'A% + B%
'
  '"' != 'A'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'A% + B%
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'A% + B%
':
check_vname ret1 '% + B%
':
check_variable: '% + B%
'
check_variable: Ary test ' + B%
'
check_literal:lit='(' idx=7 ' + B%
'
check_literal:After drop space:'(' idx=7 ' + B%
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_eitem:ret1
scan_eitem:
check_operator: A% + B%

check_literal:lit=',' idx=5 'A% + B%
'
check_literal:After drop space:',' idx=5 'A% + B%
'
  ',' != 'A'
check_literal: ret0
check_operator:ret0
check_function: 'A% + B%
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=5 'A% + B%
'
    dropping space
check_literal:After drop space:'%' idx=5 'A% + B%
'
  '%' != 'A'
check_literal: ret0
check_literal:lit=' "' idx=5 'A% + B%
'
    dropping space
check_literal:After drop space:'"' idx=5 'A% + B%
'
  '"' != 'A'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'A% + B%
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'A% + B%
':
check_vname ret1 '% + B%
':
check_variable: '% + B%
'
check_variable: Ary test ' + B%
'
check_literal:lit='(' idx=7 ' + B%
'
check_literal:After drop space:'(' idx=7 ' + B%
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
scan_atom:
check_literal:lit=' %' idx=5 'A% + B%
'
    dropping space
check_literal:After drop space:'%' idx=5 'A% + B%
'
  '%' != 'A'
check_literal: ret0
check_literal:lit=' "' idx=5 'A% + B%
'
    dropping space
check_literal:After drop space:'"' idx=5 'A% + B%
'
  '"' != 'A'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'A% + B%
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'A% + B%
':
check_vname ret1 '% + B%
':
check_variable: '% + B%
'
check_variable: Ary test ' + B%
'
check_literal:lit='(' idx=7 ' + B%
'
check_literal:After drop space:'(' idx=7 ' + B%
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
scan_variable:
scan_vname: 'A% + B%
'
scan_vname: ret1 'A'
scan_variable: '% + B%
' vname='A'
scan_variable: Ary test ' + B%
'
check_literal:lit='(' idx=7 ' + B%
'
check_literal:After drop space:'(' idx=7 ' + B%
'
  '(' != ' '
check_literal: ret0
scan_variable:ret1 vname='A%' is str:0 int:1 flt:0 ary:0
VAR INFO: '                A%' gbl:0 ref:1 int:1 flt:0 str:0 ary:0 max_str:0 max_ary:0 num_ind:0
check_eitem: ' + B%
'
check_operator:  + B%

check_literal:lit=',' idx=8 '+ B%
'
check_literal:After drop space:',' idx=8 '+ B%
'
  ',' != '+'
check_literal: ret0
check_operator: ret1
check_eitem:ret1
scan_eitem:
check_operator:  + B%

check_literal:lit=',' idx=8 '+ B%
'
check_literal:After drop space:',' idx=8 '+ B%
'
  ',' != '+'
check_literal: ret0
check_operator: ret1
scan_operator: ' + B%
'
check_literal:lit=',' idx=8 '+ B%
'
check_literal:After drop space:',' idx=8 '+ B%
'
  ',' != '+'
check_literal: ret0
scan_operator: ret1 ' B%
'
check_eitem: ' B%
'
check_operator:  B%

check_literal:lit=',' idx=10 'B%
'
check_literal:After drop space:',' idx=10 'B%
'
  ',' != 'B'
check_literal: ret0
check_operator:ret0
check_function: 'B%
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=9 ' B%
'
    dropping space
check_literal:After drop space:'%' idx=10 'B%
'
  '%' != 'B'
check_literal: ret0
check_literal:lit=' "' idx=9 ' B%
'
    dropping space
check_literal:After drop space:'"' idx=10 'B%
'
  '"' != 'B'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'B%
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'B%
':
check_vname ret1 '%
':
check_variable: '%
'
check_variable: Ary test '
'
check_literal:lit='(' idx=12 '
'
check_literal:After drop space:'(' idx=12 '
'
  '(' != '
'
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_eitem:ret1
scan_eitem:
check_operator:  B%

check_literal:lit=',' idx=10 'B%
'
check_literal:After drop space:',' idx=10 'B%
'
  ',' != 'B'
check_literal: ret0
check_operator:ret0
check_function: 'B%
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=9 ' B%
'
    dropping space
check_literal:After drop space:'%' idx=10 'B%
'
  '%' != 'B'
check_literal: ret0
check_literal:lit=' "' idx=9 ' B%
'
    dropping space
check_literal:After drop space:'"' idx=10 'B%
'
  '"' != 'B'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'B%
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'B%
':
check_vname ret1 '%
':
check_variable: '%
'
check_variable: Ary test '
'
check_literal:lit='(' idx=12 '
'
check_literal:After drop space:'(' idx=12 '
'
  '(' != '
'
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
scan_atom:
check_literal:lit=' %' idx=9 ' B%
'
    dropping space
check_literal:After drop space:'%' idx=10 'B%
'
  '%' != 'B'
check_literal: ret0
check_literal:lit=' "' idx=9 ' B%
'
    dropping space
check_literal:After drop space:'"' idx=10 'B%
'
  '"' != 'B'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'B%
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'B%
':
check_vname ret1 '%
':
check_variable: '%
'
check_variable: Ary test '
'
check_literal:lit='(' idx=12 '
'
check_literal:After drop space:'(' idx=12 '
'
  '(' != '
'
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
scan_variable:
scan_vname: ' B%
'
scan_vname: ret1 'B'
scan_variable: '%
' vname='B'
scan_variable: Ary test '
'
check_literal:lit='(' idx=12 '
'
check_literal:After drop space:'(' idx=12 '
'
  '(' != '
'
check_literal: ret0
scan_variable:ret1 vname='B%' is str:0 int:1 flt:0 ary:0
VAR INFO: '                B%' gbl:0 ref:1 int:1 flt:0 str:0 ary:0 max_str:0 max_ary:0 num_ind:0
check_eitem: '
'
check_operator: 

check_literal:lit=',' idx=13 ''
check_literal:After drop space:',' idx=13 ''
check_literal  ret0 Empty test string
check_operator:ret0
check_function: ''
check_function: ret0
check_atom:
check_literal:lit=' %' idx=12 '
'
    dropping space
check_literal:After drop space:'%' idx=13 ''
check_literal  ret0 Empty test string
check_literal:lit=' "' idx=12 '
'
    dropping space
check_literal:After drop space:'"' idx=13 ''
check_literal  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ''
check_integer:ret0
check_number: ret0
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=12 '
'
    dropping space
check_literal:After drop space:'(' idx=13 ''
check_literal  ret0 Empty test string
check_sub_expr: ret0
check_eitem:ret0
scan_expression: ret1 '
'
scan_assignment: ret1
check_literal:lit=':' idx=13 ''
check_literal:After drop space:':' idx=13 ''
check_literal  ret0 Empty test string
cline scanned OK
=======================cline==========================
==A% = 2 + (A% * B%)
==
scan_cline:
check_line:
check_assignment:
check_variable:
check_vname 'A% = 2 + (A% * B%)
':
check_vname ret1 '% = 2 + (A% * B%)
':
check_variable: '% = 2 + (A% * B%)
'
check_variable: Ary test ' = 2 + (A% * B%)
'
check_literal:lit='(' idx=2 ' = 2 + (A% * B%)
'
check_literal:After drop space:'(' idx=2 ' = 2 + (A% * B%)
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_literal:lit=' =' idx=2 ' = 2 + (A% * B%)
'
    dropping space
check_literal:After drop space:'=' idx=3 '= 2 + (A% * B%)
'
check_literal:After while(): 2 + (A% * B%)

check_literal:ret1 
check_expression: '2 + (A% * B%)
'
check_eitem: '2 + (A% * B%)
'
check_operator: 2 + (A% * B%)

check_literal:lit=',' idx=5 '2 + (A% * B%)
'
check_literal:After drop space:',' idx=5 '2 + (A% * B%)
'
  ',' != '2'
check_literal: ret0
check_operator:ret0
check_function: '2 + (A% * B%)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=5 '2 + (A% * B%)
'
    dropping space
check_literal:After drop space:'%' idx=5 '2 + (A% * B%)
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=5 '2 + (A% * B%)
'
    dropping space
check_literal:After drop space:'"' idx=5 '2 + (A% * B%)
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2 + (A% * B%)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: ' + (A% * B%)
'
check_operator:  + (A% * B%)

check_literal:lit=',' idx=7 '+ (A% * B%)
'
check_literal:After drop space:',' idx=7 '+ (A% * B%)
'
  ',' != '+'
check_literal: ret0
check_operator: ret1
check_eitem:ret1
check_eitem: ' (A% * B%)
'
check_operator:  (A% * B%)

check_literal:lit=',' idx=9 '(A% * B%)
'
check_literal:After drop space:',' idx=9 '(A% * B%)
'
  ',' != '('
check_literal: ret0
check_operator:ret0
check_function: '(A% * B%)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=8 ' (A% * B%)
'
    dropping space
check_literal:After drop space:'%' idx=9 '(A% * B%)
'
  '%' != '('
check_literal: ret0
check_literal:lit=' "' idx=8 ' (A% * B%)
'
    dropping space
check_literal:After drop space:'"' idx=9 '(A% * B%)
'
  '"' != '('
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: '(A% * B%)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname '(A% * B%)
':
check_vname ret0 '(A% * B%)
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=8 ' (A% * B%)
'
    dropping space
check_literal:After drop space:'(' idx=9 '(A% * B%)
'
check_literal:After while():A% * B%)

check_literal:ret1 
check_sub_expr: ret1
check_eitem:ret1
check_eitem: 'A% * B%)
'
check_operator: A% * B%)

check_literal:lit=',' idx=10 'A% * B%)
'
check_literal:After drop space:',' idx=10 'A% * B%)
'
  ',' != 'A'
check_literal: ret0
check_operator:ret0
check_function: 'A% * B%)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=10 'A% * B%)
'
    dropping space
check_literal:After drop space:'%' idx=10 'A% * B%)
'
  '%' != 'A'
check_literal: ret0
check_literal:lit=' "' idx=10 'A% * B%)
'
    dropping space
check_literal:After drop space:'"' idx=10 'A% * B%)
'
  '"' != 'A'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'A% * B%)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'A% * B%)
':
check_vname ret1 '% * B%)
':
check_variable: '% * B%)
'
check_variable: Ary test ' * B%)
'
check_literal:lit='(' idx=12 ' * B%)
'
check_literal:After drop space:'(' idx=12 ' * B%)
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_eitem:ret1
check_eitem: ' * B%)
'
check_operator:  * B%)

check_literal:lit=',' idx=13 '* B%)
'
check_literal:After drop space:',' idx=13 '* B%)
'
  ',' != '*'
check_literal: ret0
check_operator: ret1
check_eitem:ret1
check_eitem: ' B%)
'
check_operator:  B%)

check_literal:lit=',' idx=15 'B%)
'
check_literal:After drop space:',' idx=15 'B%)
'
  ',' != 'B'
check_literal: ret0
check_operator:ret0
check_function: 'B%)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=14 ' B%)
'
    dropping space
check_literal:After drop space:'%' idx=15 'B%)
'
  '%' != 'B'
check_literal: ret0
check_literal:lit=' "' idx=14 ' B%)
'
    dropping space
check_literal:After drop space:'"' idx=15 'B%)
'
  '"' != 'B'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'B%)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'B%)
':
check_vname ret1 '%)
':
check_variable: '%)
'
check_variable: Ary test ')
'
check_literal:lit='(' idx=17 ')
'
check_literal:After drop space:'(' idx=17 ')
'
  '(' != ')'
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_eitem:ret1
check_eitem: ')
'
check_operator: )

check_literal:lit=',' idx=17 ')
'
check_literal:After drop space:',' idx=17 ')
'
  ',' != ')'
check_literal: ret0
check_operator:ret0
check_function: ')
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=17 ')
'
    dropping space
check_literal:After drop space:'%' idx=17 ')
'
  '%' != ')'
check_literal: ret0
check_literal:lit=' "' idx=17 ')
'
    dropping space
check_literal:After drop space:'"' idx=17 ')
'
  '"' != ')'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ')
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname ')
':
check_vname ret0 ')
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=17 ')
'
    dropping space
check_literal:After drop space:'(' idx=17 ')
'
  '(' != ')'
check_literal: ret0
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 ')
'
check_assignment:ret1
check_line:ret1
scan_cline: Checked len=2, ')
'
scan_line:
check_assignment:
check_variable:
check_vname 'A% = 2 + (A% * B%)
':
check_vname ret1 '% = 2 + (A% * B%)
':
check_variable: '% = 2 + (A% * B%)
'
check_variable: Ary test ' = 2 + (A% * B%)
'
check_literal:lit='(' idx=2 ' = 2 + (A% * B%)
'
check_literal:After drop space:'(' idx=2 ' = 2 + (A% * B%)
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_literal:lit=' =' idx=2 ' = 2 + (A% * B%)
'
    dropping space
check_literal:After drop space:'=' idx=3 '= 2 + (A% * B%)
'
check_literal:After while(): 2 + (A% * B%)

check_literal:ret1 
check_expression: '2 + (A% * B%)
'
check_eitem: '2 + (A% * B%)
'
check_operator: 2 + (A% * B%)

check_literal:lit=',' idx=5 '2 + (A% * B%)
'
check_literal:After drop space:',' idx=5 '2 + (A% * B%)
'
  ',' != '2'
check_literal: ret0
check_operator:ret0
check_function: '2 + (A% * B%)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=5 '2 + (A% * B%)
'
    dropping space
check_literal:After drop space:'%' idx=5 '2 + (A% * B%)
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=5 '2 + (A% * B%)
'
    dropping space
check_literal:After drop space:'"' idx=5 '2 + (A% * B%)
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2 + (A% * B%)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: ' + (A% * B%)
'
check_operator:  + (A% * B%)

check_literal:lit=',' idx=7 '+ (A% * B%)
'
check_literal:After drop space:',' idx=7 '+ (A% * B%)
'
  ',' != '+'
check_literal: ret0
check_operator: ret1
check_eitem:ret1
check_eitem: ' (A% * B%)
'
check_operator:  (A% * B%)

check_literal:lit=',' idx=9 '(A% * B%)
'
check_literal:After drop space:',' idx=9 '(A% * B%)
'
  ',' != '('
check_literal: ret0
check_operator:ret0
check_function: '(A% * B%)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=8 ' (A% * B%)
'
    dropping space
check_literal:After drop space:'%' idx=9 '(A% * B%)
'
  '%' != '('
check_literal: ret0
check_literal:lit=' "' idx=8 ' (A% * B%)
'
    dropping space
check_literal:After drop space:'"' idx=9 '(A% * B%)
'
  '"' != '('
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: '(A% * B%)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname '(A% * B%)
':
check_vname ret0 '(A% * B%)
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=8 ' (A% * B%)
'
    dropping space
check_literal:After drop space:'(' idx=9 '(A% * B%)
'
check_literal:After while():A% * B%)

check_literal:ret1 
check_sub_expr: ret1
check_eitem:ret1
check_eitem: 'A% * B%)
'
check_operator: A% * B%)

check_literal:lit=',' idx=10 'A% * B%)
'
check_literal:After drop space:',' idx=10 'A% * B%)
'
  ',' != 'A'
check_literal: ret0
check_operator:ret0
check_function: 'A% * B%)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=10 'A% * B%)
'
    dropping space
check_literal:After drop space:'%' idx=10 'A% * B%)
'
  '%' != 'A'
check_literal: ret0
check_literal:lit=' "' idx=10 'A% * B%)
'
    dropping space
check_literal:After drop space:'"' idx=10 'A% * B%)
'
  '"' != 'A'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'A% * B%)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'A% * B%)
':
check_vname ret1 '% * B%)
':
check_variable: '% * B%)
'
check_variable: Ary test ' * B%)
'
check_literal:lit='(' idx=12 ' * B%)
'
check_literal:After drop space:'(' idx=12 ' * B%)
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_eitem:ret1
check_eitem: ' * B%)
'
check_operator:  * B%)

check_literal:lit=',' idx=13 '* B%)
'
check_literal:After drop space:',' idx=13 '* B%)
'
  ',' != '*'
check_literal: ret0
check_operator: ret1
check_eitem:ret1
check_eitem: ' B%)
'
check_operator:  B%)

check_literal:lit=',' idx=15 'B%)
'
check_literal:After drop space:',' idx=15 'B%)
'
  ',' != 'B'
check_literal: ret0
check_operator:ret0
check_function: 'B%)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=14 ' B%)
'
    dropping space
check_literal:After drop space:'%' idx=15 'B%)
'
  '%' != 'B'
check_literal: ret0
check_literal:lit=' "' idx=14 ' B%)
'
    dropping space
check_literal:After drop space:'"' idx=15 'B%)
'
  '"' != 'B'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'B%)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'B%)
':
check_vname ret1 '%)
':
check_variable: '%)
'
check_variable: Ary test ')
'
check_literal:lit='(' idx=17 ')
'
check_literal:After drop space:'(' idx=17 ')
'
  '(' != ')'
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_eitem:ret1
check_eitem: ')
'
check_operator: )

check_literal:lit=',' idx=17 ')
'
check_literal:After drop space:',' idx=17 ')
'
  ',' != ')'
check_literal: ret0
check_operator:ret0
check_function: ')
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=17 ')
'
    dropping space
check_literal:After drop space:'%' idx=17 ')
'
  '%' != ')'
check_literal: ret0
check_literal:lit=' "' idx=17 ')
'
    dropping space
check_literal:After drop space:'"' idx=17 ')
'
  '"' != ')'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ')
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname ')
':
check_vname ret0 ')
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=17 ')
'
    dropping space
check_literal:After drop space:'(' idx=17 ')
'
  '(' != ')'
check_literal: ret0
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 ')
'
check_assignment:ret1
scan_assignment:
scan_variable:
scan_vname: 'A% = 2 + (A% * B%)
'
scan_vname: ret1 'A'
scan_variable: '% = 2 + (A% * B%)
' vname='A'
scan_variable: Ary test ' = 2 + (A% * B%)
'
check_literal:lit='(' idx=2 ' = 2 + (A% * B%)
'
check_literal:After drop space:'(' idx=2 ' = 2 + (A% * B%)
'
  '(' != ' '
check_literal: ret0
scan_variable:ret1 vname='A%' is str:0 int:1 flt:0 ary:0
VAR INFO: '                A%' gbl:0 ref:1 int:1 flt:0 str:0 ary:0 max_str:0 max_ary:0 num_ind:0
scan_literal:lit=' =' ' = 2 + (A% * B%)
'
scan_literal:After drop space:= 2 + (A% * B%)

scan_literal:while loop:= 2 + (A% * B%)

scan_expression: ' 2 + (A% * B%)
'
check_eitem: '2 + (A% * B%)
'
check_operator: 2 + (A% * B%)

check_literal:lit=',' idx=5 '2 + (A% * B%)
'
check_literal:After drop space:',' idx=5 '2 + (A% * B%)
'
  ',' != '2'
check_literal: ret0
check_operator:ret0
check_function: '2 + (A% * B%)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=5 '2 + (A% * B%)
'
    dropping space
check_literal:After drop space:'%' idx=5 '2 + (A% * B%)
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=5 '2 + (A% * B%)
'
    dropping space
check_literal:After drop space:'"' idx=5 '2 + (A% * B%)
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2 + (A% * B%)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
scan_eitem:
check_operator: 2 + (A% * B%)

check_literal:lit=',' idx=5 '2 + (A% * B%)
'
check_literal:After drop space:',' idx=5 '2 + (A% * B%)
'
  ',' != '2'
check_literal: ret0
check_operator:ret0
check_function: '2 + (A% * B%)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=5 '2 + (A% * B%)
'
    dropping space
check_literal:After drop space:'%' idx=5 '2 + (A% * B%)
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=5 '2 + (A% * B%)
'
    dropping space
check_literal:After drop space:'"' idx=5 '2 + (A% * B%)
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2 + (A% * B%)
'
check_integer:ret1
check_number: ret1
scan_atom:
check_literal:lit=' %' idx=5 '2 + (A% * B%)
'
    dropping space
check_literal:After drop space:'%' idx=5 '2 + (A% * B%)
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=5 '2 + (A% * B%)
'
    dropping space
check_literal:After drop space:'"' idx=5 '2 + (A% * B%)
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2 + (A% * B%)
'
check_integer:ret1
check_number: ret1
scan_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2 + (A% * B%)
'
check_integer:ret1
scan_integer:
scan_integer:ret0
check_eitem: '+ (A% * B%)
'
check_operator: + (A% * B%)

check_literal:lit=',' idx=7 '+ (A% * B%)
'
check_literal:After drop space:',' idx=7 '+ (A% * B%)
'
  ',' != '+'
check_literal: ret0
check_operator: ret1
check_eitem:ret1
scan_eitem:
check_operator: + (A% * B%)

check_literal:lit=',' idx=7 '+ (A% * B%)
'
check_literal:After drop space:',' idx=7 '+ (A% * B%)
'
  ',' != '+'
check_literal: ret0
check_operator: ret1
scan_operator: '+ (A% * B%)
'
check_literal:lit=',' idx=7 '+ (A% * B%)
'
check_literal:After drop space:',' idx=7 '+ (A% * B%)
'
  ',' != '+'
check_literal: ret0
scan_operator: ret1 ' (A% * B%)
'
check_eitem: ' (A% * B%)
'
check_operator:  (A% * B%)

check_literal:lit=',' idx=9 '(A% * B%)
'
check_literal:After drop space:',' idx=9 '(A% * B%)
'
  ',' != '('
check_literal: ret0
check_operator:ret0
check_function: '(A% * B%)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=8 ' (A% * B%)
'
    dropping space
check_literal:After drop space:'%' idx=9 '(A% * B%)
'
  '%' != '('
check_literal: ret0
check_literal:lit=' "' idx=8 ' (A% * B%)
'
    dropping space
check_literal:After drop space:'"' idx=9 '(A% * B%)
'
  '"' != '('
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: '(A% * B%)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname '(A% * B%)
':
check_vname ret0 '(A% * B%)
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=8 ' (A% * B%)
'
    dropping space
check_literal:After drop space:'(' idx=9 '(A% * B%)
'
check_literal:After while():A% * B%)

check_literal:ret1 
check_sub_expr: ret1
check_eitem:ret1
scan_eitem:
check_operator:  (A% * B%)

check_literal:lit=',' idx=9 '(A% * B%)
'
check_literal:After drop space:',' idx=9 '(A% * B%)
'
  ',' != '('
check_literal: ret0
check_operator:ret0
check_function: '(A% * B%)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=8 ' (A% * B%)
'
    dropping space
check_literal:After drop space:'%' idx=9 '(A% * B%)
'
  '%' != '('
check_literal: ret0
check_literal:lit=' "' idx=8 ' (A% * B%)
'
    dropping space
check_literal:After drop space:'"' idx=9 '(A% * B%)
'
  '"' != '('
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: '(A% * B%)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname '(A% * B%)
':
check_vname ret0 '(A% * B%)
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=8 ' (A% * B%)
'
    dropping space
check_literal:After drop space:'(' idx=9 '(A% * B%)
'
check_literal:After while():A% * B%)

check_literal:ret1 
check_sub_expr: ret1
scan_sub_expr:
scan_literal:lit=' (' ' (A% * B%)
'
scan_literal:After drop space:(A% * B%)

scan_literal:while loop:(A% * B%)

scan_expression: 'A% * B%)
'
check_eitem: 'A% * B%)
'
check_operator: A% * B%)

check_literal:lit=',' idx=10 'A% * B%)
'
check_literal:After drop space:',' idx=10 'A% * B%)
'
  ',' != 'A'
check_literal: ret0
check_operator:ret0
check_function: 'A% * B%)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=10 'A% * B%)
'
    dropping space
check_literal:After drop space:'%' idx=10 'A% * B%)
'
  '%' != 'A'
check_literal: ret0
check_literal:lit=' "' idx=10 'A% * B%)
'
    dropping space
check_literal:After drop space:'"' idx=10 'A% * B%)
'
  '"' != 'A'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'A% * B%)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'A% * B%)
':
check_vname ret1 '% * B%)
':
check_variable: '% * B%)
'
check_variable: Ary test ' * B%)
'
check_literal:lit='(' idx=12 ' * B%)
'
check_literal:After drop space:'(' idx=12 ' * B%)
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_eitem:ret1
scan_eitem:
check_operator: A% * B%)

check_literal:lit=',' idx=10 'A% * B%)
'
check_literal:After drop space:',' idx=10 'A% * B%)
'
  ',' != 'A'
check_literal: ret0
check_operator:ret0
check_function: 'A% * B%)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=10 'A% * B%)
'
    dropping space
check_literal:After drop space:'%' idx=10 'A% * B%)
'
  '%' != 'A'
check_literal: ret0
check_literal:lit=' "' idx=10 'A% * B%)
'
    dropping space
check_literal:After drop space:'"' idx=10 'A% * B%)
'
  '"' != 'A'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'A% * B%)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'A% * B%)
':
check_vname ret1 '% * B%)
':
check_variable: '% * B%)
'
check_variable: Ary test ' * B%)
'
check_literal:lit='(' idx=12 ' * B%)
'
check_literal:After drop space:'(' idx=12 ' * B%)
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
scan_atom:
check_literal:lit=' %' idx=10 'A% * B%)
'
    dropping space
check_literal:After drop space:'%' idx=10 'A% * B%)
'
  '%' != 'A'
check_literal: ret0
check_literal:lit=' "' idx=10 'A% * B%)
'
    dropping space
check_literal:After drop space:'"' idx=10 'A% * B%)
'
  '"' != 'A'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'A% * B%)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'A% * B%)
':
check_vname ret1 '% * B%)
':
check_variable: '% * B%)
'
check_variable: Ary test ' * B%)
'
check_literal:lit='(' idx=12 ' * B%)
'
check_literal:After drop space:'(' idx=12 ' * B%)
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
scan_variable:
scan_vname: 'A% * B%)
'
scan_vname: ret1 'A'
scan_variable: '% * B%)
' vname='A'
scan_variable: Ary test ' * B%)
'
check_literal:lit='(' idx=12 ' * B%)
'
check_literal:After drop space:'(' idx=12 ' * B%)
'
  '(' != ' '
check_literal: ret0
scan_variable:ret1 vname='A%' is str:0 int:1 flt:0 ary:0
VAR INFO: '                A%' gbl:0 ref:1 int:1 flt:0 str:0 ary:0 max_str:0 max_ary:0 num_ind:0
check_eitem: ' * B%)
'
check_operator:  * B%)

check_literal:lit=',' idx=13 '* B%)
'
check_literal:After drop space:',' idx=13 '* B%)
'
  ',' != '*'
check_literal: ret0
check_operator: ret1
check_eitem:ret1
scan_eitem:
check_operator:  * B%)

check_literal:lit=',' idx=13 '* B%)
'
check_literal:After drop space:',' idx=13 '* B%)
'
  ',' != '*'
check_literal: ret0
check_operator: ret1
scan_operator: ' * B%)
'
check_literal:lit=',' idx=13 '* B%)
'
check_literal:After drop space:',' idx=13 '* B%)
'
  ',' != '*'
check_literal: ret0
scan_operator: ret1 ' B%)
'
check_eitem: ' B%)
'
check_operator:  B%)

check_literal:lit=',' idx=15 'B%)
'
check_literal:After drop space:',' idx=15 'B%)
'
  ',' != 'B'
check_literal: ret0
check_operator:ret0
check_function: 'B%)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=14 ' B%)
'
    dropping space
check_literal:After drop space:'%' idx=15 'B%)
'
  '%' != 'B'
check_literal: ret0
check_literal:lit=' "' idx=14 ' B%)
'
    dropping space
check_literal:After drop space:'"' idx=15 'B%)
'
  '"' != 'B'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'B%)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'B%)
':
check_vname ret1 '%)
':
check_variable: '%)
'
check_variable: Ary test ')
'
check_literal:lit='(' idx=17 ')
'
check_literal:After drop space:'(' idx=17 ')
'
  '(' != ')'
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_eitem:ret1
scan_eitem:
check_operator:  B%)

check_literal:lit=',' idx=15 'B%)
'
check_literal:After drop space:',' idx=15 'B%)
'
  ',' != 'B'
check_literal: ret0
check_operator:ret0
check_function: 'B%)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=14 ' B%)
'
    dropping space
check_literal:After drop space:'%' idx=15 'B%)
'
  '%' != 'B'
check_literal: ret0
check_literal:lit=' "' idx=14 ' B%)
'
    dropping space
check_literal:After drop space:'"' idx=15 'B%)
'
  '"' != 'B'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'B%)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'B%)
':
check_vname ret1 '%)
':
check_variable: '%)
'
check_variable: Ary test ')
'
check_literal:lit='(' idx=17 ')
'
check_literal:After drop space:'(' idx=17 ')
'
  '(' != ')'
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
scan_atom:
check_literal:lit=' %' idx=14 ' B%)
'
    dropping space
check_literal:After drop space:'%' idx=15 'B%)
'
  '%' != 'B'
check_literal: ret0
check_literal:lit=' "' idx=14 ' B%)
'
    dropping space
check_literal:After drop space:'"' idx=15 'B%)
'
  '"' != 'B'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'B%)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'B%)
':
check_vname ret1 '%)
':
check_variable: '%)
'
check_variable: Ary test ')
'
check_literal:lit='(' idx=17 ')
'
check_literal:After drop space:'(' idx=17 ')
'
  '(' != ')'
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
scan_variable:
scan_vname: ' B%)
'
scan_vname: ret1 'B'
scan_variable: '%)
' vname='B'
scan_variable: Ary test ')
'
check_literal:lit='(' idx=17 ')
'
check_literal:After drop space:'(' idx=17 ')
'
  '(' != ')'
check_literal: ret0
scan_variable:ret1 vname='B%' is str:0 int:1 flt:0 ary:0
VAR INFO: '                B%' gbl:0 ref:1 int:1 flt:0 str:0 ary:0 max_str:0 max_ary:0 num_ind:0
check_eitem: ')
'
check_operator: )

check_literal:lit=',' idx=17 ')
'
check_literal:After drop space:',' idx=17 ')
'
  ',' != ')'
check_literal: ret0
check_operator:ret0
check_function: ')
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=17 ')
'
    dropping space
check_literal:After drop space:'%' idx=17 ')
'
  '%' != ')'
check_literal: ret0
check_literal:lit=' "' idx=17 ')
'
    dropping space
check_literal:After drop space:'"' idx=17 ')
'
  '"' != ')'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ')
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname ')
':
check_vname ret0 ')
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=17 ')
'
    dropping space
check_literal:After drop space:'(' idx=17 ')
'
  '(' != ')'
check_literal: ret0
check_sub_expr: ret0
check_eitem:ret0
scan_expression: ret1 ')
'
scan_literal:lit=' )' ')
'
scan_literal:After drop space:)

scan_literal:while loop:)

scan_sub_expr:ret1
check_eitem: '
'
check_operator: 

check_literal:lit=',' idx=19 ''
check_literal:After drop space:',' idx=19 ''
check_literal  ret0 Empty test string
check_operator:ret0
check_function: ''
check_function: ret0
check_atom:
check_literal:lit=' %' idx=18 '
'
    dropping space
check_literal:After drop space:'%' idx=19 ''
check_literal  ret0 Empty test string
check_literal:lit=' "' idx=18 '
'
    dropping space
check_literal:After drop space:'"' idx=19 ''
check_literal  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ''
check_integer:ret0
check_number: ret0
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=18 '
'
    dropping space
check_literal:After drop space:'(' idx=19 ''
check_literal  ret0 Empty test string
check_sub_expr: ret0
check_eitem:ret0
scan_expression: ret1 '
'
scan_assignment: ret1
check_literal:lit=':' idx=19 ''
check_literal:After drop space:':' idx=19 ''
check_literal  ret0 Empty test string
cline scanned OK
=======================cline==========================
==A = A% + (2*3+3*Z%-   ABC%*1.1)
==
scan_cline:
check_line:
check_assignment:
check_variable:
check_vname 'A = A% + (2*3+3*Z%-   ABC%*1.1)
':
check_vname ret1 ' = A% + (2*3+3*Z%-   ABC%*1.1)
':
check_variable: ' = A% + (2*3+3*Z%-   ABC%*1.1)
'
check_variable: Ary test ' = A% + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:lit='(' idx=1 ' = A% + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:'(' idx=1 ' = A% + (2*3+3*Z%-   ABC%*1.1)
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variable:ret1 
check_literal:lit=' =' idx=1 ' = A% + (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'=' idx=2 '= A% + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After while(): A% + (2*3+3*Z%-   ABC%*1.1)

check_literal:ret1 
check_expression: 'A% + (2*3+3*Z%-   ABC%*1.1)
'
check_eitem: 'A% + (2*3+3*Z%-   ABC%*1.1)
'
check_operator: A% + (2*3+3*Z%-   ABC%*1.1)

check_literal:lit=',' idx=4 'A% + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=4 'A% + (2*3+3*Z%-   ABC%*1.1)
'
  ',' != 'A'
check_literal: ret0
check_operator:ret0
check_function: 'A% + (2*3+3*Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=4 'A% + (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=4 'A% + (2*3+3*Z%-   ABC%*1.1)
'
  '%' != 'A'
check_literal: ret0
check_literal:lit=' "' idx=4 'A% + (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=4 'A% + (2*3+3*Z%-   ABC%*1.1)
'
  '"' != 'A'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'A% + (2*3+3*Z%-   ABC%*1.1)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'A% + (2*3+3*Z%-   ABC%*1.1)
':
check_vname ret1 '% + (2*3+3*Z%-   ABC%*1.1)
':
check_variable: '% + (2*3+3*Z%-   ABC%*1.1)
'
check_variable: Ary test ' + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:lit='(' idx=6 ' + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:'(' idx=6 ' + (2*3+3*Z%-   ABC%*1.1)
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_eitem:ret1
check_eitem: ' + (2*3+3*Z%-   ABC%*1.1)
'
check_operator:  + (2*3+3*Z%-   ABC%*1.1)

check_literal:lit=',' idx=7 '+ (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=7 '+ (2*3+3*Z%-   ABC%*1.1)
'
  ',' != '+'
check_literal: ret0
check_operator: ret1
check_eitem:ret1
check_eitem: ' (2*3+3*Z%-   ABC%*1.1)
'
check_operator:  (2*3+3*Z%-   ABC%*1.1)

check_literal:lit=',' idx=9 '(2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=9 '(2*3+3*Z%-   ABC%*1.1)
'
  ',' != '('
check_literal: ret0
check_operator:ret0
check_function: '(2*3+3*Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=8 ' (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=9 '(2*3+3*Z%-   ABC%*1.1)
'
  '%' != '('
check_literal: ret0
check_literal:lit=' "' idx=8 ' (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=9 '(2*3+3*Z%-   ABC%*1.1)
'
  '"' != '('
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: '(2*3+3*Z%-   ABC%*1.1)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname '(2*3+3*Z%-   ABC%*1.1)
':
check_vname ret0 '(2*3+3*Z%-   ABC%*1.1)
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=8 ' (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'(' idx=9 '(2*3+3*Z%-   ABC%*1.1)
'
check_literal:After while():2*3+3*Z%-   ABC%*1.1)

check_literal:ret1 
check_sub_expr: ret1
check_eitem:ret1
check_eitem: '2*3+3*Z%-   ABC%*1.1)
'
check_operator: 2*3+3*Z%-   ABC%*1.1)

check_literal:lit=',' idx=10 '2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=10 '2*3+3*Z%-   ABC%*1.1)
'
  ',' != '2'
check_literal: ret0
check_operator:ret0
check_function: '2*3+3*Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=10 '2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=10 '2*3+3*Z%-   ABC%*1.1)
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=10 '2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=10 '2*3+3*Z%-   ABC%*1.1)
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2*3+3*Z%-   ABC%*1.1)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: '*3+3*Z%-   ABC%*1.1)
'
check_operator: *3+3*Z%-   ABC%*1.1)

check_literal:lit=',' idx=11 '*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=11 '*3+3*Z%-   ABC%*1.1)
'
  ',' != '*'
check_literal: ret0
check_operator: ret1
check_eitem:ret1
check_eitem: '3+3*Z%-   ABC%*1.1)
'
check_operator: 3+3*Z%-   ABC%*1.1)

check_literal:lit=',' idx=12 '3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=12 '3+3*Z%-   ABC%*1.1)
'
  ',' != '3'
check_literal: ret0
check_operator:ret0
check_function: '3+3*Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=12 '3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=12 '3+3*Z%-   ABC%*1.1)
'
  '%' != '3'
check_literal: ret0
check_literal:lit=' "' idx=12 '3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=12 '3+3*Z%-   ABC%*1.1)
'
  '"' != '3'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '3+3*Z%-   ABC%*1.1)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: '+3*Z%-   ABC%*1.1)
'
check_operator: +3*Z%-   ABC%*1.1)

check_literal:lit=',' idx=13 '+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=13 '+3*Z%-   ABC%*1.1)
'
  ',' != '+'
check_literal: ret0
check_operator: ret1
check_eitem:ret1
check_eitem: '3*Z%-   ABC%*1.1)
'
check_operator: 3*Z%-   ABC%*1.1)

check_literal:lit=',' idx=14 '3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=14 '3*Z%-   ABC%*1.1)
'
  ',' != '3'
check_literal: ret0
check_operator:ret0
check_function: '3*Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=14 '3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=14 '3*Z%-   ABC%*1.1)
'
  '%' != '3'
check_literal: ret0
check_literal:lit=' "' idx=14 '3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=14 '3*Z%-   ABC%*1.1)
'
  '"' != '3'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '3*Z%-   ABC%*1.1)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: '*Z%-   ABC%*1.1)
'
check_operator: *Z%-   ABC%*1.1)

check_literal:lit=',' idx=15 '*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=15 '*Z%-   ABC%*1.1)
'
  ',' != '*'
check_literal: ret0
check_operator: ret1
check_eitem:ret1
check_eitem: 'Z%-   ABC%*1.1)
'
check_operator: Z%-   ABC%*1.1)

check_literal:lit=',' idx=16 'Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=16 'Z%-   ABC%*1.1)
'
  ',' != 'Z'
check_literal: ret0
check_operator:ret0
check_function: 'Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=16 'Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=16 'Z%-   ABC%*1.1)
'
  '%' != 'Z'
check_literal: ret0
check_literal:lit=' "' idx=16 'Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=16 'Z%-   ABC%*1.1)
'
  '"' != 'Z'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'Z%-   ABC%*1.1)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'Z%-   ABC%*1.1)
':
check_vname ret1 '%-   ABC%*1.1)
':
check_variable: '%-   ABC%*1.1)
'
check_variable: Ary test '-   ABC%*1.1)
'
check_literal:lit='(' idx=18 '-   ABC%*1.1)
'
check_literal:After drop space:'(' idx=18 '-   ABC%*1.1)
'
  '(' != '-'
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_eitem:ret1
check_eitem: '-   ABC%*1.1)
'
check_operator: -   ABC%*1.1)

check_literal:lit=',' idx=18 '-   ABC%*1.1)
'
check_literal:After drop space:',' idx=18 '-   ABC%*1.1)
'
  ',' != '-'
check_literal: ret0
check_operator: ret1
check_eitem:ret1
check_eitem: '   ABC%*1.1)
'
check_operator:    ABC%*1.1)

check_literal:lit=',' idx=22 'ABC%*1.1)
'
check_literal:After drop space:',' idx=22 'ABC%*1.1)
'
  ',' != 'A'
check_literal: ret0
check_operator:ret0
check_function: 'ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=19 '   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=22 'ABC%*1.1)
'
  '%' != 'A'
check_literal: ret0
check_literal:lit=' "' idx=19 '   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=22 'ABC%*1.1)
'
  '"' != 'A'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'ABC%*1.1)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'ABC%*1.1)
':
check_vname ret1 '%*1.1)
':
check_variable: '%*1.1)
'
check_variable: Ary test '*1.1)
'
check_literal:lit='(' idx=26 '*1.1)
'
check_literal:After drop space:'(' idx=26 '*1.1)
'
  '(' != '*'
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_eitem:ret1
check_eitem: '*1.1)
'
check_operator: *1.1)

check_literal:lit=',' idx=26 '*1.1)
'
check_literal:After drop space:',' idx=26 '*1.1)
'
  ',' != '*'
check_literal: ret0
check_operator: ret1
check_eitem:ret1
check_eitem: '1.1)
'
check_operator: 1.1)

check_literal:lit=',' idx=27 '1.1)
'
check_literal:After drop space:',' idx=27 '1.1)
'
  ',' != '1'
check_literal: ret0
check_operator:ret0
check_function: '1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=27 '1.1)
'
    dropping space
check_literal:After drop space:'%' idx=27 '1.1)
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=27 '1.1)
'
    dropping space
check_literal:After drop space:'"' idx=27 '1.1)
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret1
check_number: ret1
check_eitem:ret1
check_eitem: ')
'
check_operator: )

check_literal:lit=',' idx=30 ')
'
check_literal:After drop space:',' idx=30 ')
'
  ',' != ')'
check_literal: ret0
check_operator:ret0
check_function: ')
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=30 ')
'
    dropping space
check_literal:After drop space:'%' idx=30 ')
'
  '%' != ')'
check_literal: ret0
check_literal:lit=' "' idx=30 ')
'
    dropping space
check_literal:After drop space:'"' idx=30 ')
'
  '"' != ')'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ')
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname ')
':
check_vname ret0 ')
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=30 ')
'
    dropping space
check_literal:After drop space:'(' idx=30 ')
'
  '(' != ')'
check_literal: ret0
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 ')
'
check_assignment:ret1
check_line:ret1
scan_cline: Checked len=2, ')
'
scan_line:
check_assignment:
check_variable:
check_vname 'A = A% + (2*3+3*Z%-   ABC%*1.1)
':
check_vname ret1 ' = A% + (2*3+3*Z%-   ABC%*1.1)
':
check_variable: ' = A% + (2*3+3*Z%-   ABC%*1.1)
'
check_variable: Ary test ' = A% + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:lit='(' idx=1 ' = A% + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:'(' idx=1 ' = A% + (2*3+3*Z%-   ABC%*1.1)
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variable:ret1 
check_literal:lit=' =' idx=1 ' = A% + (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'=' idx=2 '= A% + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After while(): A% + (2*3+3*Z%-   ABC%*1.1)

check_literal:ret1 
check_expression: 'A% + (2*3+3*Z%-   ABC%*1.1)
'
check_eitem: 'A% + (2*3+3*Z%-   ABC%*1.1)
'
check_operator: A% + (2*3+3*Z%-   ABC%*1.1)

check_literal:lit=',' idx=4 'A% + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=4 'A% + (2*3+3*Z%-   ABC%*1.1)
'
  ',' != 'A'
check_literal: ret0
check_operator:ret0
check_function: 'A% + (2*3+3*Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=4 'A% + (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=4 'A% + (2*3+3*Z%-   ABC%*1.1)
'
  '%' != 'A'
check_literal: ret0
check_literal:lit=' "' idx=4 'A% + (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=4 'A% + (2*3+3*Z%-   ABC%*1.1)
'
  '"' != 'A'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'A% + (2*3+3*Z%-   ABC%*1.1)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'A% + (2*3+3*Z%-   ABC%*1.1)
':
check_vname ret1 '% + (2*3+3*Z%-   ABC%*1.1)
':
check_variable: '% + (2*3+3*Z%-   ABC%*1.1)
'
check_variable: Ary test ' + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:lit='(' idx=6 ' + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:'(' idx=6 ' + (2*3+3*Z%-   ABC%*1.1)
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_eitem:ret1
check_eitem: ' + (2*3+3*Z%-   ABC%*1.1)
'
check_operator:  + (2*3+3*Z%-   ABC%*1.1)

check_literal:lit=',' idx=7 '+ (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=7 '+ (2*3+3*Z%-   ABC%*1.1)
'
  ',' != '+'
check_literal: ret0
check_operator: ret1
check_eitem:ret1
check_eitem: ' (2*3+3*Z%-   ABC%*1.1)
'
check_operator:  (2*3+3*Z%-   ABC%*1.1)

check_literal:lit=',' idx=9 '(2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=9 '(2*3+3*Z%-   ABC%*1.1)
'
  ',' != '('
check_literal: ret0
check_operator:ret0
check_function: '(2*3+3*Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=8 ' (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=9 '(2*3+3*Z%-   ABC%*1.1)
'
  '%' != '('
check_literal: ret0
check_literal:lit=' "' idx=8 ' (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=9 '(2*3+3*Z%-   ABC%*1.1)
'
  '"' != '('
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: '(2*3+3*Z%-   ABC%*1.1)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname '(2*3+3*Z%-   ABC%*1.1)
':
check_vname ret0 '(2*3+3*Z%-   ABC%*1.1)
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=8 ' (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'(' idx=9 '(2*3+3*Z%-   ABC%*1.1)
'
check_literal:After while():2*3+3*Z%-   ABC%*1.1)

check_literal:ret1 
check_sub_expr: ret1
check_eitem:ret1
check_eitem: '2*3+3*Z%-   ABC%*1.1)
'
check_operator: 2*3+3*Z%-   ABC%*1.1)

check_literal:lit=',' idx=10 '2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=10 '2*3+3*Z%-   ABC%*1.1)
'
  ',' != '2'
check_literal: ret0
check_operator:ret0
check_function: '2*3+3*Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=10 '2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=10 '2*3+3*Z%-   ABC%*1.1)
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=10 '2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=10 '2*3+3*Z%-   ABC%*1.1)
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2*3+3*Z%-   ABC%*1.1)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: '*3+3*Z%-   ABC%*1.1)
'
check_operator: *3+3*Z%-   ABC%*1.1)

check_literal:lit=',' idx=11 '*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=11 '*3+3*Z%-   ABC%*1.1)
'
  ',' != '*'
check_literal: ret0
check_operator: ret1
check_eitem:ret1
check_eitem: '3+3*Z%-   ABC%*1.1)
'
check_operator: 3+3*Z%-   ABC%*1.1)

check_literal:lit=',' idx=12 '3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=12 '3+3*Z%-   ABC%*1.1)
'
  ',' != '3'
check_literal: ret0
check_operator:ret0
check_function: '3+3*Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=12 '3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=12 '3+3*Z%-   ABC%*1.1)
'
  '%' != '3'
check_literal: ret0
check_literal:lit=' "' idx=12 '3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=12 '3+3*Z%-   ABC%*1.1)
'
  '"' != '3'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '3+3*Z%-   ABC%*1.1)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: '+3*Z%-   ABC%*1.1)
'
check_operator: +3*Z%-   ABC%*1.1)

check_literal:lit=',' idx=13 '+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=13 '+3*Z%-   ABC%*1.1)
'
  ',' != '+'
check_literal: ret0
check_operator: ret1
check_eitem:ret1
check_eitem: '3*Z%-   ABC%*1.1)
'
check_operator: 3*Z%-   ABC%*1.1)

check_literal:lit=',' idx=14 '3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=14 '3*Z%-   ABC%*1.1)
'
  ',' != '3'
check_literal: ret0
check_operator:ret0
check_function: '3*Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=14 '3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=14 '3*Z%-   ABC%*1.1)
'
  '%' != '3'
check_literal: ret0
check_literal:lit=' "' idx=14 '3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=14 '3*Z%-   ABC%*1.1)
'
  '"' != '3'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '3*Z%-   ABC%*1.1)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: '*Z%-   ABC%*1.1)
'
check_operator: *Z%-   ABC%*1.1)

check_literal:lit=',' idx=15 '*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=15 '*Z%-   ABC%*1.1)
'
  ',' != '*'
check_literal: ret0
check_operator: ret1
check_eitem:ret1
check_eitem: 'Z%-   ABC%*1.1)
'
check_operator: Z%-   ABC%*1.1)

check_literal:lit=',' idx=16 'Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=16 'Z%-   ABC%*1.1)
'
  ',' != 'Z'
check_literal: ret0
check_operator:ret0
check_function: 'Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=16 'Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=16 'Z%-   ABC%*1.1)
'
  '%' != 'Z'
check_literal: ret0
check_literal:lit=' "' idx=16 'Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=16 'Z%-   ABC%*1.1)
'
  '"' != 'Z'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'Z%-   ABC%*1.1)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'Z%-   ABC%*1.1)
':
check_vname ret1 '%-   ABC%*1.1)
':
check_variable: '%-   ABC%*1.1)
'
check_variable: Ary test '-   ABC%*1.1)
'
check_literal:lit='(' idx=18 '-   ABC%*1.1)
'
check_literal:After drop space:'(' idx=18 '-   ABC%*1.1)
'
  '(' != '-'
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_eitem:ret1
check_eitem: '-   ABC%*1.1)
'
check_operator: -   ABC%*1.1)

check_literal:lit=',' idx=18 '-   ABC%*1.1)
'
check_literal:After drop space:',' idx=18 '-   ABC%*1.1)
'
  ',' != '-'
check_literal: ret0
check_operator: ret1
check_eitem:ret1
check_eitem: '   ABC%*1.1)
'
check_operator:    ABC%*1.1)

check_literal:lit=',' idx=22 'ABC%*1.1)
'
check_literal:After drop space:',' idx=22 'ABC%*1.1)
'
  ',' != 'A'
check_literal: ret0
check_operator:ret0
check_function: 'ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=19 '   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=22 'ABC%*1.1)
'
  '%' != 'A'
check_literal: ret0
check_literal:lit=' "' idx=19 '   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=22 'ABC%*1.1)
'
  '"' != 'A'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'ABC%*1.1)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'ABC%*1.1)
':
check_vname ret1 '%*1.1)
':
check_variable: '%*1.1)
'
check_variable: Ary test '*1.1)
'
check_literal:lit='(' idx=26 '*1.1)
'
check_literal:After drop space:'(' idx=26 '*1.1)
'
  '(' != '*'
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_eitem:ret1
check_eitem: '*1.1)
'
check_operator: *1.1)

check_literal:lit=',' idx=26 '*1.1)
'
check_literal:After drop space:',' idx=26 '*1.1)
'
  ',' != '*'
check_literal: ret0
check_operator: ret1
check_eitem:ret1
check_eitem: '1.1)
'
check_operator: 1.1)

check_literal:lit=',' idx=27 '1.1)
'
check_literal:After drop space:',' idx=27 '1.1)
'
  ',' != '1'
check_literal: ret0
check_operator:ret0
check_function: '1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=27 '1.1)
'
    dropping space
check_literal:After drop space:'%' idx=27 '1.1)
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=27 '1.1)
'
    dropping space
check_literal:After drop space:'"' idx=27 '1.1)
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret1
check_number: ret1
check_eitem:ret1
check_eitem: ')
'
check_operator: )

check_literal:lit=',' idx=30 ')
'
check_literal:After drop space:',' idx=30 ')
'
  ',' != ')'
check_literal: ret0
check_operator:ret0
check_function: ')
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=30 ')
'
    dropping space
check_literal:After drop space:'%' idx=30 ')
'
  '%' != ')'
check_literal: ret0
check_literal:lit=' "' idx=30 ')
'
    dropping space
check_literal:After drop space:'"' idx=30 ')
'
  '"' != ')'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ')
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname ')
':
check_vname ret0 ')
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=30 ')
'
    dropping space
check_literal:After drop space:'(' idx=30 ')
'
  '(' != ')'
check_literal: ret0
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 ')
'
check_assignment:ret1
scan_assignment:
scan_variable:
scan_vname: 'A = A% + (2*3+3*Z%-   ABC%*1.1)
'
scan_vname: ret1 'A'
scan_variable: ' = A% + (2*3+3*Z%-   ABC%*1.1)
' vname='A'
scan_variable: Ary test ' = A% + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:lit='(' idx=1 ' = A% + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:'(' idx=1 ' = A% + (2*3+3*Z%-   ABC%*1.1)
'
  '(' != ' '
check_literal: ret0
scan_variable:ret1 vname='A' is str:0 int:0 flt:1 ary:0
VAR INFO: '                 A' gbl:0 ref:1 int:0 flt:1 str:0 ary:0 max_str:0 max_ary:0 num_ind:0
scan_literal:lit=' =' ' = A% + (2*3+3*Z%-   ABC%*1.1)
'
scan_literal:After drop space:= A% + (2*3+3*Z%-   ABC%*1.1)

scan_literal:while loop:= A% + (2*3+3*Z%-   ABC%*1.1)

scan_expression: ' A% + (2*3+3*Z%-   ABC%*1.1)
'
check_eitem: 'A% + (2*3+3*Z%-   ABC%*1.1)
'
check_operator: A% + (2*3+3*Z%-   ABC%*1.1)

check_literal:lit=',' idx=4 'A% + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=4 'A% + (2*3+3*Z%-   ABC%*1.1)
'
  ',' != 'A'
check_literal: ret0
check_operator:ret0
check_function: 'A% + (2*3+3*Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=4 'A% + (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=4 'A% + (2*3+3*Z%-   ABC%*1.1)
'
  '%' != 'A'
check_literal: ret0
check_literal:lit=' "' idx=4 'A% + (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=4 'A% + (2*3+3*Z%-   ABC%*1.1)
'
  '"' != 'A'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'A% + (2*3+3*Z%-   ABC%*1.1)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'A% + (2*3+3*Z%-   ABC%*1.1)
':
check_vname ret1 '% + (2*3+3*Z%-   ABC%*1.1)
':
check_variable: '% + (2*3+3*Z%-   ABC%*1.1)
'
check_variable: Ary test ' + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:lit='(' idx=6 ' + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:'(' idx=6 ' + (2*3+3*Z%-   ABC%*1.1)
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_eitem:ret1
scan_eitem:
check_operator: A% + (2*3+3*Z%-   ABC%*1.1)

check_literal:lit=',' idx=4 'A% + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=4 'A% + (2*3+3*Z%-   ABC%*1.1)
'
  ',' != 'A'
check_literal: ret0
check_operator:ret0
check_function: 'A% + (2*3+3*Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=4 'A% + (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=4 'A% + (2*3+3*Z%-   ABC%*1.1)
'
  '%' != 'A'
check_literal: ret0
check_literal:lit=' "' idx=4 'A% + (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=4 'A% + (2*3+3*Z%-   ABC%*1.1)
'
  '"' != 'A'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'A% + (2*3+3*Z%-   ABC%*1.1)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'A% + (2*3+3*Z%-   ABC%*1.1)
':
check_vname ret1 '% + (2*3+3*Z%-   ABC%*1.1)
':
check_variable: '% + (2*3+3*Z%-   ABC%*1.1)
'
check_variable: Ary test ' + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:lit='(' idx=6 ' + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:'(' idx=6 ' + (2*3+3*Z%-   ABC%*1.1)
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
scan_atom:
check_literal:lit=' %' idx=4 'A% + (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=4 'A% + (2*3+3*Z%-   ABC%*1.1)
'
  '%' != 'A'
check_literal: ret0
check_literal:lit=' "' idx=4 'A% + (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=4 'A% + (2*3+3*Z%-   ABC%*1.1)
'
  '"' != 'A'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'A% + (2*3+3*Z%-   ABC%*1.1)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'A% + (2*3+3*Z%-   ABC%*1.1)
':
check_vname ret1 '% + (2*3+3*Z%-   ABC%*1.1)
':
check_variable: '% + (2*3+3*Z%-   ABC%*1.1)
'
check_variable: Ary test ' + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:lit='(' idx=6 ' + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:'(' idx=6 ' + (2*3+3*Z%-   ABC%*1.1)
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
scan_variable:
scan_vname: 'A% + (2*3+3*Z%-   ABC%*1.1)
'
scan_vname: ret1 'A'
scan_variable: '% + (2*3+3*Z%-   ABC%*1.1)
' vname='A'
scan_variable: Ary test ' + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:lit='(' idx=6 ' + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:'(' idx=6 ' + (2*3+3*Z%-   ABC%*1.1)
'
  '(' != ' '
check_literal: ret0
scan_variable:ret1 vname='A%' is str:0 int:1 flt:0 ary:0
VAR INFO: '                A%' gbl:0 ref:1 int:1 flt:0 str:0 ary:0 max_str:0 max_ary:0 num_ind:0
check_eitem: ' + (2*3+3*Z%-   ABC%*1.1)
'
check_operator:  + (2*3+3*Z%-   ABC%*1.1)

check_literal:lit=',' idx=7 '+ (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=7 '+ (2*3+3*Z%-   ABC%*1.1)
'
  ',' != '+'
check_literal: ret0
check_operator: ret1
check_eitem:ret1
scan_eitem:
check_operator:  + (2*3+3*Z%-   ABC%*1.1)

check_literal:lit=',' idx=7 '+ (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=7 '+ (2*3+3*Z%-   ABC%*1.1)
'
  ',' != '+'
check_literal: ret0
check_operator: ret1
scan_operator: ' + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:lit=',' idx=7 '+ (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=7 '+ (2*3+3*Z%-   ABC%*1.1)
'
  ',' != '+'
check_literal: ret0
scan_operator: ret1 ' (2*3+3*Z%-   ABC%*1.1)
'
check_eitem: ' (2*3+3*Z%-   ABC%*1.1)
'
check_operator:  (2*3+3*Z%-   ABC%*1.1)

check_literal:lit=',' idx=9 '(2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=9 '(2*3+3*Z%-   ABC%*1.1)
'
  ',' != '('
check_literal: ret0
check_operator:ret0
check_function: '(2*3+3*Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=8 ' (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=9 '(2*3+3*Z%-   ABC%*1.1)
'
  '%' != '('
check_literal: ret0
check_literal:lit=' "' idx=8 ' (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=9 '(2*3+3*Z%-   ABC%*1.1)
'
  '"' != '('
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: '(2*3+3*Z%-   ABC%*1.1)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname '(2*3+3*Z%-   ABC%*1.1)
':
check_vname ret0 '(2*3+3*Z%-   ABC%*1.1)
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=8 ' (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'(' idx=9 '(2*3+3*Z%-   ABC%*1.1)
'
check_literal:After while():2*3+3*Z%-   ABC%*1.1)

check_literal:ret1 
check_sub_expr: ret1
check_eitem:ret1
scan_eitem:
check_operator:  (2*3+3*Z%-   ABC%*1.1)

check_literal:lit=',' idx=9 '(2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=9 '(2*3+3*Z%-   ABC%*1.1)
'
  ',' != '('
check_literal: ret0
check_operator:ret0
check_function: '(2*3+3*Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=8 ' (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=9 '(2*3+3*Z%-   ABC%*1.1)
'
  '%' != '('
check_literal: ret0
check_literal:lit=' "' idx=8 ' (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=9 '(2*3+3*Z%-   ABC%*1.1)
'
  '"' != '('
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: '(2*3+3*Z%-   ABC%*1.1)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname '(2*3+3*Z%-   ABC%*1.1)
':
check_vname ret0 '(2*3+3*Z%-   ABC%*1.1)
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=8 ' (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'(' idx=9 '(2*3+3*Z%-   ABC%*1.1)
'
check_literal:After while():2*3+3*Z%-   ABC%*1.1)

check_literal:ret1 
check_sub_expr: ret1
scan_sub_expr:
scan_literal:lit=' (' ' (2*3+3*Z%-   ABC%*1.1)
'
scan_literal:After drop space:(2*3+3*Z%-   ABC%*1.1)

scan_literal:while loop:(2*3+3*Z%-   ABC%*1.1)

scan_expression: '2*3+3*Z%-   ABC%*1.1)
'
check_eitem: '2*3+3*Z%-   ABC%*1.1)
'
check_operator: 2*3+3*Z%-   ABC%*1.1)

check_literal:lit=',' idx=10 '2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=10 '2*3+3*Z%-   ABC%*1.1)
'
  ',' != '2'
check_literal: ret0
check_operator:ret0
check_function: '2*3+3*Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=10 '2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=10 '2*3+3*Z%-   ABC%*1.1)
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=10 '2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=10 '2*3+3*Z%-   ABC%*1.1)
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2*3+3*Z%-   ABC%*1.1)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
scan_eitem:
check_operator: 2*3+3*Z%-   ABC%*1.1)

check_literal:lit=',' idx=10 '2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=10 '2*3+3*Z%-   ABC%*1.1)
'
  ',' != '2'
check_literal: ret0
check_operator:ret0
check_function: '2*3+3*Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=10 '2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=10 '2*3+3*Z%-   ABC%*1.1)
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=10 '2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=10 '2*3+3*Z%-   ABC%*1.1)
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2*3+3*Z%-   ABC%*1.1)
'
check_integer:ret1
check_number: ret1
scan_atom:
check_literal:lit=' %' idx=10 '2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=10 '2*3+3*Z%-   ABC%*1.1)
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=10 '2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=10 '2*3+3*Z%-   ABC%*1.1)
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2*3+3*Z%-   ABC%*1.1)
'
check_integer:ret1
check_number: ret1
scan_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2*3+3*Z%-   ABC%*1.1)
'
check_integer:ret1
scan_integer:
scan_integer:ret0
check_eitem: '*3+3*Z%-   ABC%*1.1)
'
check_operator: *3+3*Z%-   ABC%*1.1)

check_literal:lit=',' idx=11 '*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=11 '*3+3*Z%-   ABC%*1.1)
'
  ',' != '*'
check_literal: ret0
check_operator: ret1
check_eitem:ret1
scan_eitem:
check_operator: *3+3*Z%-   ABC%*1.1)

check_literal:lit=',' idx=11 '*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=11 '*3+3*Z%-   ABC%*1.1)
'
  ',' != '*'
check_literal: ret0
check_operator: ret1
scan_operator: '*3+3*Z%-   ABC%*1.1)
'
check_literal:lit=',' idx=11 '*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=11 '*3+3*Z%-   ABC%*1.1)
'
  ',' != '*'
check_literal: ret0
scan_operator: ret1 '3+3*Z%-   ABC%*1.1)
'
check_eitem: '3+3*Z%-   ABC%*1.1)
'
check_operator: 3+3*Z%-   ABC%*1.1)

check_literal:lit=',' idx=12 '3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=12 '3+3*Z%-   ABC%*1.1)
'
  ',' != '3'
check_literal: ret0
check_operator:ret0
check_function: '3+3*Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=12 '3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=12 '3+3*Z%-   ABC%*1.1)
'
  '%' != '3'
check_literal: ret0
check_literal:lit=' "' idx=12 '3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=12 '3+3*Z%-   ABC%*1.1)
'
  '"' != '3'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '3+3*Z%-   ABC%*1.1)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
scan_eitem:
check_operator: 3+3*Z%-   ABC%*1.1)

check_literal:lit=',' idx=12 '3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=12 '3+3*Z%-   ABC%*1.1)
'
  ',' != '3'
check_literal: ret0
check_operator:ret0
check_function: '3+3*Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=12 '3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=12 '3+3*Z%-   ABC%*1.1)
'
  '%' != '3'
check_literal: ret0
check_literal:lit=' "' idx=12 '3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=12 '3+3*Z%-   ABC%*1.1)
'
  '"' != '3'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '3+3*Z%-   ABC%*1.1)
'
check_integer:ret1
check_number: ret1
scan_atom:
check_literal:lit=' %' idx=12 '3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=12 '3+3*Z%-   ABC%*1.1)
'
  '%' != '3'
check_literal: ret0
check_literal:lit=' "' idx=12 '3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=12 '3+3*Z%-   ABC%*1.1)
'
  '"' != '3'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '3+3*Z%-   ABC%*1.1)
'
check_integer:ret1
check_number: ret1
scan_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '3+3*Z%-   ABC%*1.1)
'
check_integer:ret1
scan_integer:
scan_integer:ret0
check_eitem: '+3*Z%-   ABC%*1.1)
'
check_operator: +3*Z%-   ABC%*1.1)

check_literal:lit=',' idx=13 '+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=13 '+3*Z%-   ABC%*1.1)
'
  ',' != '+'
check_literal: ret0
check_operator: ret1
check_eitem:ret1
scan_eitem:
check_operator: +3*Z%-   ABC%*1.1)

check_literal:lit=',' idx=13 '+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=13 '+3*Z%-   ABC%*1.1)
'
  ',' != '+'
check_literal: ret0
check_operator: ret1
scan_operator: '+3*Z%-   ABC%*1.1)
'
check_literal:lit=',' idx=13 '+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=13 '+3*Z%-   ABC%*1.1)
'
  ',' != '+'
check_literal: ret0
scan_operator: ret1 '3*Z%-   ABC%*1.1)
'
check_eitem: '3*Z%-   ABC%*1.1)
'
check_operator: 3*Z%-   ABC%*1.1)

check_literal:lit=',' idx=14 '3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=14 '3*Z%-   ABC%*1.1)
'
  ',' != '3'
check_literal: ret0
check_operator:ret0
check_function: '3*Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=14 '3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=14 '3*Z%-   ABC%*1.1)
'
  '%' != '3'
check_literal: ret0
check_literal:lit=' "' idx=14 '3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=14 '3*Z%-   ABC%*1.1)
'
  '"' != '3'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '3*Z%-   ABC%*1.1)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
scan_eitem:
check_operator: 3*Z%-   ABC%*1.1)

check_literal:lit=',' idx=14 '3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=14 '3*Z%-   ABC%*1.1)
'
  ',' != '3'
check_literal: ret0
check_operator:ret0
check_function: '3*Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=14 '3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=14 '3*Z%-   ABC%*1.1)
'
  '%' != '3'
check_literal: ret0
check_literal:lit=' "' idx=14 '3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=14 '3*Z%-   ABC%*1.1)
'
  '"' != '3'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '3*Z%-   ABC%*1.1)
'
check_integer:ret1
check_number: ret1
scan_atom:
check_literal:lit=' %' idx=14 '3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=14 '3*Z%-   ABC%*1.1)
'
  '%' != '3'
check_literal: ret0
check_literal:lit=' "' idx=14 '3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=14 '3*Z%-   ABC%*1.1)
'
  '"' != '3'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '3*Z%-   ABC%*1.1)
'
check_integer:ret1
check_number: ret1
scan_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '3*Z%-   ABC%*1.1)
'
check_integer:ret1
scan_integer:
scan_integer:ret0
check_eitem: '*Z%-   ABC%*1.1)
'
check_operator: *Z%-   ABC%*1.1)

check_literal:lit=',' idx=15 '*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=15 '*Z%-   ABC%*1.1)
'
  ',' != '*'
check_literal: ret0
check_operator: ret1
check_eitem:ret1
scan_eitem:
check_operator: *Z%-   ABC%*1.1)

check_literal:lit=',' idx=15 '*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=15 '*Z%-   ABC%*1.1)
'
  ',' != '*'
check_literal: ret0
check_operator: ret1
scan_operator: '*Z%-   ABC%*1.1)
'
check_literal:lit=',' idx=15 '*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=15 '*Z%-   ABC%*1.1)
'
  ',' != '*'
check_literal: ret0
scan_operator: ret1 'Z%-   ABC%*1.1)
'
check_eitem: 'Z%-   ABC%*1.1)
'
check_operator: Z%-   ABC%*1.1)

check_literal:lit=',' idx=16 'Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=16 'Z%-   ABC%*1.1)
'
  ',' != 'Z'
check_literal: ret0
check_operator:ret0
check_function: 'Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=16 'Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=16 'Z%-   ABC%*1.1)
'
  '%' != 'Z'
check_literal: ret0
check_literal:lit=' "' idx=16 'Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=16 'Z%-   ABC%*1.1)
'
  '"' != 'Z'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'Z%-   ABC%*1.1)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'Z%-   ABC%*1.1)
':
check_vname ret1 '%-   ABC%*1.1)
':
check_variable: '%-   ABC%*1.1)
'
check_variable: Ary test '-   ABC%*1.1)
'
check_literal:lit='(' idx=18 '-   ABC%*1.1)
'
check_literal:After drop space:'(' idx=18 '-   ABC%*1.1)
'
  '(' != '-'
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_eitem:ret1
scan_eitem:
check_operator: Z%-   ABC%*1.1)

check_literal:lit=',' idx=16 'Z%-   ABC%*1.1)
'
check_literal:After drop space:',' idx=16 'Z%-   ABC%*1.1)
'
  ',' != 'Z'
check_literal: ret0
check_operator:ret0
check_function: 'Z%-   ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=16 'Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=16 'Z%-   ABC%*1.1)
'
  '%' != 'Z'
check_literal: ret0
check_literal:lit=' "' idx=16 'Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=16 'Z%-   ABC%*1.1)
'
  '"' != 'Z'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'Z%-   ABC%*1.1)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'Z%-   ABC%*1.1)
':
check_vname ret1 '%-   ABC%*1.1)
':
check_variable: '%-   ABC%*1.1)
'
check_variable: Ary test '-   ABC%*1.1)
'
check_literal:lit='(' idx=18 '-   ABC%*1.1)
'
check_literal:After drop space:'(' idx=18 '-   ABC%*1.1)
'
  '(' != '-'
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
scan_atom:
check_literal:lit=' %' idx=16 'Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=16 'Z%-   ABC%*1.1)
'
  '%' != 'Z'
check_literal: ret0
check_literal:lit=' "' idx=16 'Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=16 'Z%-   ABC%*1.1)
'
  '"' != 'Z'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'Z%-   ABC%*1.1)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'Z%-   ABC%*1.1)
':
check_vname ret1 '%-   ABC%*1.1)
':
check_variable: '%-   ABC%*1.1)
'
check_variable: Ary test '-   ABC%*1.1)
'
check_literal:lit='(' idx=18 '-   ABC%*1.1)
'
check_literal:After drop space:'(' idx=18 '-   ABC%*1.1)
'
  '(' != '-'
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
scan_variable:
scan_vname: 'Z%-   ABC%*1.1)
'
scan_vname: ret1 'Z'
scan_variable: '%-   ABC%*1.1)
' vname='Z'
scan_variable: Ary test '-   ABC%*1.1)
'
check_literal:lit='(' idx=18 '-   ABC%*1.1)
'
check_literal:After drop space:'(' idx=18 '-   ABC%*1.1)
'
  '(' != '-'
check_literal: ret0
scan_variable:ret1 vname='Z%' is str:0 int:1 flt:0 ary:0
VAR INFO: '                Z%' gbl:0 ref:1 int:1 flt:0 str:0 ary:0 max_str:0 max_ary:0 num_ind:0
check_eitem: '-   ABC%*1.1)
'
check_operator: -   ABC%*1.1)

check_literal:lit=',' idx=18 '-   ABC%*1.1)
'
check_literal:After drop space:',' idx=18 '-   ABC%*1.1)
'
  ',' != '-'
check_literal: ret0
check_operator: ret1
check_eitem:ret1
scan_eitem:
check_operator: -   ABC%*1.1)

check_literal:lit=',' idx=18 '-   ABC%*1.1)
'
check_literal:After drop space:',' idx=18 '-   ABC%*1.1)
'
  ',' != '-'
check_literal: ret0
check_operator: ret1
scan_operator: '-   ABC%*1.1)
'
check_literal:lit=',' idx=18 '-   ABC%*1.1)
'
check_literal:After drop space:',' idx=18 '-   ABC%*1.1)
'
  ',' != '-'
check_literal: ret0
scan_operator: ret1 '   ABC%*1.1)
'
check_eitem: '   ABC%*1.1)
'
check_operator:    ABC%*1.1)

check_literal:lit=',' idx=22 'ABC%*1.1)
'
check_literal:After drop space:',' idx=22 'ABC%*1.1)
'
  ',' != 'A'
check_literal: ret0
check_operator:ret0
check_function: 'ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=19 '   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=22 'ABC%*1.1)
'
  '%' != 'A'
check_literal: ret0
check_literal:lit=' "' idx=19 '   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=22 'ABC%*1.1)
'
  '"' != 'A'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'ABC%*1.1)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'ABC%*1.1)
':
check_vname ret1 '%*1.1)
':
check_variable: '%*1.1)
'
check_variable: Ary test '*1.1)
'
check_literal:lit='(' idx=26 '*1.1)
'
check_literal:After drop space:'(' idx=26 '*1.1)
'
  '(' != '*'
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_eitem:ret1
scan_eitem:
check_operator:    ABC%*1.1)

check_literal:lit=',' idx=22 'ABC%*1.1)
'
check_literal:After drop space:',' idx=22 'ABC%*1.1)
'
  ',' != 'A'
check_literal: ret0
check_operator:ret0
check_function: 'ABC%*1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=19 '   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=22 'ABC%*1.1)
'
  '%' != 'A'
check_literal: ret0
check_literal:lit=' "' idx=19 '   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=22 'ABC%*1.1)
'
  '"' != 'A'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'ABC%*1.1)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'ABC%*1.1)
':
check_vname ret1 '%*1.1)
':
check_variable: '%*1.1)
'
check_variable: Ary test '*1.1)
'
check_literal:lit='(' idx=26 '*1.1)
'
check_literal:After drop space:'(' idx=26 '*1.1)
'
  '(' != '*'
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
scan_atom:
check_literal:lit=' %' idx=19 '   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'%' idx=22 'ABC%*1.1)
'
  '%' != 'A'
check_literal: ret0
check_literal:lit=' "' idx=19 '   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' idx=22 'ABC%*1.1)
'
  '"' != 'A'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'ABC%*1.1)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'ABC%*1.1)
':
check_vname ret1 '%*1.1)
':
check_variable: '%*1.1)
'
check_variable: Ary test '*1.1)
'
check_literal:lit='(' idx=26 '*1.1)
'
check_literal:After drop space:'(' idx=26 '*1.1)
'
  '(' != '*'
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
scan_variable:
scan_vname: '   ABC%*1.1)
'
scan_vname: ret1 'ABC'
scan_variable: '%*1.1)
' vname='ABC'
scan_variable: Ary test '*1.1)
'
check_literal:lit='(' idx=26 '*1.1)
'
check_literal:After drop space:'(' idx=26 '*1.1)
'
  '(' != '*'
check_literal: ret0
scan_variable:ret1 vname='ABC%' is str:0 int:1 flt:0 ary:0
VAR INFO: '              ABC%' gbl:0 ref:1 int:1 flt:0 str:0 ary:0 max_str:0 max_ary:0 num_ind:0
check_eitem: '*1.1)
'
check_operator: *1.1)

check_literal:lit=',' idx=26 '*1.1)
'
check_literal:After drop space:',' idx=26 '*1.1)
'
  ',' != '*'
check_literal: ret0
check_operator: ret1
check_eitem:ret1
scan_eitem:
check_operator: *1.1)

check_literal:lit=',' idx=26 '*1.1)
'
check_literal:After drop space:',' idx=26 '*1.1)
'
  ',' != '*'
check_literal: ret0
check_operator: ret1
scan_operator: '*1.1)
'
check_literal:lit=',' idx=26 '*1.1)
'
check_literal:After drop space:',' idx=26 '*1.1)
'
  ',' != '*'
check_literal: ret0
scan_operator: ret1 '1.1)
'
check_eitem: '1.1)
'
check_operator: 1.1)

check_literal:lit=',' idx=27 '1.1)
'
check_literal:After drop space:',' idx=27 '1.1)
'
  ',' != '1'
check_literal: ret0
check_operator:ret0
check_function: '1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=27 '1.1)
'
    dropping space
check_literal:After drop space:'%' idx=27 '1.1)
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=27 '1.1)
'
    dropping space
check_literal:After drop space:'"' idx=27 '1.1)
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret1
check_number: ret1
check_eitem:ret1
scan_eitem:
check_operator: 1.1)

check_literal:lit=',' idx=27 '1.1)
'
check_literal:After drop space:',' idx=27 '1.1)
'
  ',' != '1'
check_literal: ret0
check_operator:ret0
check_function: '1.1)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=27 '1.1)
'
    dropping space
check_literal:After drop space:'%' idx=27 '1.1)
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=27 '1.1)
'
    dropping space
check_literal:After drop space:'"' idx=27 '1.1)
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret1
check_number: ret1
scan_atom:
check_literal:lit=' %' idx=27 '1.1)
'
    dropping space
check_literal:After drop space:'%' idx=27 '1.1)
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=27 '1.1)
'
    dropping space
check_literal:After drop space:'"' idx=27 '1.1)
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret1
check_number: ret1
scan_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret1
scan_float:
isfloatdigit:
scan_float: ret0
check_eitem: ')
'
check_operator: )

check_literal:lit=',' idx=30 ')
'
check_literal:After drop space:',' idx=30 ')
'
  ',' != ')'
check_literal: ret0
check_operator:ret0
check_function: ')
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=30 ')
'
    dropping space
check_literal:After drop space:'%' idx=30 ')
'
  '%' != ')'
check_literal: ret0
check_literal:lit=' "' idx=30 ')
'
    dropping space
check_literal:After drop space:'"' idx=30 ')
'
  '"' != ')'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ')
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname ')
':
check_vname ret0 ')
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=30 ')
'
    dropping space
check_literal:After drop space:'(' idx=30 ')
'
  '(' != ')'
check_literal: ret0
check_sub_expr: ret0
check_eitem:ret0
scan_expression: ret1 ')
'
scan_literal:lit=' )' ')
'
scan_literal:After drop space:)

scan_literal:while loop:)

scan_sub_expr:ret1
check_eitem: '
'
check_operator: 

check_literal:lit=',' idx=32 ''
check_literal:After drop space:',' idx=32 ''
check_literal  ret0 Empty test string
check_operator:ret0
check_function: ''
check_function: ret0
check_atom:
check_literal:lit=' %' idx=31 '
'
    dropping space
check_literal:After drop space:'%' idx=32 ''
check_literal  ret0 Empty test string
check_literal:lit=' "' idx=31 '
'
    dropping space
check_literal:After drop space:'"' idx=32 ''
check_literal  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ''
check_integer:ret0
check_number: ret0
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=31 '
'
    dropping space
check_literal:After drop space:'(' idx=32 ''
check_literal  ret0 Empty test string
check_sub_expr: ret0
check_eitem:ret0
scan_expression: ret1 '
'
scan_assignment: ret1
check_literal:lit=':' idx=32 ''
check_literal:After drop space:':' idx=32 ''
check_literal  ret0 Empty test string
cline scanned OK
=======================cline==========================
==A% = 20
==
scan_cline:
check_line:
check_assignment:
check_variable:
check_vname 'A% = 20
':
check_vname ret1 '% = 20
':
check_variable: '% = 20
'
check_variable: Ary test ' = 20
'
check_literal:lit='(' idx=2 ' = 20
'
check_literal:After drop space:'(' idx=2 ' = 20
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_literal:lit=' =' idx=2 ' = 20
'
    dropping space
check_literal:After drop space:'=' idx=3 '= 20
'
check_literal:After while(): 20

check_literal:ret1 
check_expression: '20
'
check_eitem: '20
'
check_operator: 20

check_literal:lit=',' idx=5 '20
'
check_literal:After drop space:',' idx=5 '20
'
  ',' != '2'
check_literal: ret0
check_operator:ret0
check_function: '20
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=5 '20
'
    dropping space
check_literal:After drop space:'%' idx=5 '20
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=5 '20
'
    dropping space
check_literal:After drop space:'"' idx=5 '20
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '20
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: '
'
check_operator: 

check_literal:lit=',' idx=8 ''
check_literal:After drop space:',' idx=8 ''
check_literal  ret0 Empty test string
check_operator:ret0
check_function: ''
check_function: ret0
check_atom:
check_literal:lit=' %' idx=7 '
'
    dropping space
check_literal:After drop space:'%' idx=8 ''
check_literal  ret0 Empty test string
check_literal:lit=' "' idx=7 '
'
    dropping space
check_literal:After drop space:'"' idx=8 ''
check_literal  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ''
check_integer:ret0
check_number: ret0
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=7 '
'
    dropping space
check_literal:After drop space:'(' idx=8 ''
check_literal  ret0 Empty test string
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 '
'
check_assignment:ret1
check_line:ret1
scan_cline: Checked len=1, '
'
scan_line:
check_assignment:
check_variable:
check_vname 'A% = 20
':
check_vname ret1 '% = 20
':
check_variable: '% = 20
'
check_variable: Ary test ' = 20
'
check_literal:lit='(' idx=2 ' = 20
'
check_literal:After drop space:'(' idx=2 ' = 20
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_literal:lit=' =' idx=2 ' = 20
'
    dropping space
check_literal:After drop space:'=' idx=3 '= 20
'
check_literal:After while(): 20

check_literal:ret1 
check_expression: '20
'
check_eitem: '20
'
check_operator: 20

check_literal:lit=',' idx=5 '20
'
check_literal:After drop space:',' idx=5 '20
'
  ',' != '2'
check_literal: ret0
check_operator:ret0
check_function: '20
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=5 '20
'
    dropping space
check_literal:After drop space:'%' idx=5 '20
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=5 '20
'
    dropping space
check_literal:After drop space:'"' idx=5 '20
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '20
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: '
'
check_operator: 

check_literal:lit=',' idx=8 ''
check_literal:After drop space:',' idx=8 ''
check_literal  ret0 Empty test string
check_operator:ret0
check_function: ''
check_function: ret0
check_atom:
check_literal:lit=' %' idx=7 '
'
    dropping space
check_literal:After drop space:'%' idx=8 ''
check_literal  ret0 Empty test string
check_literal:lit=' "' idx=7 '
'
    dropping space
check_literal:After drop space:'"' idx=8 ''
check_literal  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ''
check_integer:ret0
check_number: ret0
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=7 '
'
    dropping space
check_literal:After drop space:'(' idx=8 ''
check_literal  ret0 Empty test string
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 '
'
check_assignment:ret1
scan_assignment:
scan_variable:
scan_vname: 'A% = 20
'
scan_vname: ret1 'A'
scan_variable: '% = 20
' vname='A'
scan_variable: Ary test ' = 20
'
check_literal:lit='(' idx=2 ' = 20
'
check_literal:After drop space:'(' idx=2 ' = 20
'
  '(' != ' '
check_literal: ret0
scan_variable:ret1 vname='A%' is str:0 int:1 flt:0 ary:0
VAR INFO: '                A%' gbl:0 ref:1 int:1 flt:0 str:0 ary:0 max_str:0 max_ary:0 num_ind:0
scan_literal:lit=' =' ' = 20
'
scan_literal:After drop space:= 20

scan_literal:while loop:= 20

scan_expression: ' 20
'
check_eitem: '20
'
check_operator: 20

check_literal:lit=',' idx=5 '20
'
check_literal:After drop space:',' idx=5 '20
'
  ',' != '2'
check_literal: ret0
check_operator:ret0
check_function: '20
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=5 '20
'
    dropping space
check_literal:After drop space:'%' idx=5 '20
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=5 '20
'
    dropping space
check_literal:After drop space:'"' idx=5 '20
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '20
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
scan_eitem:
check_operator: 20

check_literal:lit=',' idx=5 '20
'
check_literal:After drop space:',' idx=5 '20
'
  ',' != '2'
check_literal: ret0
check_operator:ret0
check_function: '20
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=5 '20
'
    dropping space
check_literal:After drop space:'%' idx=5 '20
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=5 '20
'
    dropping space
check_literal:After drop space:'"' idx=5 '20
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '20
'
check_integer:ret1
check_number: ret1
scan_atom:
check_literal:lit=' %' idx=5 '20
'
    dropping space
check_literal:After drop space:'%' idx=5 '20
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=5 '20
'
    dropping space
check_literal:After drop space:'"' idx=5 '20
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '20
'
check_integer:ret1
check_number: ret1
scan_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '20
'
check_integer:ret1
scan_integer:
scan_integer:ret0
check_eitem: ''
check_operator: 
check_literal:lit=',' idx=8 ''
check_literal:After drop space:',' idx=8 ''
check_literal  ret0 Empty test string
check_operator:ret0
check_function: ''
check_function: ret0
check_atom:
check_literal:lit=' %' idx=8 ''
    dropping space
check_literal:After drop space:'%' idx=8 ''
check_literal  ret0 Empty test string
check_literal:lit=' "' idx=8 ''
    dropping space
check_literal:After drop space:'"' idx=8 ''
check_literal  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ''
check_integer:ret0
check_number: ret0
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=8 ''
    dropping space
check_literal:After drop space:'(' idx=8 ''
check_literal  ret0 Empty test string
check_sub_expr: ret0
check_eitem:ret0
scan_expression: ret1 ''
scan_assignment: ret1
check_literal:lit=':' idx=8 ''
check_literal:After drop space:':' idx=8 ''
check_literal  ret0 Empty test string
cline scanned OK
=======================cline==========================
==PRINT "abc"
==
scan_cline:
check_line:
check_assignment:
check_variable:
check_vname 'PRINT "abc"
':
check_vname ret1 ' "abc"
':
check_variable: ' "abc"
'
check_variable: Ary test ' "abc"
'
check_literal:lit='(' idx=5 ' "abc"
'
check_literal:After drop space:'(' idx=5 ' "abc"
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variable:ret1 
check_literal:lit=' =' idx=5 ' "abc"
'
    dropping space
check_literal:After drop space:'=' idx=6 '"abc"
'
  '=' != '"'
check_literal: ret0
check_assignment:ret0
check_proc_call:
check_textlabel: 'PRINT "abc"
'
check_textlabel:ret0
check_proc_call:ret0
check_command:
check_command: ret1 found=> 'PRINT'
check_line:ret1
scan_cline: Checked len=7, ' "abc"
'
scan_line:
check_assignment:
check_variable:
check_vname 'PRINT "abc"
':
check_vname ret1 ' "abc"
':
check_variable: ' "abc"
'
check_variable: Ary test ' "abc"
'
check_literal:lit='(' idx=5 ' "abc"
'
check_literal:After drop space:'(' idx=5 ' "abc"
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variable:ret1 
check_literal:lit=' =' idx=5 ' "abc"
'
    dropping space
check_literal:After drop space:'=' idx=6 '"abc"
'
  '=' != '"'
check_literal: ret0
check_assignment:ret0
check_proc_call:
check_textlabel: 'PRINT "abc"
'
check_textlabel:ret0
check_proc_call:ret0
check_command:
check_command: ret1 found=> 'PRINT'
scan_line:check_command: 
scan_command:
scan_expression: ' "abc"
'
check_eitem: '"abc"
'
check_operator: "abc"

check_literal:lit=',' idx=6 '"abc"
'
check_literal:After drop space:',' idx=6 '"abc"
'
  ',' != '"'
check_literal: ret0
check_operator:ret0
check_function: '"abc"
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=6 '"abc"
'
    dropping space
check_literal:After drop space:'%' idx=6 '"abc"
'
  '%' != '"'
check_literal: ret0
check_literal:lit=' "' idx=6 '"abc"
'
    dropping space
check_literal:After drop space:'"' idx=6 '"abc"
'
check_literal:After while():abc"

check_literal:ret1 
check_eitem:ret1
scan_eitem:
check_operator: "abc"

check_literal:lit=',' idx=6 '"abc"
'
check_literal:After drop space:',' idx=6 '"abc"
'
  ',' != '"'
check_literal: ret0
check_operator:ret0
check_function: '"abc"
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=6 '"abc"
'
    dropping space
check_literal:After drop space:'%' idx=6 '"abc"
'
  '%' != '"'
check_literal: ret0
check_literal:lit=' "' idx=6 '"abc"
'
    dropping space
check_literal:After drop space:'"' idx=6 '"abc"
'
check_literal:After while():abc"

check_literal:ret1 
scan_atom:
check_literal:lit=' %' idx=6 '"abc"
'
    dropping space
check_literal:After drop space:'%' idx=6 '"abc"
'
  '%' != '"'
check_literal: ret0
check_literal:lit=' "' idx=6 '"abc"
'
    dropping space
check_literal:After drop space:'"' idx=6 '"abc"
'
check_literal:After while():abc"

check_literal:ret1 
scan_string:
scan_literal:lit=' "' '"abc"
'
scan_literal:After drop space:"abc"

scan_literal:while loop:"abc"

  (in if) 'abc"
'
  (in wh) 'abc"
'
  (in wh) 'bc"
'
  (in wh) 'bc"
'
  (in wh) 'c"
'
  (in wh) 'c"
'
  (in wh) '"
'
scan_string: ret1
check_eitem: '
'
check_operator: 

check_literal:lit=',' idx=12 ''
check_literal:After drop space:',' idx=12 ''
check_literal  ret0 Empty test string
check_operator:ret0
check_function: ''
check_function: ret0
check_atom:
check_literal:lit=' %' idx=11 '
'
    dropping space
check_literal:After drop space:'%' idx=12 ''
check_literal  ret0 Empty test string
check_literal:lit=' "' idx=11 '
'
    dropping space
check_literal:After drop space:'"' idx=12 ''
check_literal  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ''
check_integer:ret0
check_number: ret0
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=11 '
'
    dropping space
check_literal:After drop space:'(' idx=12 ''
check_literal  ret0 Empty test string
check_sub_expr: ret0
check_eitem:ret0
scan_expression: ret1 '
'
scan_command: ret1 =>'PRINT'
check_literal:lit=':' idx=12 ''
check_literal:After drop space:':' idx=12 ''
check_literal  ret0 Empty test string
cline scanned OK
=======================cline==========================
==PRINT "asdfgh"
==
scan_cline:
check_line:
check_assignment:
check_variable:
check_vname 'PRINT "asdfgh"
':
check_vname ret1 ' "asdfgh"
':
check_variable: ' "asdfgh"
'
check_variable: Ary test ' "asdfgh"
'
check_literal:lit='(' idx=5 ' "asdfgh"
'
check_literal:After drop space:'(' idx=5 ' "asdfgh"
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variable:ret1 
check_literal:lit=' =' idx=5 ' "asdfgh"
'
    dropping space
check_literal:After drop space:'=' idx=6 '"asdfgh"
'
  '=' != '"'
check_literal: ret0
check_assignment:ret0
check_proc_call:
check_textlabel: 'PRINT "asdfgh"
'
check_textlabel:ret0
check_proc_call:ret0
check_command:
check_command: ret1 found=> 'PRINT'
check_line:ret1
scan_cline: Checked len=10, ' "asdfgh"
'
scan_line:
check_assignment:
check_variable:
check_vname 'PRINT "asdfgh"
':
check_vname ret1 ' "asdfgh"
':
check_variable: ' "asdfgh"
'
check_variable: Ary test ' "asdfgh"
'
check_literal:lit='(' idx=5 ' "asdfgh"
'
check_literal:After drop space:'(' idx=5 ' "asdfgh"
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variable:ret1 
check_literal:lit=' =' idx=5 ' "asdfgh"
'
    dropping space
check_literal:After drop space:'=' idx=6 '"asdfgh"
'
  '=' != '"'
check_literal: ret0
check_assignment:ret0
check_proc_call:
check_textlabel: 'PRINT "asdfgh"
'
check_textlabel:ret0
check_proc_call:ret0
check_command:
check_command: ret1 found=> 'PRINT'
scan_line:check_command: 
scan_command:
scan_expression: ' "asdfgh"
'
check_eitem: '"asdfgh"
'
check_operator: "asdfgh"

check_literal:lit=',' idx=6 '"asdfgh"
'
check_literal:After drop space:',' idx=6 '"asdfgh"
'
  ',' != '"'
check_literal: ret0
check_operator:ret0
check_function: '"asdfgh"
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=6 '"asdfgh"
'
    dropping space
check_literal:After drop space:'%' idx=6 '"asdfgh"
'
  '%' != '"'
check_literal: ret0
check_literal:lit=' "' idx=6 '"asdfgh"
'
    dropping space
check_literal:After drop space:'"' idx=6 '"asdfgh"
'
check_literal:After while():asdfgh"

check_literal:ret1 
check_eitem:ret1
scan_eitem:
check_operator: "asdfgh"

check_literal:lit=',' idx=6 '"asdfgh"
'
check_literal:After drop space:',' idx=6 '"asdfgh"
'
  ',' != '"'
check_literal: ret0
check_operator:ret0
check_function: '"asdfgh"
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=6 '"asdfgh"
'
    dropping space
check_literal:After drop space:'%' idx=6 '"asdfgh"
'
  '%' != '"'
check_literal: ret0
check_literal:lit=' "' idx=6 '"asdfgh"
'
    dropping space
check_literal:After drop space:'"' idx=6 '"asdfgh"
'
check_literal:After while():asdfgh"

check_literal:ret1 
scan_atom:
check_literal:lit=' %' idx=6 '"asdfgh"
'
    dropping space
check_literal:After drop space:'%' idx=6 '"asdfgh"
'
  '%' != '"'
check_literal: ret0
check_literal:lit=' "' idx=6 '"asdfgh"
'
    dropping space
check_literal:After drop space:'"' idx=6 '"asdfgh"
'
check_literal:After while():asdfgh"

check_literal:ret1 
scan_string:
scan_literal:lit=' "' '"asdfgh"
'
scan_literal:After drop space:"asdfgh"

scan_literal:while loop:"asdfgh"

  (in if) 'asdfgh"
'
  (in wh) 'asdfgh"
'
  (in wh) 'sdfgh"
'
  (in wh) 'sdfgh"
'
  (in wh) 'dfgh"
'
  (in wh) 'dfgh"
'
  (in wh) 'fgh"
'
  (in wh) 'fgh"
'
  (in wh) 'gh"
'
  (in wh) 'gh"
'
  (in wh) 'h"
'
  (in wh) 'h"
'
  (in wh) '"
'
scan_string: ret1
check_eitem: '
'
check_operator: 

check_literal:lit=',' idx=15 ''
check_literal:After drop space:',' idx=15 ''
check_literal  ret0 Empty test string
check_operator:ret0
check_function: ''
check_function: ret0
check_atom:
check_literal:lit=' %' idx=14 '
'
    dropping space
check_literal:After drop space:'%' idx=15 ''
check_literal  ret0 Empty test string
check_literal:lit=' "' idx=14 '
'
    dropping space
check_literal:After drop space:'"' idx=15 ''
check_literal  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ''
check_integer:ret0
check_number: ret0
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=14 '
'
    dropping space
check_literal:After drop space:'(' idx=15 ''
check_literal  ret0 Empty test string
check_sub_expr: ret0
check_eitem:ret0
scan_expression: ret1 '
'
scan_command: ret1 =>'PRINT'
check_literal:lit=':' idx=15 ''
check_literal:After drop space:':' idx=15 ''
check_literal  ret0 Empty test string
cline scanned OK
=======================cline==========================
==PRINT   "    abc    "
==
scan_cline:
check_line:
check_assignment:
check_variable:
check_vname 'PRINT   "    abc    "
':
check_vname ret1 '   "    abc    "
':
check_variable: '   "    abc    "
'
check_variable: Ary test '   "    abc    "
'
check_literal:lit='(' idx=5 '   "    abc    "
'
check_literal:After drop space:'(' idx=5 '   "    abc    "
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variable:ret1 
check_literal:lit=' =' idx=5 '   "    abc    "
'
    dropping space
check_literal:After drop space:'=' idx=8 '"    abc    "
'
  '=' != '"'
check_literal: ret0
check_assignment:ret0
check_proc_call:
check_textlabel: 'PRINT   "    abc    "
'
check_textlabel:ret0
check_proc_call:ret0
check_command:
check_command: ret1 found=> 'PRINT'
check_line:ret1
scan_cline: Checked len=17, '   "    abc    "
'
scan_line:
check_assignment:
check_variable:
check_vname 'PRINT   "    abc    "
':
check_vname ret1 '   "    abc    "
':
check_variable: '   "    abc    "
'
check_variable: Ary test '   "    abc    "
'
check_literal:lit='(' idx=5 '   "    abc    "
'
check_literal:After drop space:'(' idx=5 '   "    abc    "
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variable:ret1 
check_literal:lit=' =' idx=5 '   "    abc    "
'
    dropping space
check_literal:After drop space:'=' idx=8 '"    abc    "
'
  '=' != '"'
check_literal: ret0
check_assignment:ret0
check_proc_call:
check_textlabel: 'PRINT   "    abc    "
'
check_textlabel:ret0
check_proc_call:ret0
check_command:
check_command: ret1 found=> 'PRINT'
scan_line:check_command: 
scan_command:
scan_expression: '   "    abc    "
'
check_eitem: '"    abc    "
'
check_operator: "    abc    "

check_literal:lit=',' idx=8 '"    abc    "
'
check_literal:After drop space:',' idx=8 '"    abc    "
'
  ',' != '"'
check_literal: ret0
check_operator:ret0
check_function: '"    abc    "
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=8 '"    abc    "
'
    dropping space
check_literal:After drop space:'%' idx=8 '"    abc    "
'
  '%' != '"'
check_literal: ret0
check_literal:lit=' "' idx=8 '"    abc    "
'
    dropping space
check_literal:After drop space:'"' idx=8 '"    abc    "
'
check_literal:After while():    abc    "

check_literal:ret1 
check_eitem:ret1
scan_eitem:
check_operator: "    abc    "

check_literal:lit=',' idx=8 '"    abc    "
'
check_literal:After drop space:',' idx=8 '"    abc    "
'
  ',' != '"'
check_literal: ret0
check_operator:ret0
check_function: '"    abc    "
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=8 '"    abc    "
'
    dropping space
check_literal:After drop space:'%' idx=8 '"    abc    "
'
  '%' != '"'
check_literal: ret0
check_literal:lit=' "' idx=8 '"    abc    "
'
    dropping space
check_literal:After drop space:'"' idx=8 '"    abc    "
'
check_literal:After while():    abc    "

check_literal:ret1 
scan_atom:
check_literal:lit=' %' idx=8 '"    abc    "
'
    dropping space
check_literal:After drop space:'%' idx=8 '"    abc    "
'
  '%' != '"'
check_literal: ret0
check_literal:lit=' "' idx=8 '"    abc    "
'
    dropping space
check_literal:After drop space:'"' idx=8 '"    abc    "
'
check_literal:After while():    abc    "

check_literal:ret1 
scan_string:
scan_literal:lit=' "' '"    abc    "
'
scan_literal:After drop space:"    abc    "

scan_literal:while loop:"    abc    "

  (in if) '    abc    "
'
  (in wh) '    abc    "
'
  (in wh) '   abc    "
'
  (in wh) '   abc    "
'
  (in wh) '  abc    "
'
  (in wh) '  abc    "
'
  (in wh) ' abc    "
'
  (in wh) ' abc    "
'
  (in wh) 'abc    "
'
  (in wh) 'abc    "
'
  (in wh) 'bc    "
'
  (in wh) 'bc    "
'
  (in wh) 'c    "
'
  (in wh) 'c    "
'
  (in wh) '    "
'
  (in wh) '    "
'
  (in wh) '   "
'
  (in wh) '   "
'
  (in wh) '  "
'
  (in wh) '  "
'
  (in wh) ' "
'
  (in wh) ' "
'
  (in wh) '"
'
scan_string: ret1
check_eitem: '
'
check_operator: 

check_literal:lit=',' idx=22 ''
check_literal:After drop space:',' idx=22 ''
check_literal  ret0 Empty test string
check_operator:ret0
check_function: ''
check_function: ret0
check_atom:
check_literal:lit=' %' idx=21 '
'
    dropping space
check_literal:After drop space:'%' idx=22 ''
check_literal  ret0 Empty test string
check_literal:lit=' "' idx=21 '
'
    dropping space
check_literal:After drop space:'"' idx=22 ''
check_literal  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ''
check_integer:ret0
check_number: ret0
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=21 '
'
    dropping space
check_literal:After drop space:'(' idx=22 ''
check_literal  ret0 Empty test string
check_sub_expr: ret0
check_eitem:ret0
scan_expression: ret1 '
'
scan_command: ret1 =>'PRINT'
check_literal:lit=':' idx=22 ''
check_literal:After drop space:':' idx=22 ''
check_literal  ret0 Empty test string
cline scanned OK
=======================cline==========================
==PRINT A%
==
scan_cline:
check_line:
check_assignment:
check_variable:
check_vname 'PRINT A%
':
check_vname ret1 ' A%
':
check_variable: ' A%
'
check_variable: Ary test ' A%
'
check_literal:lit='(' idx=5 ' A%
'
check_literal:After drop space:'(' idx=5 ' A%
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variable:ret1 
check_literal:lit=' =' idx=5 ' A%
'
    dropping space
check_literal:After drop space:'=' idx=6 'A%
'
  '=' != 'A'
check_literal: ret0
check_assignment:ret0
check_proc_call:
check_textlabel: 'PRINT A%
'
check_textlabel:ret0
check_proc_call:ret0
check_command:
check_command: ret1 found=> 'PRINT'
check_line:ret1
scan_cline: Checked len=4, ' A%
'
scan_line:
check_assignment:
check_variable:
check_vname 'PRINT A%
':
check_vname ret1 ' A%
':
check_variable: ' A%
'
check_variable: Ary test ' A%
'
check_literal:lit='(' idx=5 ' A%
'
check_literal:After drop space:'(' idx=5 ' A%
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variable:ret1 
check_literal:lit=' =' idx=5 ' A%
'
    dropping space
check_literal:After drop space:'=' idx=6 'A%
'
  '=' != 'A'
check_literal: ret0
check_assignment:ret0
check_proc_call:
check_textlabel: 'PRINT A%
'
check_textlabel:ret0
check_proc_call:ret0
check_command:
check_command: ret1 found=> 'PRINT'
scan_line:check_command: 
scan_command:
scan_expression: ' A%
'
check_eitem: 'A%
'
check_operator: A%

check_literal:lit=',' idx=6 'A%
'
check_literal:After drop space:',' idx=6 'A%
'
  ',' != 'A'
check_literal: ret0
check_operator:ret0
check_function: 'A%
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=6 'A%
'
    dropping space
check_literal:After drop space:'%' idx=6 'A%
'
  '%' != 'A'
check_literal: ret0
check_literal:lit=' "' idx=6 'A%
'
    dropping space
check_literal:After drop space:'"' idx=6 'A%
'
  '"' != 'A'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'A%
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'A%
':
check_vname ret1 '%
':
check_variable: '%
'
check_variable: Ary test '
'
check_literal:lit='(' idx=8 '
'
check_literal:After drop space:'(' idx=8 '
'
  '(' != '
'
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_eitem:ret1
scan_eitem:
check_operator: A%

check_literal:lit=',' idx=6 'A%
'
check_literal:After drop space:',' idx=6 'A%
'
  ',' != 'A'
check_literal: ret0
check_operator:ret0
check_function: 'A%
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=6 'A%
'
    dropping space
check_literal:After drop space:'%' idx=6 'A%
'
  '%' != 'A'
check_literal: ret0
check_literal:lit=' "' idx=6 'A%
'
    dropping space
check_literal:After drop space:'"' idx=6 'A%
'
  '"' != 'A'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'A%
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'A%
':
check_vname ret1 '%
':
check_variable: '%
'
check_variable: Ary test '
'
check_literal:lit='(' idx=8 '
'
check_literal:After drop space:'(' idx=8 '
'
  '(' != '
'
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
scan_atom:
check_literal:lit=' %' idx=6 'A%
'
    dropping space
check_literal:After drop space:'%' idx=6 'A%
'
  '%' != 'A'
check_literal: ret0
check_literal:lit=' "' idx=6 'A%
'
    dropping space
check_literal:After drop space:'"' idx=6 'A%
'
  '"' != 'A'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'A%
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'A%
':
check_vname ret1 '%
':
check_variable: '%
'
check_variable: Ary test '
'
check_literal:lit='(' idx=8 '
'
check_literal:After drop space:'(' idx=8 '
'
  '(' != '
'
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
scan_variable:
scan_vname: 'A%
'
scan_vname: ret1 'A'
scan_variable: '%
' vname='A'
scan_variable: Ary test '
'
check_literal:lit='(' idx=8 '
'
check_literal:After drop space:'(' idx=8 '
'
  '(' != '
'
check_literal: ret0
scan_variable:ret1 vname='A%' is str:0 int:1 flt:0 ary:0
VAR INFO: '                A%' gbl:0 ref:1 int:1 flt:0 str:0 ary:0 max_str:0 max_ary:0 num_ind:0
check_eitem: '
'
check_operator: 

check_literal:lit=',' idx=9 ''
check_literal:After drop space:',' idx=9 ''
check_literal  ret0 Empty test string
check_operator:ret0
check_function: ''
check_function: ret0
check_atom:
check_literal:lit=' %' idx=8 '
'
    dropping space
check_literal:After drop space:'%' idx=9 ''
check_literal  ret0 Empty test string
check_literal:lit=' "' idx=8 '
'
    dropping space
check_literal:After drop space:'"' idx=9 ''
check_literal  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ''
check_integer:ret0
check_number: ret0
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=8 '
'
    dropping space
check_literal:After drop space:'(' idx=9 ''
check_literal  ret0 Empty test string
check_sub_expr: ret0
check_eitem:ret0
scan_expression: ret1 '
'
scan_command: ret1 =>'PRINT'
check_literal:lit=':' idx=9 ''
check_literal:After drop space:':' idx=9 ''
check_literal  ret0 Empty test string
cline scanned OK
=======================cline==========================
==PRINT B
==
scan_cline:
check_line:
check_assignment:
check_variable:
check_vname 'PRINT B
':
check_vname ret1 ' B
':
check_variable: ' B
'
check_variable: Ary test ' B
'
check_literal:lit='(' idx=5 ' B
'
check_literal:After drop space:'(' idx=5 ' B
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variable:ret1 
check_literal:lit=' =' idx=5 ' B
'
    dropping space
check_literal:After drop space:'=' idx=6 'B
'
  '=' != 'B'
check_literal: ret0
check_assignment:ret0
check_proc_call:
check_textlabel: 'PRINT B
'
check_textlabel:ret0
check_proc_call:ret0
check_command:
check_command: ret1 found=> 'PRINT'
check_line:ret1
scan_cline: Checked len=3, ' B
'
scan_line:
check_assignment:
check_variable:
check_vname 'PRINT B
':
check_vname ret1 ' B
':
check_variable: ' B
'
check_variable: Ary test ' B
'
check_literal:lit='(' idx=5 ' B
'
check_literal:After drop space:'(' idx=5 ' B
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variable:ret1 
check_literal:lit=' =' idx=5 ' B
'
    dropping space
check_literal:After drop space:'=' idx=6 'B
'
  '=' != 'B'
check_literal: ret0
check_assignment:ret0
check_proc_call:
check_textlabel: 'PRINT B
'
check_textlabel:ret0
check_proc_call:ret0
check_command:
check_command: ret1 found=> 'PRINT'
scan_line:check_command: 
scan_command:
scan_expression: ' B
'
check_eitem: 'B
'
check_operator: B

check_literal:lit=',' idx=6 'B
'
check_literal:After drop space:',' idx=6 'B
'
  ',' != 'B'
check_literal: ret0
check_operator:ret0
check_function: 'B
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=6 'B
'
    dropping space
check_literal:After drop space:'%' idx=6 'B
'
  '%' != 'B'
check_literal: ret0
check_literal:lit=' "' idx=6 'B
'
    dropping space
check_literal:After drop space:'"' idx=6 'B
'
  '"' != 'B'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'B
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'B
':
check_vname ret1 '
':
check_variable: '
'
check_variable: Ary test '
'
check_literal:lit='(' idx=7 '
'
check_literal:After drop space:'(' idx=7 '
'
  '(' != '
'
check_literal: ret0
check_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variable:ret1 
check_eitem:ret1
scan_eitem:
check_operator: B

check_literal:lit=',' idx=6 'B
'
check_literal:After drop space:',' idx=6 'B
'
  ',' != 'B'
check_literal: ret0
check_operator:ret0
check_function: 'B
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=6 'B
'
    dropping space
check_literal:After drop space:'%' idx=6 'B
'
  '%' != 'B'
check_literal: ret0
check_literal:lit=' "' idx=6 'B
'
    dropping space
check_literal:After drop space:'"' idx=6 'B
'
  '"' != 'B'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'B
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'B
':
check_vname ret1 '
':
check_variable: '
'
check_variable: Ary test '
'
check_literal:lit='(' idx=7 '
'
check_literal:After drop space:'(' idx=7 '
'
  '(' != '
'
check_literal: ret0
check_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variable:ret1 
scan_atom:
check_literal:lit=' %' idx=6 'B
'
    dropping space
check_literal:After drop space:'%' idx=6 'B
'
  '%' != 'B'
check_literal: ret0
check_literal:lit=' "' idx=6 'B
'
    dropping space
check_literal:After drop space:'"' idx=6 'B
'
  '"' != 'B'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'B
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'B
':
check_vname ret1 '
':
check_variable: '
'
check_variable: Ary test '
'
check_literal:lit='(' idx=7 '
'
check_literal:After drop space:'(' idx=7 '
'
  '(' != '
'
check_literal: ret0
check_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variable:ret1 
scan_variable:
scan_vname: 'B
'
scan_vname: ret1 'B'
scan_variable: '
' vname='B'
scan_variable: Ary test '
'
check_literal:lit='(' idx=7 '
'
check_literal:After drop space:'(' idx=7 '
'
  '(' != '
'
check_literal: ret0
scan_variable:ret1 vname='B' is str:0 int:0 flt:1 ary:0
VAR INFO: '                 B' gbl:0 ref:1 int:0 flt:1 str:0 ary:0 max_str:0 max_ary:0 num_ind:0
check_eitem: '
'
check_operator: 

check_literal:lit=',' idx=8 ''
check_literal:After drop space:',' idx=8 ''
check_literal  ret0 Empty test string
check_operator:ret0
check_function: ''
check_function: ret0
check_atom:
check_literal:lit=' %' idx=7 '
'
    dropping space
check_literal:After drop space:'%' idx=8 ''
check_literal  ret0 Empty test string
check_literal:lit=' "' idx=7 '
'
    dropping space
check_literal:After drop space:'"' idx=8 ''
check_literal  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ''
check_integer:ret0
check_number: ret0
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=7 '
'
    dropping space
check_literal:After drop space:'(' idx=8 ''
check_literal  ret0 Empty test string
check_sub_expr: ret0
check_eitem:ret0
scan_expression: ret1 '
'
scan_command: ret1 =>'PRINT'
check_literal:lit=':' idx=8 ''
check_literal:After drop space:':' idx=8 ''
check_literal  ret0 Empty test string
cline scanned OK
=======================cline==========================
==PRINT ABC
==
scan_cline:
check_line:
check_assignment:
check_variable:
check_vname 'PRINT ABC
':
check_vname ret1 ' ABC
':
check_variable: ' ABC
'
check_variable: Ary test ' ABC
'
check_literal:lit='(' idx=5 ' ABC
'
check_literal:After drop space:'(' idx=5 ' ABC
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variable:ret1 
check_literal:lit=' =' idx=5 ' ABC
'
    dropping space
check_literal:After drop space:'=' idx=6 'ABC
'
  '=' != 'A'
check_literal: ret0
check_assignment:ret0
check_proc_call:
check_textlabel: 'PRINT ABC
'
check_textlabel:ret0
check_proc_call:ret0
check_command:
check_command: ret1 found=> 'PRINT'
check_line:ret1
scan_cline: Checked len=5, ' ABC
'
scan_line:
check_assignment:
check_variable:
check_vname 'PRINT ABC
':
check_vname ret1 ' ABC
':
check_variable: ' ABC
'
check_variable: Ary test ' ABC
'
check_literal:lit='(' idx=5 ' ABC
'
check_literal:After drop space:'(' idx=5 ' ABC
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variable:ret1 
check_literal:lit=' =' idx=5 ' ABC
'
    dropping space
check_literal:After drop space:'=' idx=6 'ABC
'
  '=' != 'A'
check_literal: ret0
check_assignment:ret0
check_proc_call:
check_textlabel: 'PRINT ABC
'
check_textlabel:ret0
check_proc_call:ret0
check_command:
check_command: ret1 found=> 'PRINT'
scan_line:check_command: 
scan_command:
scan_expression: ' ABC
'
check_eitem: 'ABC
'
check_operator: ABC

check_literal:lit=',' idx=6 'ABC
'
check_literal:After drop space:',' idx=6 'ABC
'
  ',' != 'A'
check_literal: ret0
check_operator:ret0
check_function: 'ABC
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=6 'ABC
'
    dropping space
check_literal:After drop space:'%' idx=6 'ABC
'
  '%' != 'A'
check_literal: ret0
check_literal:lit=' "' idx=6 'ABC
'
    dropping space
check_literal:After drop space:'"' idx=6 'ABC
'
  '"' != 'A'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'ABC
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'ABC
':
check_vname ret1 '
':
check_variable: '
'
check_variable: Ary test '
'
check_literal:lit='(' idx=9 '
'
check_literal:After drop space:'(' idx=9 '
'
  '(' != '
'
check_literal: ret0
check_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variable:ret1 
check_eitem:ret1
scan_eitem:
check_operator: ABC

check_literal:lit=',' idx=6 'ABC
'
check_literal:After drop space:',' idx=6 'ABC
'
  ',' != 'A'
check_literal: ret0
check_operator:ret0
check_function: 'ABC
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=6 'ABC
'
    dropping space
check_literal:After drop space:'%' idx=6 'ABC
'
  '%' != 'A'
check_literal: ret0
check_literal:lit=' "' idx=6 'ABC
'
    dropping space
check_literal:After drop space:'"' idx=6 'ABC
'
  '"' != 'A'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'ABC
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'ABC
':
check_vname ret1 '
':
check_variable: '
'
check_variable: Ary test '
'
check_literal:lit='(' idx=9 '
'
check_literal:After drop space:'(' idx=9 '
'
  '(' != '
'
check_literal: ret0
check_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variable:ret1 
scan_atom:
check_literal:lit=' %' idx=6 'ABC
'
    dropping space
check_literal:After drop space:'%' idx=6 'ABC
'
  '%' != 'A'
check_literal: ret0
check_literal:lit=' "' idx=6 'ABC
'
    dropping space
check_literal:After drop space:'"' idx=6 'ABC
'
  '"' != 'A'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'ABC
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'ABC
':
check_vname ret1 '
':
check_variable: '
'
check_variable: Ary test '
'
check_literal:lit='(' idx=9 '
'
check_literal:After drop space:'(' idx=9 '
'
  '(' != '
'
check_literal: ret0
check_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variable:ret1 
scan_variable:
scan_vname: 'ABC
'
scan_vname: ret1 'ABC'
scan_variable: '
' vname='ABC'
scan_variable: Ary test '
'
check_literal:lit='(' idx=9 '
'
check_literal:After drop space:'(' idx=9 '
'
  '(' != '
'
check_literal: ret0
scan_variable:ret1 vname='ABC' is str:0 int:0 flt:1 ary:0
VAR INFO: '               ABC' gbl:0 ref:1 int:0 flt:1 str:0 ary:0 max_str:0 max_ary:0 num_ind:0
check_eitem: '
'
check_operator: 

check_literal:lit=',' idx=10 ''
check_literal:After drop space:',' idx=10 ''
check_literal  ret0 Empty test string
check_operator:ret0
check_function: ''
check_function: ret0
check_atom:
check_literal:lit=' %' idx=9 '
'
    dropping space
check_literal:After drop space:'%' idx=10 ''
check_literal  ret0 Empty test string
check_literal:lit=' "' idx=9 '
'
    dropping space
check_literal:After drop space:'"' idx=10 ''
check_literal  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ''
check_integer:ret0
check_number: ret0
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=9 '
'
    dropping space
check_literal:After drop space:'(' idx=10 ''
check_literal  ret0 Empty test string
check_sub_expr: ret0
check_eitem:ret0
scan_expression: ret1 '
'
scan_command: ret1 =>'PRINT'
check_literal:lit=':' idx=10 ''
check_literal:After drop space:':' idx=10 ''
check_literal  ret0 Empty test string
cline scanned OK
=======================cline==========================
==PRINT ABC%
==
scan_cline:
check_line:
check_assignment:
check_variable:
check_vname 'PRINT ABC%
':
check_vname ret1 ' ABC%
':
check_variable: ' ABC%
'
check_variable: Ary test ' ABC%
'
check_literal:lit='(' idx=5 ' ABC%
'
check_literal:After drop space:'(' idx=5 ' ABC%
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variable:ret1 
check_literal:lit=' =' idx=5 ' ABC%
'
    dropping space
check_literal:After drop space:'=' idx=6 'ABC%
'
  '=' != 'A'
check_literal: ret0
check_assignment:ret0
check_proc_call:
check_textlabel: 'PRINT ABC%
'
check_textlabel:ret0
check_proc_call:ret0
check_command:
check_command: ret1 found=> 'PRINT'
check_line:ret1
scan_cline: Checked len=6, ' ABC%
'
scan_line:
check_assignment:
check_variable:
check_vname 'PRINT ABC%
':
check_vname ret1 ' ABC%
':
check_variable: ' ABC%
'
check_variable: Ary test ' ABC%
'
check_literal:lit='(' idx=5 ' ABC%
'
check_literal:After drop space:'(' idx=5 ' ABC%
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variable:ret1 
check_literal:lit=' =' idx=5 ' ABC%
'
    dropping space
check_literal:After drop space:'=' idx=6 'ABC%
'
  '=' != 'A'
check_literal: ret0
check_assignment:ret0
check_proc_call:
check_textlabel: 'PRINT ABC%
'
check_textlabel:ret0
check_proc_call:ret0
check_command:
check_command: ret1 found=> 'PRINT'
scan_line:check_command: 
scan_command:
scan_expression: ' ABC%
'
check_eitem: 'ABC%
'
check_operator: ABC%

check_literal:lit=',' idx=6 'ABC%
'
check_literal:After drop space:',' idx=6 'ABC%
'
  ',' != 'A'
check_literal: ret0
check_operator:ret0
check_function: 'ABC%
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=6 'ABC%
'
    dropping space
check_literal:After drop space:'%' idx=6 'ABC%
'
  '%' != 'A'
check_literal: ret0
check_literal:lit=' "' idx=6 'ABC%
'
    dropping space
check_literal:After drop space:'"' idx=6 'ABC%
'
  '"' != 'A'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'ABC%
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'ABC%
':
check_vname ret1 '%
':
check_variable: '%
'
check_variable: Ary test '
'
check_literal:lit='(' idx=10 '
'
check_literal:After drop space:'(' idx=10 '
'
  '(' != '
'
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_eitem:ret1
scan_eitem:
check_operator: ABC%

check_literal:lit=',' idx=6 'ABC%
'
check_literal:After drop space:',' idx=6 'ABC%
'
  ',' != 'A'
check_literal: ret0
check_operator:ret0
check_function: 'ABC%
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=6 'ABC%
'
    dropping space
check_literal:After drop space:'%' idx=6 'ABC%
'
  '%' != 'A'
check_literal: ret0
check_literal:lit=' "' idx=6 'ABC%
'
    dropping space
check_literal:After drop space:'"' idx=6 'ABC%
'
  '"' != 'A'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'ABC%
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'ABC%
':
check_vname ret1 '%
':
check_variable: '%
'
check_variable: Ary test '
'
check_literal:lit='(' idx=10 '
'
check_literal:After drop space:'(' idx=10 '
'
  '(' != '
'
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
scan_atom:
check_literal:lit=' %' idx=6 'ABC%
'
    dropping space
check_literal:After drop space:'%' idx=6 'ABC%
'
  '%' != 'A'
check_literal: ret0
check_literal:lit=' "' idx=6 'ABC%
'
    dropping space
check_literal:After drop space:'"' idx=6 'ABC%
'
  '"' != 'A'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'ABC%
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'ABC%
':
check_vname ret1 '%
':
check_variable: '%
'
check_variable: Ary test '
'
check_literal:lit='(' idx=10 '
'
check_literal:After drop space:'(' idx=10 '
'
  '(' != '
'
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
scan_variable:
scan_vname: 'ABC%
'
scan_vname: ret1 'ABC'
scan_variable: '%
' vname='ABC'
scan_variable: Ary test '
'
check_literal:lit='(' idx=10 '
'
check_literal:After drop space:'(' idx=10 '
'
  '(' != '
'
check_literal: ret0
scan_variable:ret1 vname='ABC%' is str:0 int:1 flt:0 ary:0
VAR INFO: '              ABC%' gbl:0 ref:1 int:1 flt:0 str:0 ary:0 max_str:0 max_ary:0 num_ind:0
check_eitem: '
'
check_operator: 

check_literal:lit=',' idx=11 ''
check_literal:After drop space:',' idx=11 ''
check_literal  ret0 Empty test string
check_operator:ret0
check_function: ''
check_function: ret0
check_atom:
check_literal:lit=' %' idx=10 '
'
    dropping space
check_literal:After drop space:'%' idx=11 ''
check_literal  ret0 Empty test string
check_literal:lit=' "' idx=10 '
'
    dropping space
check_literal:After drop space:'"' idx=11 ''
check_literal  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ''
check_integer:ret0
check_number: ret0
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=10 '
'
    dropping space
check_literal:After drop space:'(' idx=11 ''
check_literal  ret0 Empty test string
check_sub_expr: ret0
check_eitem:ret0
scan_expression: ret1 '
'
scan_command: ret1 =>'PRINT'
check_literal:lit=':' idx=11 ''
check_literal:After drop space:':' idx=11 ''
check_literal  ret0 Empty test string
cline scanned OK
=======================cline==========================
==PRINT A$
==
scan_cline:
check_line:
check_assignment:
check_variable:
check_vname 'PRINT A$
':
check_vname ret1 ' A$
':
check_variable: ' A$
'
check_variable: Ary test ' A$
'
check_literal:lit='(' idx=5 ' A$
'
check_literal:After drop space:'(' idx=5 ' A$
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variable:ret1 
check_literal:lit=' =' idx=5 ' A$
'
    dropping space
check_literal:After drop space:'=' idx=6 'A$
'
  '=' != 'A'
check_literal: ret0
check_assignment:ret0
check_proc_call:
check_textlabel: 'PRINT A$
'
check_textlabel:ret0
check_proc_call:ret0
check_command:
check_command: ret1 found=> 'PRINT'
check_line:ret1
scan_cline: Checked len=4, ' A$
'
scan_line:
check_assignment:
check_variable:
check_vname 'PRINT A$
':
check_vname ret1 ' A$
':
check_variable: ' A$
'
check_variable: Ary test ' A$
'
check_literal:lit='(' idx=5 ' A$
'
check_literal:After drop space:'(' idx=5 ' A$
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variable:ret1 
check_literal:lit=' =' idx=5 ' A$
'
    dropping space
check_literal:After drop space:'=' idx=6 'A$
'
  '=' != 'A'
check_literal: ret0
check_assignment:ret0
check_proc_call:
check_textlabel: 'PRINT A$
'
check_textlabel:ret0
check_proc_call:ret0
check_command:
check_command: ret1 found=> 'PRINT'
scan_line:check_command: 
scan_command:
scan_expression: ' A$
'
check_eitem: 'A$
'
check_operator: A$

check_literal:lit=',' idx=6 'A$
'
check_literal:After drop space:',' idx=6 'A$
'
  ',' != 'A'
check_literal: ret0
check_operator:ret0
check_function: 'A$
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=6 'A$
'
    dropping space
check_literal:After drop space:'%' idx=6 'A$
'
  '%' != 'A'
check_literal: ret0
check_literal:lit=' "' idx=6 'A$
'
    dropping space
check_literal:After drop space:'"' idx=6 'A$
'
  '"' != 'A'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'A$
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'A$
':
check_vname ret1 '$
':
check_variable: '$
'
check_variable: Ary test '
'
check_literal:lit='(' idx=8 '
'
check_literal:After drop space:'(' idx=8 '
'
  '(' != '
'
check_literal: ret0
check_variable:ret1 vname='$' is str:1 int:0 flt:0 ary:0
check_variable:ret1 
check_eitem:ret1
scan_eitem:
check_operator: A$

check_literal:lit=',' idx=6 'A$
'
check_literal:After drop space:',' idx=6 'A$
'
  ',' != 'A'
check_literal: ret0
check_operator:ret0
check_function: 'A$
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=6 'A$
'
    dropping space
check_literal:After drop space:'%' idx=6 'A$
'
  '%' != 'A'
check_literal: ret0
check_literal:lit=' "' idx=6 'A$
'
    dropping space
check_literal:After drop space:'"' idx=6 'A$
'
  '"' != 'A'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'A$
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'A$
':
check_vname ret1 '$
':
check_variable: '$
'
check_variable: Ary test '
'
check_literal:lit='(' idx=8 '
'
check_literal:After drop space:'(' idx=8 '
'
  '(' != '
'
check_literal: ret0
check_variable:ret1 vname='$' is str:1 int:0 flt:0 ary:0
check_variable:ret1 
scan_atom:
check_literal:lit=' %' idx=6 'A$
'
    dropping space
check_literal:After drop space:'%' idx=6 'A$
'
  '%' != 'A'
check_literal: ret0
check_literal:lit=' "' idx=6 'A$
'
    dropping space
check_literal:After drop space:'"' idx=6 'A$
'
  '"' != 'A'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'A$
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'A$
':
check_vname ret1 '$
':
check_variable: '$
'
check_variable: Ary test '
'
check_literal:lit='(' idx=8 '
'
check_literal:After drop space:'(' idx=8 '
'
  '(' != '
'
check_literal: ret0
check_variable:ret1 vname='$' is str:1 int:0 flt:0 ary:0
check_variable:ret1 
scan_variable:
scan_vname: 'A$
'
scan_vname: ret1 'A'
scan_variable: '$
' vname='A'
scan_variable: Ary test '
'
check_literal:lit='(' idx=8 '
'
check_literal:After drop space:'(' idx=8 '
'
  '(' != '
'
check_literal: ret0
scan_variable:ret1 vname='A$' is str:1 int:0 flt:0 ary:0
VAR INFO: '                A$' gbl:0 ref:1 int:0 flt:0 str:1 ary:0 max_str:0 max_ary:0 num_ind:0
check_eitem: '
'
check_operator: 

check_literal:lit=',' idx=9 ''
check_literal:After drop space:',' idx=9 ''
check_literal  ret0 Empty test string
check_operator:ret0
check_function: ''
check_function: ret0
check_atom:
check_literal:lit=' %' idx=8 '
'
    dropping space
check_literal:After drop space:'%' idx=9 ''
check_literal  ret0 Empty test string
check_literal:lit=' "' idx=8 '
'
    dropping space
check_literal:After drop space:'"' idx=9 ''
check_literal  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ''
check_integer:ret0
check_number: ret0
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=8 '
'
    dropping space
check_literal:After drop space:'(' idx=9 ''
check_literal  ret0 Empty test string
check_sub_expr: ret0
check_eitem:ret0
scan_expression: ret1 '
'
scan_command: ret1 =>'PRINT'
check_literal:lit=':' idx=9 ''
check_literal:After drop space:':' idx=9 ''
check_literal  ret0 Empty test string
cline scanned OK
=======================cline==========================
==PRINT DEF$
==
scan_cline:
check_line:
check_assignment:
check_variable:
check_vname 'PRINT DEF$
':
check_vname ret1 ' DEF$
':
check_variable: ' DEF$
'
check_variable: Ary test ' DEF$
'
check_literal:lit='(' idx=5 ' DEF$
'
check_literal:After drop space:'(' idx=5 ' DEF$
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variable:ret1 
check_literal:lit=' =' idx=5 ' DEF$
'
    dropping space
check_literal:After drop space:'=' idx=6 'DEF$
'
  '=' != 'D'
check_literal: ret0
check_assignment:ret0
check_proc_call:
check_textlabel: 'PRINT DEF$
'
check_textlabel:ret0
check_proc_call:ret0
check_command:
check_command: ret1 found=> 'PRINT'
check_line:ret1
scan_cline: Checked len=6, ' DEF$
'
scan_line:
check_assignment:
check_variable:
check_vname 'PRINT DEF$
':
check_vname ret1 ' DEF$
':
check_variable: ' DEF$
'
check_variable: Ary test ' DEF$
'
check_literal:lit='(' idx=5 ' DEF$
'
check_literal:After drop space:'(' idx=5 ' DEF$
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variable:ret1 
check_literal:lit=' =' idx=5 ' DEF$
'
    dropping space
check_literal:After drop space:'=' idx=6 'DEF$
'
  '=' != 'D'
check_literal: ret0
check_assignment:ret0
check_proc_call:
check_textlabel: 'PRINT DEF$
'
check_textlabel:ret0
check_proc_call:ret0
check_command:
check_command: ret1 found=> 'PRINT'
scan_line:check_command: 
scan_command:
scan_expression: ' DEF$
'
check_eitem: 'DEF$
'
check_operator: DEF$

check_literal:lit=',' idx=6 'DEF$
'
check_literal:After drop space:',' idx=6 'DEF$
'
  ',' != 'D'
check_literal: ret0
check_operator:ret0
check_function: 'DEF$
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=6 'DEF$
'
    dropping space
check_literal:After drop space:'%' idx=6 'DEF$
'
  '%' != 'D'
check_literal: ret0
check_literal:lit=' "' idx=6 'DEF$
'
    dropping space
check_literal:After drop space:'"' idx=6 'DEF$
'
  '"' != 'D'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'DEF$
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'DEF$
':
check_vname ret1 '$
':
check_variable: '$
'
check_variable: Ary test '
'
check_literal:lit='(' idx=10 '
'
check_literal:After drop space:'(' idx=10 '
'
  '(' != '
'
check_literal: ret0
check_variable:ret1 vname='$' is str:1 int:0 flt:0 ary:0
check_variable:ret1 
check_eitem:ret1
scan_eitem:
check_operator: DEF$

check_literal:lit=',' idx=6 'DEF$
'
check_literal:After drop space:',' idx=6 'DEF$
'
  ',' != 'D'
check_literal: ret0
check_operator:ret0
check_function: 'DEF$
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=6 'DEF$
'
    dropping space
check_literal:After drop space:'%' idx=6 'DEF$
'
  '%' != 'D'
check_literal: ret0
check_literal:lit=' "' idx=6 'DEF$
'
    dropping space
check_literal:After drop space:'"' idx=6 'DEF$
'
  '"' != 'D'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'DEF$
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'DEF$
':
check_vname ret1 '$
':
check_variable: '$
'
check_variable: Ary test '
'
check_literal:lit='(' idx=10 '
'
check_literal:After drop space:'(' idx=10 '
'
  '(' != '
'
check_literal: ret0
check_variable:ret1 vname='$' is str:1 int:0 flt:0 ary:0
check_variable:ret1 
scan_atom:
check_literal:lit=' %' idx=6 'DEF$
'
    dropping space
check_literal:After drop space:'%' idx=6 'DEF$
'
  '%' != 'D'
check_literal: ret0
check_literal:lit=' "' idx=6 'DEF$
'
    dropping space
check_literal:After drop space:'"' idx=6 'DEF$
'
  '"' != 'D'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'DEF$
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'DEF$
':
check_vname ret1 '$
':
check_variable: '$
'
check_variable: Ary test '
'
check_literal:lit='(' idx=10 '
'
check_literal:After drop space:'(' idx=10 '
'
  '(' != '
'
check_literal: ret0
check_variable:ret1 vname='$' is str:1 int:0 flt:0 ary:0
check_variable:ret1 
scan_variable:
scan_vname: 'DEF$
'
scan_vname: ret1 'DEF'
scan_variable: '$
' vname='DEF'
scan_variable: Ary test '
'
check_literal:lit='(' idx=10 '
'
check_literal:After drop space:'(' idx=10 '
'
  '(' != '
'
check_literal: ret0
scan_variable:ret1 vname='DEF$' is str:1 int:0 flt:0 ary:0
VAR INFO: '              DEF$' gbl:0 ref:1 int:0 flt:0 str:1 ary:0 max_str:0 max_ary:0 num_ind:0
check_eitem: '
'
check_operator: 

check_literal:lit=',' idx=11 ''
check_literal:After drop space:',' idx=11 ''
check_literal  ret0 Empty test string
check_operator:ret0
check_function: ''
check_function: ret0
check_atom:
check_literal:lit=' %' idx=10 '
'
    dropping space
check_literal:After drop space:'%' idx=11 ''
check_literal  ret0 Empty test string
check_literal:lit=' "' idx=10 '
'
    dropping space
check_literal:After drop space:'"' idx=11 ''
check_literal  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ''
check_integer:ret0
check_number: ret0
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=10 '
'
    dropping space
check_literal:After drop space:'(' idx=11 ''
check_literal  ret0 Empty test string
check_sub_expr: ret0
check_eitem:ret0
scan_expression: ret1 '
'
scan_command: ret1 =>'PRINT'
check_literal:lit=':' idx=11 ''
check_literal:After drop space:':' idx=11 ''
check_literal  ret0 Empty test string
cline scanned OK
=======================cline==========================
==PRINT A(2)
==
scan_cline:
check_line:
check_assignment:
check_variable:
check_vname 'PRINT A(2)
':
check_vname ret1 ' A(2)
':
check_variable: ' A(2)
'
check_variable: Ary test ' A(2)
'
check_literal:lit='(' idx=5 ' A(2)
'
check_literal:After drop space:'(' idx=5 ' A(2)
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variable:ret1 
check_literal:lit=' =' idx=5 ' A(2)
'
    dropping space
check_literal:After drop space:'=' idx=6 'A(2)
'
  '=' != 'A'
check_literal: ret0
check_assignment:ret0
check_proc_call:
check_textlabel: 'PRINT A(2)
'
check_textlabel:ret0
check_proc_call:ret0
check_command:
check_command: ret1 found=> 'PRINT'
check_line:ret1
scan_cline: Checked len=6, ' A(2)
'
scan_line:
check_assignment:
check_variable:
check_vname 'PRINT A(2)
':
check_vname ret1 ' A(2)
':
check_variable: ' A(2)
'
check_variable: Ary test ' A(2)
'
check_literal:lit='(' idx=5 ' A(2)
'
check_literal:After drop space:'(' idx=5 ' A(2)
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variable:ret1 
check_literal:lit=' =' idx=5 ' A(2)
'
    dropping space
check_literal:After drop space:'=' idx=6 'A(2)
'
  '=' != 'A'
check_literal: ret0
check_assignment:ret0
check_proc_call:
check_textlabel: 'PRINT A(2)
'
check_textlabel:ret0
check_proc_call:ret0
check_command:
check_command: ret1 found=> 'PRINT'
scan_line:check_command: 
scan_command:
scan_expression: ' A(2)
'
check_eitem: 'A(2)
'
check_operator: A(2)

check_literal:lit=',' idx=6 'A(2)
'
check_literal:After drop space:',' idx=6 'A(2)
'
  ',' != 'A'
check_literal: ret0
check_operator:ret0
check_function: 'A(2)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=6 'A(2)
'
    dropping space
check_literal:After drop space:'%' idx=6 'A(2)
'
  '%' != 'A'
check_literal: ret0
check_literal:lit=' "' idx=6 'A(2)
'
    dropping space
check_literal:After drop space:'"' idx=6 'A(2)
'
  '"' != 'A'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'A(2)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'A(2)
':
check_vname ret1 '(2)
':
check_variable: '(2)
'
check_variable: Ary test '(2)
'
check_literal:lit='(' idx=7 '(2)
'
check_literal:After drop space:'(' idx=7 '(2)
'
check_literal:After while():2)

check_literal:ret1 
check_variable: is array
check_expression: '2)
'
check_eitem: '2)
'
check_operator: 2)

check_literal:lit=',' idx=8 '2)
'
check_literal:After drop space:',' idx=8 '2)
'
  ',' != '2'
check_literal: ret0
check_operator:ret0
check_function: '2)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=8 '2)
'
    dropping space
check_literal:After drop space:'%' idx=8 '2)
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=8 '2)
'
    dropping space
check_literal:After drop space:'"' idx=8 '2)
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: ')
'
check_operator: )

check_literal:lit=',' idx=9 ')
'
check_literal:After drop space:',' idx=9 ')
'
  ',' != ')'
check_literal: ret0
check_operator:ret0
check_function: ')
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=9 ')
'
    dropping space
check_literal:After drop space:'%' idx=9 ')
'
  '%' != ')'
check_literal: ret0
check_literal:lit=' "' idx=9 ')
'
    dropping space
check_literal:After drop space:'"' idx=9 ')
'
  '"' != ')'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ')
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname ')
':
check_vname ret0 ')
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=9 ')
'
    dropping space
check_literal:After drop space:'(' idx=9 ')
'
  '(' != ')'
check_literal: ret0
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 ')
'
check_literal:lit=' ,' idx=9 ')
'
    dropping space
check_literal:After drop space:',' idx=9 ')
'
  ',' != ')'
check_literal: ret0
check_literal:lit=' )' idx=9 ')
'
    dropping space
check_literal:After drop space:')' idx=9 ')
'
check_literal:After while():

check_literal:ret1 
check_variable:ret1 
check_eitem:ret1
scan_eitem:
check_operator: A(2)

check_literal:lit=',' idx=6 'A(2)
'
check_literal:After drop space:',' idx=6 'A(2)
'
  ',' != 'A'
check_literal: ret0
check_operator:ret0
check_function: 'A(2)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=6 'A(2)
'
    dropping space
check_literal:After drop space:'%' idx=6 'A(2)
'
  '%' != 'A'
check_literal: ret0
check_literal:lit=' "' idx=6 'A(2)
'
    dropping space
check_literal:After drop space:'"' idx=6 'A(2)
'
  '"' != 'A'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'A(2)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'A(2)
':
check_vname ret1 '(2)
':
check_variable: '(2)
'
check_variable: Ary test '(2)
'
check_literal:lit='(' idx=7 '(2)
'
check_literal:After drop space:'(' idx=7 '(2)
'
check_literal:After while():2)

check_literal:ret1 
check_variable: is array
check_expression: '2)
'
check_eitem: '2)
'
check_operator: 2)

check_literal:lit=',' idx=8 '2)
'
check_literal:After drop space:',' idx=8 '2)
'
  ',' != '2'
check_literal: ret0
check_operator:ret0
check_function: '2)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=8 '2)
'
    dropping space
check_literal:After drop space:'%' idx=8 '2)
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=8 '2)
'
    dropping space
check_literal:After drop space:'"' idx=8 '2)
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: ')
'
check_operator: )

check_literal:lit=',' idx=9 ')
'
check_literal:After drop space:',' idx=9 ')
'
  ',' != ')'
check_literal: ret0
check_operator:ret0
check_function: ')
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=9 ')
'
    dropping space
check_literal:After drop space:'%' idx=9 ')
'
  '%' != ')'
check_literal: ret0
check_literal:lit=' "' idx=9 ')
'
    dropping space
check_literal:After drop space:'"' idx=9 ')
'
  '"' != ')'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ')
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname ')
':
check_vname ret0 ')
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=9 ')
'
    dropping space
check_literal:After drop space:'(' idx=9 ')
'
  '(' != ')'
check_literal: ret0
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 ')
'
check_literal:lit=' ,' idx=9 ')
'
    dropping space
check_literal:After drop space:',' idx=9 ')
'
  ',' != ')'
check_literal: ret0
check_literal:lit=' )' idx=9 ')
'
    dropping space
check_literal:After drop space:')' idx=9 ')
'
check_literal:After while():

check_literal:ret1 
check_variable:ret1 
scan_atom:
check_literal:lit=' %' idx=6 'A(2)
'
    dropping space
check_literal:After drop space:'%' idx=6 'A(2)
'
  '%' != 'A'
check_literal: ret0
check_literal:lit=' "' idx=6 'A(2)
'
    dropping space
check_literal:After drop space:'"' idx=6 'A(2)
'
  '"' != 'A'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'A(2)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'A(2)
':
check_vname ret1 '(2)
':
check_variable: '(2)
'
check_variable: Ary test '(2)
'
check_literal:lit='(' idx=7 '(2)
'
check_literal:After drop space:'(' idx=7 '(2)
'
check_literal:After while():2)

check_literal:ret1 
check_variable: is array
check_expression: '2)
'
check_eitem: '2)
'
check_operator: 2)

check_literal:lit=',' idx=8 '2)
'
check_literal:After drop space:',' idx=8 '2)
'
  ',' != '2'
check_literal: ret0
check_operator:ret0
check_function: '2)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=8 '2)
'
    dropping space
check_literal:After drop space:'%' idx=8 '2)
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=8 '2)
'
    dropping space
check_literal:After drop space:'"' idx=8 '2)
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: ')
'
check_operator: )

check_literal:lit=',' idx=9 ')
'
check_literal:After drop space:',' idx=9 ')
'
  ',' != ')'
check_literal: ret0
check_operator:ret0
check_function: ')
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=9 ')
'
    dropping space
check_literal:After drop space:'%' idx=9 ')
'
  '%' != ')'
check_literal: ret0
check_literal:lit=' "' idx=9 ')
'
    dropping space
check_literal:After drop space:'"' idx=9 ')
'
  '"' != ')'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ')
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname ')
':
check_vname ret0 ')
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=9 ')
'
    dropping space
check_literal:After drop space:'(' idx=9 ')
'
  '(' != ')'
check_literal: ret0
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 ')
'
check_literal:lit=' ,' idx=9 ')
'
    dropping space
check_literal:After drop space:',' idx=9 ')
'
  ',' != ')'
check_literal: ret0
check_literal:lit=' )' idx=9 ')
'
    dropping space
check_literal:After drop space:')' idx=9 ')
'
check_literal:After while():

check_literal:ret1 
check_variable:ret1 
scan_variable:
scan_vname: 'A(2)
'
scan_vname: ret1 'A'
scan_variable: '(2)
' vname='A'
scan_variable: Ary test '(2)
'
check_literal:lit='(' idx=7 '(2)
'
check_literal:After drop space:'(' idx=7 '(2)
'
check_literal:After while():2)

check_literal:ret1 
scan_literal:lit='(' '(2)
'
scan_literal:After drop space:(2)

scan_literal:while loop:(2)

scan_variable: is array
scan_expression: '2)
'
check_eitem: '2)
'
check_operator: 2)

check_literal:lit=',' idx=8 '2)
'
check_literal:After drop space:',' idx=8 '2)
'
  ',' != '2'
check_literal: ret0
check_operator:ret0
check_function: '2)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=8 '2)
'
    dropping space
check_literal:After drop space:'%' idx=8 '2)
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=8 '2)
'
    dropping space
check_literal:After drop space:'"' idx=8 '2)
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
scan_eitem:
check_operator: 2)

check_literal:lit=',' idx=8 '2)
'
check_literal:After drop space:',' idx=8 '2)
'
  ',' != '2'
check_literal: ret0
check_operator:ret0
check_function: '2)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=8 '2)
'
    dropping space
check_literal:After drop space:'%' idx=8 '2)
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=8 '2)
'
    dropping space
check_literal:After drop space:'"' idx=8 '2)
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2)
'
check_integer:ret1
check_number: ret1
scan_atom:
check_literal:lit=' %' idx=8 '2)
'
    dropping space
check_literal:After drop space:'%' idx=8 '2)
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=8 '2)
'
    dropping space
check_literal:After drop space:'"' idx=8 '2)
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2)
'
check_integer:ret1
check_number: ret1
scan_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2)
'
check_integer:ret1
scan_integer:
scan_integer:ret0
check_eitem: ')
'
check_operator: )

check_literal:lit=',' idx=9 ')
'
check_literal:After drop space:',' idx=9 ')
'
  ',' != ')'
check_literal: ret0
check_operator:ret0
check_function: ')
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=9 ')
'
    dropping space
check_literal:After drop space:'%' idx=9 ')
'
  '%' != ')'
check_literal: ret0
check_literal:lit=' "' idx=9 ')
'
    dropping space
check_literal:After drop space:'"' idx=9 ')
'
  '"' != ')'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ')
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname ')
':
check_vname ret0 ')
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=9 ')
'
    dropping space
check_literal:After drop space:'(' idx=9 ')
'
  '(' != ')'
check_literal: ret0
check_sub_expr: ret0
check_eitem:ret0
scan_expression: ret1 ')
'
check_literal:lit=' ,' idx=9 ')
'
    dropping space
check_literal:After drop space:',' idx=9 ')
'
  ',' != ')'
check_literal: ret0
scan_literal:lit=' )' ')
'
scan_literal:After drop space:)

scan_literal:while loop:)

scan_variable:ret1 vname='A' is str:0 int:0 flt:1 ary:1
VAR INFO: '                 A' gbl:0 ref:1 int:0 flt:1 str:0 ary:1 max_str:0 max_ary:0 num_ind:1
check_eitem: '
'
check_operator: 

check_literal:lit=',' idx=11 ''
check_literal:After drop space:',' idx=11 ''
check_literal  ret0 Empty test string
check_operator:ret0
check_function: ''
check_function: ret0
check_atom:
check_literal:lit=' %' idx=10 '
'
    dropping space
check_literal:After drop space:'%' idx=11 ''
check_literal  ret0 Empty test string
check_literal:lit=' "' idx=10 '
'
    dropping space
check_literal:After drop space:'"' idx=11 ''
check_literal  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ''
check_integer:ret0
check_number: ret0
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=10 '
'
    dropping space
check_literal:After drop space:'(' idx=11 ''
check_literal  ret0 Empty test string
check_sub_expr: ret0
check_eitem:ret0
scan_expression: ret1 '
'
scan_command: ret1 =>'PRINT'
check_literal:lit=':' idx=11 ''
check_literal:After drop space:':' idx=11 ''
check_literal  ret0 Empty test string
cline scanned OK
=======================cline==========================
==PRINT B%(10)
==
scan_cline:
check_line:
check_assignment:
check_variable:
check_vname 'PRINT B%(10)
':
check_vname ret1 ' B%(10)
':
check_variable: ' B%(10)
'
check_variable: Ary test ' B%(10)
'
check_literal:lit='(' idx=5 ' B%(10)
'
check_literal:After drop space:'(' idx=5 ' B%(10)
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variable:ret1 
check_literal:lit=' =' idx=5 ' B%(10)
'
    dropping space
check_literal:After drop space:'=' idx=6 'B%(10)
'
  '=' != 'B'
check_literal: ret0
check_assignment:ret0
check_proc_call:
check_textlabel: 'PRINT B%(10)
'
check_textlabel:ret0
check_proc_call:ret0
check_command:
check_command: ret1 found=> 'PRINT'
check_line:ret1
scan_cline: Checked len=8, ' B%(10)
'
scan_line:
check_assignment:
check_variable:
check_vname 'PRINT B%(10)
':
check_vname ret1 ' B%(10)
':
check_variable: ' B%(10)
'
check_variable: Ary test ' B%(10)
'
check_literal:lit='(' idx=5 ' B%(10)
'
check_literal:After drop space:'(' idx=5 ' B%(10)
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variable:ret1 
check_literal:lit=' =' idx=5 ' B%(10)
'
    dropping space
check_literal:After drop space:'=' idx=6 'B%(10)
'
  '=' != 'B'
check_literal: ret0
check_assignment:ret0
check_proc_call:
check_textlabel: 'PRINT B%(10)
'
check_textlabel:ret0
check_proc_call:ret0
check_command:
check_command: ret1 found=> 'PRINT'
scan_line:check_command: 
scan_command:
scan_expression: ' B%(10)
'
check_eitem: 'B%(10)
'
check_operator: B%(10)

check_literal:lit=',' idx=6 'B%(10)
'
check_literal:After drop space:',' idx=6 'B%(10)
'
  ',' != 'B'
check_literal: ret0
check_operator:ret0
check_function: 'B%(10)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=6 'B%(10)
'
    dropping space
check_literal:After drop space:'%' idx=6 'B%(10)
'
  '%' != 'B'
check_literal: ret0
check_literal:lit=' "' idx=6 'B%(10)
'
    dropping space
check_literal:After drop space:'"' idx=6 'B%(10)
'
  '"' != 'B'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'B%(10)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'B%(10)
':
check_vname ret1 '%(10)
':
check_variable: '%(10)
'
check_variable: Ary test '(10)
'
check_literal:lit='(' idx=8 '(10)
'
check_literal:After drop space:'(' idx=8 '(10)
'
check_literal:After while():10)

check_literal:ret1 
check_variable: is array
check_expression: '10)
'
check_eitem: '10)
'
check_operator: 10)

check_literal:lit=',' idx=9 '10)
'
check_literal:After drop space:',' idx=9 '10)
'
  ',' != '1'
check_literal: ret0
check_operator:ret0
check_function: '10)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=9 '10)
'
    dropping space
check_literal:After drop space:'%' idx=9 '10)
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=9 '10)
'
    dropping space
check_literal:After drop space:'"' idx=9 '10)
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '10)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: ')
'
check_operator: )

check_literal:lit=',' idx=11 ')
'
check_literal:After drop space:',' idx=11 ')
'
  ',' != ')'
check_literal: ret0
check_operator:ret0
check_function: ')
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=11 ')
'
    dropping space
check_literal:After drop space:'%' idx=11 ')
'
  '%' != ')'
check_literal: ret0
check_literal:lit=' "' idx=11 ')
'
    dropping space
check_literal:After drop space:'"' idx=11 ')
'
  '"' != ')'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ')
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname ')
':
check_vname ret0 ')
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=11 ')
'
    dropping space
check_literal:After drop space:'(' idx=11 ')
'
  '(' != ')'
check_literal: ret0
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 ')
'
check_literal:lit=' ,' idx=11 ')
'
    dropping space
check_literal:After drop space:',' idx=11 ')
'
  ',' != ')'
check_literal: ret0
check_literal:lit=' )' idx=11 ')
'
    dropping space
check_literal:After drop space:')' idx=11 ')
'
check_literal:After while():

check_literal:ret1 
check_variable:ret1 
check_eitem:ret1
scan_eitem:
check_operator: B%(10)

check_literal:lit=',' idx=6 'B%(10)
'
check_literal:After drop space:',' idx=6 'B%(10)
'
  ',' != 'B'
check_literal: ret0
check_operator:ret0
check_function: 'B%(10)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=6 'B%(10)
'
    dropping space
check_literal:After drop space:'%' idx=6 'B%(10)
'
  '%' != 'B'
check_literal: ret0
check_literal:lit=' "' idx=6 'B%(10)
'
    dropping space
check_literal:After drop space:'"' idx=6 'B%(10)
'
  '"' != 'B'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'B%(10)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'B%(10)
':
check_vname ret1 '%(10)
':
check_variable: '%(10)
'
check_variable: Ary test '(10)
'
check_literal:lit='(' idx=8 '(10)
'
check_literal:After drop space:'(' idx=8 '(10)
'
check_literal:After while():10)

check_literal:ret1 
check_variable: is array
check_expression: '10)
'
check_eitem: '10)
'
check_operator: 10)

check_literal:lit=',' idx=9 '10)
'
check_literal:After drop space:',' idx=9 '10)
'
  ',' != '1'
check_literal: ret0
check_operator:ret0
check_function: '10)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=9 '10)
'
    dropping space
check_literal:After drop space:'%' idx=9 '10)
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=9 '10)
'
    dropping space
check_literal:After drop space:'"' idx=9 '10)
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '10)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: ')
'
check_operator: )

check_literal:lit=',' idx=11 ')
'
check_literal:After drop space:',' idx=11 ')
'
  ',' != ')'
check_literal: ret0
check_operator:ret0
check_function: ')
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=11 ')
'
    dropping space
check_literal:After drop space:'%' idx=11 ')
'
  '%' != ')'
check_literal: ret0
check_literal:lit=' "' idx=11 ')
'
    dropping space
check_literal:After drop space:'"' idx=11 ')
'
  '"' != ')'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ')
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname ')
':
check_vname ret0 ')
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=11 ')
'
    dropping space
check_literal:After drop space:'(' idx=11 ')
'
  '(' != ')'
check_literal: ret0
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 ')
'
check_literal:lit=' ,' idx=11 ')
'
    dropping space
check_literal:After drop space:',' idx=11 ')
'
  ',' != ')'
check_literal: ret0
check_literal:lit=' )' idx=11 ')
'
    dropping space
check_literal:After drop space:')' idx=11 ')
'
check_literal:After while():

check_literal:ret1 
check_variable:ret1 
scan_atom:
check_literal:lit=' %' idx=6 'B%(10)
'
    dropping space
check_literal:After drop space:'%' idx=6 'B%(10)
'
  '%' != 'B'
check_literal: ret0
check_literal:lit=' "' idx=6 'B%(10)
'
    dropping space
check_literal:After drop space:'"' idx=6 'B%(10)
'
  '"' != 'B'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'B%(10)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'B%(10)
':
check_vname ret1 '%(10)
':
check_variable: '%(10)
'
check_variable: Ary test '(10)
'
check_literal:lit='(' idx=8 '(10)
'
check_literal:After drop space:'(' idx=8 '(10)
'
check_literal:After while():10)

check_literal:ret1 
check_variable: is array
check_expression: '10)
'
check_eitem: '10)
'
check_operator: 10)

check_literal:lit=',' idx=9 '10)
'
check_literal:After drop space:',' idx=9 '10)
'
  ',' != '1'
check_literal: ret0
check_operator:ret0
check_function: '10)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=9 '10)
'
    dropping space
check_literal:After drop space:'%' idx=9 '10)
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=9 '10)
'
    dropping space
check_literal:After drop space:'"' idx=9 '10)
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '10)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: ')
'
check_operator: )

check_literal:lit=',' idx=11 ')
'
check_literal:After drop space:',' idx=11 ')
'
  ',' != ')'
check_literal: ret0
check_operator:ret0
check_function: ')
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=11 ')
'
    dropping space
check_literal:After drop space:'%' idx=11 ')
'
  '%' != ')'
check_literal: ret0
check_literal:lit=' "' idx=11 ')
'
    dropping space
check_literal:After drop space:'"' idx=11 ')
'
  '"' != ')'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ')
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname ')
':
check_vname ret0 ')
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=11 ')
'
    dropping space
check_literal:After drop space:'(' idx=11 ')
'
  '(' != ')'
check_literal: ret0
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 ')
'
check_literal:lit=' ,' idx=11 ')
'
    dropping space
check_literal:After drop space:',' idx=11 ')
'
  ',' != ')'
check_literal: ret0
check_literal:lit=' )' idx=11 ')
'
    dropping space
check_literal:After drop space:')' idx=11 ')
'
check_literal:After while():

check_literal:ret1 
check_variable:ret1 
scan_variable:
scan_vname: 'B%(10)
'
scan_vname: ret1 'B'
scan_variable: '%(10)
' vname='B'
scan_variable: Ary test '(10)
'
check_literal:lit='(' idx=8 '(10)
'
check_literal:After drop space:'(' idx=8 '(10)
'
check_literal:After while():10)

check_literal:ret1 
scan_literal:lit='(' '(10)
'
scan_literal:After drop space:(10)

scan_literal:while loop:(10)

scan_variable: is array
scan_expression: '10)
'
check_eitem: '10)
'
check_operator: 10)

check_literal:lit=',' idx=9 '10)
'
check_literal:After drop space:',' idx=9 '10)
'
  ',' != '1'
check_literal: ret0
check_operator:ret0
check_function: '10)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=9 '10)
'
    dropping space
check_literal:After drop space:'%' idx=9 '10)
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=9 '10)
'
    dropping space
check_literal:After drop space:'"' idx=9 '10)
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '10)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
scan_eitem:
check_operator: 10)

check_literal:lit=',' idx=9 '10)
'
check_literal:After drop space:',' idx=9 '10)
'
  ',' != '1'
check_literal: ret0
check_operator:ret0
check_function: '10)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=9 '10)
'
    dropping space
check_literal:After drop space:'%' idx=9 '10)
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=9 '10)
'
    dropping space
check_literal:After drop space:'"' idx=9 '10)
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '10)
'
check_integer:ret1
check_number: ret1
scan_atom:
check_literal:lit=' %' idx=9 '10)
'
    dropping space
check_literal:After drop space:'%' idx=9 '10)
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=9 '10)
'
    dropping space
check_literal:After drop space:'"' idx=9 '10)
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '10)
'
check_integer:ret1
check_number: ret1
scan_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '10)
'
check_integer:ret1
scan_integer:
scan_integer:ret0
check_eitem: ')
'
check_operator: )

check_literal:lit=',' idx=11 ')
'
check_literal:After drop space:',' idx=11 ')
'
  ',' != ')'
check_literal: ret0
check_operator:ret0
check_function: ')
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=11 ')
'
    dropping space
check_literal:After drop space:'%' idx=11 ')
'
  '%' != ')'
check_literal: ret0
check_literal:lit=' "' idx=11 ')
'
    dropping space
check_literal:After drop space:'"' idx=11 ')
'
  '"' != ')'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ')
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname ')
':
check_vname ret0 ')
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=11 ')
'
    dropping space
check_literal:After drop space:'(' idx=11 ')
'
  '(' != ')'
check_literal: ret0
check_sub_expr: ret0
check_eitem:ret0
scan_expression: ret1 ')
'
check_literal:lit=' ,' idx=11 ')
'
    dropping space
check_literal:After drop space:',' idx=11 ')
'
  ',' != ')'
check_literal: ret0
scan_literal:lit=' )' ')
'
scan_literal:After drop space:)

scan_literal:while loop:)

scan_variable:ret1 vname='B%' is str:0 int:1 flt:0 ary:1
VAR INFO: '                B%' gbl:0 ref:1 int:1 flt:0 str:0 ary:1 max_str:0 max_ary:0 num_ind:1
check_eitem: '
'
check_operator: 

check_literal:lit=',' idx=13 ''
check_literal:After drop space:',' idx=13 ''
check_literal  ret0 Empty test string
check_operator:ret0
check_function: ''
check_function: ret0
check_atom:
check_literal:lit=' %' idx=12 '
'
    dropping space
check_literal:After drop space:'%' idx=13 ''
check_literal  ret0 Empty test string
check_literal:lit=' "' idx=12 '
'
    dropping space
check_literal:After drop space:'"' idx=13 ''
check_literal  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ''
check_integer:ret0
check_number: ret0
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=12 '
'
    dropping space
check_literal:After drop space:'(' idx=13 ''
check_literal  ret0 Empty test string
check_sub_expr: ret0
check_eitem:ret0
scan_expression: ret1 '
'
scan_command: ret1 =>'PRINT'
check_literal:lit=':' idx=13 ''
check_literal:After drop space:':' idx=13 ''
check_literal  ret0 Empty test string
cline scanned OK
=======================cline==========================
==PRINT D$(2)
==
scan_cline:
check_line:
check_assignment:
check_variable:
check_vname 'PRINT D$(2)
':
check_vname ret1 ' D$(2)
':
check_variable: ' D$(2)
'
check_variable: Ary test ' D$(2)
'
check_literal:lit='(' idx=5 ' D$(2)
'
check_literal:After drop space:'(' idx=5 ' D$(2)
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variable:ret1 
check_literal:lit=' =' idx=5 ' D$(2)
'
    dropping space
check_literal:After drop space:'=' idx=6 'D$(2)
'
  '=' != 'D'
check_literal: ret0
check_assignment:ret0
check_proc_call:
check_textlabel: 'PRINT D$(2)
'
check_textlabel:ret0
check_proc_call:ret0
check_command:
check_command: ret1 found=> 'PRINT'
check_line:ret1
scan_cline: Checked len=7, ' D$(2)
'
scan_line:
check_assignment:
check_variable:
check_vname 'PRINT D$(2)
':
check_vname ret1 ' D$(2)
':
check_variable: ' D$(2)
'
check_variable: Ary test ' D$(2)
'
check_literal:lit='(' idx=5 ' D$(2)
'
check_literal:After drop space:'(' idx=5 ' D$(2)
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variable:ret1 
check_literal:lit=' =' idx=5 ' D$(2)
'
    dropping space
check_literal:After drop space:'=' idx=6 'D$(2)
'
  '=' != 'D'
check_literal: ret0
check_assignment:ret0
check_proc_call:
check_textlabel: 'PRINT D$(2)
'
check_textlabel:ret0
check_proc_call:ret0
check_command:
check_command: ret1 found=> 'PRINT'
scan_line:check_command: 
scan_command:
scan_expression: ' D$(2)
'
check_eitem: 'D$(2)
'
check_operator: D$(2)

check_literal:lit=',' idx=6 'D$(2)
'
check_literal:After drop space:',' idx=6 'D$(2)
'
  ',' != 'D'
check_literal: ret0
check_operator:ret0
check_function: 'D$(2)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=6 'D$(2)
'
    dropping space
check_literal:After drop space:'%' idx=6 'D$(2)
'
  '%' != 'D'
check_literal: ret0
check_literal:lit=' "' idx=6 'D$(2)
'
    dropping space
check_literal:After drop space:'"' idx=6 'D$(2)
'
  '"' != 'D'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'D$(2)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'D$(2)
':
check_vname ret1 '$(2)
':
check_variable: '$(2)
'
check_variable: Ary test '(2)
'
check_literal:lit='(' idx=8 '(2)
'
check_literal:After drop space:'(' idx=8 '(2)
'
check_literal:After while():2)

check_literal:ret1 
check_variable: is array
check_expression: '2)
'
check_eitem: '2)
'
check_operator: 2)

check_literal:lit=',' idx=9 '2)
'
check_literal:After drop space:',' idx=9 '2)
'
  ',' != '2'
check_literal: ret0
check_operator:ret0
check_function: '2)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=9 '2)
'
    dropping space
check_literal:After drop space:'%' idx=9 '2)
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=9 '2)
'
    dropping space
check_literal:After drop space:'"' idx=9 '2)
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: ')
'
check_operator: )

check_literal:lit=',' idx=10 ')
'
check_literal:After drop space:',' idx=10 ')
'
  ',' != ')'
check_literal: ret0
check_operator:ret0
check_function: ')
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=10 ')
'
    dropping space
check_literal:After drop space:'%' idx=10 ')
'
  '%' != ')'
check_literal: ret0
check_literal:lit=' "' idx=10 ')
'
    dropping space
check_literal:After drop space:'"' idx=10 ')
'
  '"' != ')'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ')
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname ')
':
check_vname ret0 ')
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=10 ')
'
    dropping space
check_literal:After drop space:'(' idx=10 ')
'
  '(' != ')'
check_literal: ret0
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 ')
'
check_literal:lit=' ,' idx=10 ')
'
    dropping space
check_literal:After drop space:',' idx=10 ')
'
  ',' != ')'
check_literal: ret0
check_literal:lit=' )' idx=10 ')
'
    dropping space
check_literal:After drop space:')' idx=10 ')
'
check_literal:After while():

check_literal:ret1 
check_variable:ret1 
check_eitem:ret1
scan_eitem:
check_operator: D$(2)

check_literal:lit=',' idx=6 'D$(2)
'
check_literal:After drop space:',' idx=6 'D$(2)
'
  ',' != 'D'
check_literal: ret0
check_operator:ret0
check_function: 'D$(2)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=6 'D$(2)
'
    dropping space
check_literal:After drop space:'%' idx=6 'D$(2)
'
  '%' != 'D'
check_literal: ret0
check_literal:lit=' "' idx=6 'D$(2)
'
    dropping space
check_literal:After drop space:'"' idx=6 'D$(2)
'
  '"' != 'D'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'D$(2)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'D$(2)
':
check_vname ret1 '$(2)
':
check_variable: '$(2)
'
check_variable: Ary test '(2)
'
check_literal:lit='(' idx=8 '(2)
'
check_literal:After drop space:'(' idx=8 '(2)
'
check_literal:After while():2)

check_literal:ret1 
check_variable: is array
check_expression: '2)
'
check_eitem: '2)
'
check_operator: 2)

check_literal:lit=',' idx=9 '2)
'
check_literal:After drop space:',' idx=9 '2)
'
  ',' != '2'
check_literal: ret0
check_operator:ret0
check_function: '2)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=9 '2)
'
    dropping space
check_literal:After drop space:'%' idx=9 '2)
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=9 '2)
'
    dropping space
check_literal:After drop space:'"' idx=9 '2)
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: ')
'
check_operator: )

check_literal:lit=',' idx=10 ')
'
check_literal:After drop space:',' idx=10 ')
'
  ',' != ')'
check_literal: ret0
check_operator:ret0
check_function: ')
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=10 ')
'
    dropping space
check_literal:After drop space:'%' idx=10 ')
'
  '%' != ')'
check_literal: ret0
check_literal:lit=' "' idx=10 ')
'
    dropping space
check_literal:After drop space:'"' idx=10 ')
'
  '"' != ')'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ')
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname ')
':
check_vname ret0 ')
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=10 ')
'
    dropping space
check_literal:After drop space:'(' idx=10 ')
'
  '(' != ')'
check_literal: ret0
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 ')
'
check_literal:lit=' ,' idx=10 ')
'
    dropping space
check_literal:After drop space:',' idx=10 ')
'
  ',' != ')'
check_literal: ret0
check_literal:lit=' )' idx=10 ')
'
    dropping space
check_literal:After drop space:')' idx=10 ')
'
check_literal:After while():

check_literal:ret1 
check_variable:ret1 
scan_atom:
check_literal:lit=' %' idx=6 'D$(2)
'
    dropping space
check_literal:After drop space:'%' idx=6 'D$(2)
'
  '%' != 'D'
check_literal: ret0
check_literal:lit=' "' idx=6 'D$(2)
'
    dropping space
check_literal:After drop space:'"' idx=6 'D$(2)
'
  '"' != 'D'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'D$(2)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'D$(2)
':
check_vname ret1 '$(2)
':
check_variable: '$(2)
'
check_variable: Ary test '(2)
'
check_literal:lit='(' idx=8 '(2)
'
check_literal:After drop space:'(' idx=8 '(2)
'
check_literal:After while():2)

check_literal:ret1 
check_variable: is array
check_expression: '2)
'
check_eitem: '2)
'
check_operator: 2)

check_literal:lit=',' idx=9 '2)
'
check_literal:After drop space:',' idx=9 '2)
'
  ',' != '2'
check_literal: ret0
check_operator:ret0
check_function: '2)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=9 '2)
'
    dropping space
check_literal:After drop space:'%' idx=9 '2)
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=9 '2)
'
    dropping space
check_literal:After drop space:'"' idx=9 '2)
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: ')
'
check_operator: )

check_literal:lit=',' idx=10 ')
'
check_literal:After drop space:',' idx=10 ')
'
  ',' != ')'
check_literal: ret0
check_operator:ret0
check_function: ')
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=10 ')
'
    dropping space
check_literal:After drop space:'%' idx=10 ')
'
  '%' != ')'
check_literal: ret0
check_literal:lit=' "' idx=10 ')
'
    dropping space
check_literal:After drop space:'"' idx=10 ')
'
  '"' != ')'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ')
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname ')
':
check_vname ret0 ')
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=10 ')
'
    dropping space
check_literal:After drop space:'(' idx=10 ')
'
  '(' != ')'
check_literal: ret0
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 ')
'
check_literal:lit=' ,' idx=10 ')
'
    dropping space
check_literal:After drop space:',' idx=10 ')
'
  ',' != ')'
check_literal: ret0
check_literal:lit=' )' idx=10 ')
'
    dropping space
check_literal:After drop space:')' idx=10 ')
'
check_literal:After while():

check_literal:ret1 
check_variable:ret1 
scan_variable:
scan_vname: 'D$(2)
'
scan_vname: ret1 'D'
scan_variable: '$(2)
' vname='D'
scan_variable: Ary test '(2)
'
check_literal:lit='(' idx=8 '(2)
'
check_literal:After drop space:'(' idx=8 '(2)
'
check_literal:After while():2)

check_literal:ret1 
scan_literal:lit='(' '(2)
'
scan_literal:After drop space:(2)

scan_literal:while loop:(2)

scan_variable: is array
scan_expression: '2)
'
check_eitem: '2)
'
check_operator: 2)

check_literal:lit=',' idx=9 '2)
'
check_literal:After drop space:',' idx=9 '2)
'
  ',' != '2'
check_literal: ret0
check_operator:ret0
check_function: '2)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=9 '2)
'
    dropping space
check_literal:After drop space:'%' idx=9 '2)
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=9 '2)
'
    dropping space
check_literal:After drop space:'"' idx=9 '2)
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
scan_eitem:
check_operator: 2)

check_literal:lit=',' idx=9 '2)
'
check_literal:After drop space:',' idx=9 '2)
'
  ',' != '2'
check_literal: ret0
check_operator:ret0
check_function: '2)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=9 '2)
'
    dropping space
check_literal:After drop space:'%' idx=9 '2)
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=9 '2)
'
    dropping space
check_literal:After drop space:'"' idx=9 '2)
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2)
'
check_integer:ret1
check_number: ret1
scan_atom:
check_literal:lit=' %' idx=9 '2)
'
    dropping space
check_literal:After drop space:'%' idx=9 '2)
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=9 '2)
'
    dropping space
check_literal:After drop space:'"' idx=9 '2)
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2)
'
check_integer:ret1
check_number: ret1
scan_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2)
'
check_integer:ret1
scan_integer:
scan_integer:ret0
check_eitem: ')
'
check_operator: )

check_literal:lit=',' idx=10 ')
'
check_literal:After drop space:',' idx=10 ')
'
  ',' != ')'
check_literal: ret0
check_operator:ret0
check_function: ')
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=10 ')
'
    dropping space
check_literal:After drop space:'%' idx=10 ')
'
  '%' != ')'
check_literal: ret0
check_literal:lit=' "' idx=10 ')
'
    dropping space
check_literal:After drop space:'"' idx=10 ')
'
  '"' != ')'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ')
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname ')
':
check_vname ret0 ')
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=10 ')
'
    dropping space
check_literal:After drop space:'(' idx=10 ')
'
  '(' != ')'
check_literal: ret0
check_sub_expr: ret0
check_eitem:ret0
scan_expression: ret1 ')
'
check_literal:lit=' ,' idx=10 ')
'
    dropping space
check_literal:After drop space:',' idx=10 ')
'
  ',' != ')'
check_literal: ret0
scan_literal:lit=' )' ')
'
scan_literal:After drop space:)

scan_literal:while loop:)

scan_variable:ret1 vname='D$' is str:1 int:0 flt:0 ary:1
VAR INFO: '                D$' gbl:0 ref:1 int:0 flt:0 str:1 ary:1 max_str:0 max_ary:0 num_ind:1
check_eitem: '
'
check_operator: 

check_literal:lit=',' idx=12 ''
check_literal:After drop space:',' idx=12 ''
check_literal  ret0 Empty test string
check_operator:ret0
check_function: ''
check_function: ret0
check_atom:
check_literal:lit=' %' idx=11 '
'
    dropping space
check_literal:After drop space:'%' idx=12 ''
check_literal  ret0 Empty test string
check_literal:lit=' "' idx=11 '
'
    dropping space
check_literal:After drop space:'"' idx=12 ''
check_literal  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ''
check_integer:ret0
check_number: ret0
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=11 '
'
    dropping space
check_literal:After drop space:'(' idx=12 ''
check_literal  ret0 Empty test string
check_sub_expr: ret0
check_eitem:ret0
scan_expression: ret1 '
'
scan_command: ret1 =>'PRINT'
check_literal:lit=':' idx=12 ''
check_literal:After drop space:':' idx=12 ''
check_literal  ret0 Empty test string
cline scanned OK
=======================cline==========================
==PRINT F$(10,12)
==
scan_cline:
check_line:
check_assignment:
check_variable:
check_vname 'PRINT F$(10,12)
':
check_vname ret1 ' F$(10,12)
':
check_variable: ' F$(10,12)
'
check_variable: Ary test ' F$(10,12)
'
check_literal:lit='(' idx=5 ' F$(10,12)
'
check_literal:After drop space:'(' idx=5 ' F$(10,12)
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variable:ret1 
check_literal:lit=' =' idx=5 ' F$(10,12)
'
    dropping space
check_literal:After drop space:'=' idx=6 'F$(10,12)
'
  '=' != 'F'
check_literal: ret0
check_assignment:ret0
check_proc_call:
check_textlabel: 'PRINT F$(10,12)
'
check_textlabel:ret0
check_proc_call:ret0
check_command:
check_command: ret1 found=> 'PRINT'
check_line:ret1
scan_cline: Checked len=11, ' F$(10,12)
'
scan_line:
check_assignment:
check_variable:
check_vname 'PRINT F$(10,12)
':
check_vname ret1 ' F$(10,12)
':
check_variable: ' F$(10,12)
'
check_variable: Ary test ' F$(10,12)
'
check_literal:lit='(' idx=5 ' F$(10,12)
'
check_literal:After drop space:'(' idx=5 ' F$(10,12)
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variable:ret1 
check_literal:lit=' =' idx=5 ' F$(10,12)
'
    dropping space
check_literal:After drop space:'=' idx=6 'F$(10,12)
'
  '=' != 'F'
check_literal: ret0
check_assignment:ret0
check_proc_call:
check_textlabel: 'PRINT F$(10,12)
'
check_textlabel:ret0
check_proc_call:ret0
check_command:
check_command: ret1 found=> 'PRINT'
scan_line:check_command: 
scan_command:
scan_expression: ' F$(10,12)
'
check_eitem: 'F$(10,12)
'
check_operator: F$(10,12)

check_literal:lit=',' idx=6 'F$(10,12)
'
check_literal:After drop space:',' idx=6 'F$(10,12)
'
  ',' != 'F'
check_literal: ret0
check_operator:ret0
check_function: 'F$(10,12)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=6 'F$(10,12)
'
    dropping space
check_literal:After drop space:'%' idx=6 'F$(10,12)
'
  '%' != 'F'
check_literal: ret0
check_literal:lit=' "' idx=6 'F$(10,12)
'
    dropping space
check_literal:After drop space:'"' idx=6 'F$(10,12)
'
  '"' != 'F'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'F$(10,12)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'F$(10,12)
':
check_vname ret1 '$(10,12)
':
check_variable: '$(10,12)
'
check_variable: Ary test '(10,12)
'
check_literal:lit='(' idx=8 '(10,12)
'
check_literal:After drop space:'(' idx=8 '(10,12)
'
check_literal:After while():10,12)

check_literal:ret1 
check_variable: is array
check_expression: '10,12)
'
check_eitem: '10,12)
'
check_operator: 10,12)

check_literal:lit=',' idx=9 '10,12)
'
check_literal:After drop space:',' idx=9 '10,12)
'
  ',' != '1'
check_literal: ret0
check_operator:ret0
check_function: '10,12)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=9 '10,12)
'
    dropping space
check_literal:After drop space:'%' idx=9 '10,12)
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=9 '10,12)
'
    dropping space
check_literal:After drop space:'"' idx=9 '10,12)
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '10,12)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: ',12)
'
check_operator: ,12)

check_literal:lit=',' idx=11 ',12)
'
check_literal:After drop space:',' idx=11 ',12)
'
check_literal:After while():12)

check_literal:ret1 
scan_literal:lit=',' 'F$(10,12)
'
scan_literal:After drop space:F$(10,12)

scan_literal:while loop:F$(10,12)

check_function: ',12)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=11 ',12)
'
    dropping space
check_literal:After drop space:'%' idx=11 ',12)
'
  '%' != ','
check_literal: ret0
check_literal:lit=' "' idx=11 ',12)
'
    dropping space
check_literal:After drop space:'"' idx=11 ',12)
'
  '"' != ','
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ',12)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname ',12)
':
check_vname ret0 ',12)
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=11 ',12)
'
    dropping space
check_literal:After drop space:'(' idx=11 ',12)
'
  '(' != ','
check_literal: ret0
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 ',12)
'
check_literal:lit=' ,' idx=11 ',12)
'
    dropping space
check_literal:After drop space:',' idx=11 ',12)
'
check_literal:After while():12)

check_literal:ret1 
check_expression: '12)
'
check_eitem: '12)
'
check_operator: 12)

check_literal:lit=',' idx=12 '12)
'
check_literal:After drop space:',' idx=12 '12)
'
  ',' != '1'
check_literal: ret0
check_operator:ret0
check_function: '12)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=12 '12)
'
    dropping space
check_literal:After drop space:'%' idx=12 '12)
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=12 '12)
'
    dropping space
check_literal:After drop space:'"' idx=12 '12)
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '12)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: ')
'
check_operator: )

check_literal:lit=',' idx=14 ')
'
check_literal:After drop space:',' idx=14 ')
'
  ',' != ')'
check_literal: ret0
check_operator:ret0
check_function: ')
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=14 ')
'
    dropping space
check_literal:After drop space:'%' idx=14 ')
'
  '%' != ')'
check_literal: ret0
check_literal:lit=' "' idx=14 ')
'
    dropping space
check_literal:After drop space:'"' idx=14 ')
'
  '"' != ')'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ')
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname ')
':
check_vname ret0 ')
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=14 ')
'
    dropping space
check_literal:After drop space:'(' idx=14 ')
'
  '(' != ')'
check_literal: ret0
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 ')
'
check_literal:lit=' )' idx=14 ')
'
    dropping space
check_literal:After drop space:')' idx=14 ')
'
check_literal:After while():

check_literal:ret1 
check_variable:ret1 
check_eitem:ret1
scan_eitem:
check_operator: F$(10,12)

check_literal:lit=',' idx=6 'F$(10,12)
'
check_literal:After drop space:',' idx=6 'F$(10,12)
'
  ',' != 'F'
check_literal: ret0
check_operator:ret0
check_function: 'F$(10,12)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=6 'F$(10,12)
'
    dropping space
check_literal:After drop space:'%' idx=6 'F$(10,12)
'
  '%' != 'F'
check_literal: ret0
check_literal:lit=' "' idx=6 'F$(10,12)
'
    dropping space
check_literal:After drop space:'"' idx=6 'F$(10,12)
'
  '"' != 'F'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'F$(10,12)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'F$(10,12)
':
check_vname ret1 '$(10,12)
':
check_variable: '$(10,12)
'
check_variable: Ary test '(10,12)
'
check_literal:lit='(' idx=8 '(10,12)
'
check_literal:After drop space:'(' idx=8 '(10,12)
'
check_literal:After while():10,12)

check_literal:ret1 
check_variable: is array
check_expression: '10,12)
'
check_eitem: '10,12)
'
check_operator: 10,12)

check_literal:lit=',' idx=9 '10,12)
'
check_literal:After drop space:',' idx=9 '10,12)
'
  ',' != '1'
check_literal: ret0
check_operator:ret0
check_function: '10,12)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=9 '10,12)
'
    dropping space
check_literal:After drop space:'%' idx=9 '10,12)
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=9 '10,12)
'
    dropping space
check_literal:After drop space:'"' idx=9 '10,12)
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '10,12)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: ',12)
'
check_operator: ,12)

check_literal:lit=',' idx=11 ',12)
'
check_literal:After drop space:',' idx=11 ',12)
'
check_literal:After while():12)

check_literal:ret1 
scan_literal:lit=',' 'F$(10,12)
'
scan_literal:After drop space:F$(10,12)

scan_literal:while loop:F$(10,12)

check_function: ',12)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=11 ',12)
'
    dropping space
check_literal:After drop space:'%' idx=11 ',12)
'
  '%' != ','
check_literal: ret0
check_literal:lit=' "' idx=11 ',12)
'
    dropping space
check_literal:After drop space:'"' idx=11 ',12)
'
  '"' != ','
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ',12)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname ',12)
':
check_vname ret0 ',12)
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=11 ',12)
'
    dropping space
check_literal:After drop space:'(' idx=11 ',12)
'
  '(' != ','
check_literal: ret0
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 ',12)
'
check_literal:lit=' ,' idx=11 ',12)
'
    dropping space
check_literal:After drop space:',' idx=11 ',12)
'
check_literal:After while():12)

check_literal:ret1 
check_expression: '12)
'
check_eitem: '12)
'
check_operator: 12)

check_literal:lit=',' idx=12 '12)
'
check_literal:After drop space:',' idx=12 '12)
'
  ',' != '1'
check_literal: ret0
check_operator:ret0
check_function: '12)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=12 '12)
'
    dropping space
check_literal:After drop space:'%' idx=12 '12)
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=12 '12)
'
    dropping space
check_literal:After drop space:'"' idx=12 '12)
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '12)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: ')
'
check_operator: )

check_literal:lit=',' idx=14 ')
'
check_literal:After drop space:',' idx=14 ')
'
  ',' != ')'
check_literal: ret0
check_operator:ret0
check_function: ')
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=14 ')
'
    dropping space
check_literal:After drop space:'%' idx=14 ')
'
  '%' != ')'
check_literal: ret0
check_literal:lit=' "' idx=14 ')
'
    dropping space
check_literal:After drop space:'"' idx=14 ')
'
  '"' != ')'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ')
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname ')
':
check_vname ret0 ')
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=14 ')
'
    dropping space
check_literal:After drop space:'(' idx=14 ')
'
  '(' != ')'
check_literal: ret0
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 ')
'
check_literal:lit=' )' idx=14 ')
'
    dropping space
check_literal:After drop space:')' idx=14 ')
'
check_literal:After while():

check_literal:ret1 
check_variable:ret1 
scan_atom:
check_literal:lit=' %' idx=6 'F$(10,12)
'
    dropping space
check_literal:After drop space:'%' idx=6 'F$(10,12)
'
  '%' != 'F'
check_literal: ret0
check_literal:lit=' "' idx=6 'F$(10,12)
'
    dropping space
check_literal:After drop space:'"' idx=6 'F$(10,12)
'
  '"' != 'F'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'F$(10,12)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'F$(10,12)
':
check_vname ret1 '$(10,12)
':
check_variable: '$(10,12)
'
check_variable: Ary test '(10,12)
'
check_literal:lit='(' idx=8 '(10,12)
'
check_literal:After drop space:'(' idx=8 '(10,12)
'
check_literal:After while():10,12)

check_literal:ret1 
check_variable: is array
check_expression: '10,12)
'
check_eitem: '10,12)
'
check_operator: 10,12)

check_literal:lit=',' idx=9 '10,12)
'
check_literal:After drop space:',' idx=9 '10,12)
'
  ',' != '1'
check_literal: ret0
check_operator:ret0
check_function: '10,12)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=9 '10,12)
'
    dropping space
check_literal:After drop space:'%' idx=9 '10,12)
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=9 '10,12)
'
    dropping space
check_literal:After drop space:'"' idx=9 '10,12)
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '10,12)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: ',12)
'
check_operator: ,12)

check_literal:lit=',' idx=11 ',12)
'
check_literal:After drop space:',' idx=11 ',12)
'
check_literal:After while():12)

check_literal:ret1 
scan_literal:lit=',' 'F$(10,12)
'
scan_literal:After drop space:F$(10,12)

scan_literal:while loop:F$(10,12)

check_function: ',12)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=11 ',12)
'
    dropping space
check_literal:After drop space:'%' idx=11 ',12)
'
  '%' != ','
check_literal: ret0
check_literal:lit=' "' idx=11 ',12)
'
    dropping space
check_literal:After drop space:'"' idx=11 ',12)
'
  '"' != ','
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ',12)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname ',12)
':
check_vname ret0 ',12)
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=11 ',12)
'
    dropping space
check_literal:After drop space:'(' idx=11 ',12)
'
  '(' != ','
check_literal: ret0
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 ',12)
'
check_literal:lit=' ,' idx=11 ',12)
'
    dropping space
check_literal:After drop space:',' idx=11 ',12)
'
check_literal:After while():12)

check_literal:ret1 
check_expression: '12)
'
check_eitem: '12)
'
check_operator: 12)

check_literal:lit=',' idx=12 '12)
'
check_literal:After drop space:',' idx=12 '12)
'
  ',' != '1'
check_literal: ret0
check_operator:ret0
check_function: '12)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=12 '12)
'
    dropping space
check_literal:After drop space:'%' idx=12 '12)
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=12 '12)
'
    dropping space
check_literal:After drop space:'"' idx=12 '12)
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '12)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: ')
'
check_operator: )

check_literal:lit=',' idx=14 ')
'
check_literal:After drop space:',' idx=14 ')
'
  ',' != ')'
check_literal: ret0
check_operator:ret0
check_function: ')
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=14 ')
'
    dropping space
check_literal:After drop space:'%' idx=14 ')
'
  '%' != ')'
check_literal: ret0
check_literal:lit=' "' idx=14 ')
'
    dropping space
check_literal:After drop space:'"' idx=14 ')
'
  '"' != ')'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ')
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname ')
':
check_vname ret0 ')
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=14 ')
'
    dropping space
check_literal:After drop space:'(' idx=14 ')
'
  '(' != ')'
check_literal: ret0
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 ')
'
check_literal:lit=' )' idx=14 ')
'
    dropping space
check_literal:After drop space:')' idx=14 ')
'
check_literal:After while():

check_literal:ret1 
check_variable:ret1 
scan_variable:
scan_vname: 'F$(10,12)
'
scan_vname: ret1 'F'
scan_variable: '$(10,12)
' vname='F'
scan_variable: Ary test '(10,12)
'
check_literal:lit='(' idx=8 '(10,12)
'
check_literal:After drop space:'(' idx=8 '(10,12)
'
check_literal:After while():10,12)

check_literal:ret1 
scan_literal:lit='(' '(10,12)
'
scan_literal:After drop space:(10,12)

scan_literal:while loop:(10,12)

scan_variable: is array
scan_expression: '10,12)
'
check_eitem: '10,12)
'
check_operator: 10,12)

check_literal:lit=',' idx=9 '10,12)
'
check_literal:After drop space:',' idx=9 '10,12)
'
  ',' != '1'
check_literal: ret0
check_operator:ret0
check_function: '10,12)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=9 '10,12)
'
    dropping space
check_literal:After drop space:'%' idx=9 '10,12)
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=9 '10,12)
'
    dropping space
check_literal:After drop space:'"' idx=9 '10,12)
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '10,12)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
scan_eitem:
check_operator: 10,12)

check_literal:lit=',' idx=9 '10,12)
'
check_literal:After drop space:',' idx=9 '10,12)
'
  ',' != '1'
check_literal: ret0
check_operator:ret0
check_function: '10,12)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=9 '10,12)
'
    dropping space
check_literal:After drop space:'%' idx=9 '10,12)
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=9 '10,12)
'
    dropping space
check_literal:After drop space:'"' idx=9 '10,12)
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '10,12)
'
check_integer:ret1
check_number: ret1
scan_atom:
check_literal:lit=' %' idx=9 '10,12)
'
    dropping space
check_literal:After drop space:'%' idx=9 '10,12)
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=9 '10,12)
'
    dropping space
check_literal:After drop space:'"' idx=9 '10,12)
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '10,12)
'
check_integer:ret1
check_number: ret1
scan_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '10,12)
'
check_integer:ret1
scan_integer:
scan_integer:ret0
check_eitem: ',12)
'
check_operator: ,12)

check_literal:lit=',' idx=11 ',12)
'
check_literal:After drop space:',' idx=11 ',12)
'
check_literal:After while():12)

check_literal:ret1 
scan_literal:lit=',' ',12)
'
scan_literal:After drop space:,12)

scan_literal:while loop:,12)

check_eitem:ret1
scan_eitem:
check_operator: 12)

check_literal:lit=',' idx=12 '12)
'
check_literal:After drop space:',' idx=12 '12)
'
  ',' != '1'
check_literal: ret0
check_operator:ret0
check_function: '12)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=12 '12)
'
    dropping space
check_literal:After drop space:'%' idx=12 '12)
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=12 '12)
'
    dropping space
check_literal:After drop space:'"' idx=12 '12)
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '12)
'
check_integer:ret1
check_number: ret1
scan_atom:
check_literal:lit=' %' idx=12 '12)
'
    dropping space
check_literal:After drop space:'%' idx=12 '12)
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=12 '12)
'
    dropping space
check_literal:After drop space:'"' idx=12 '12)
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '12)
'
check_integer:ret1
check_number: ret1
scan_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '12)
'
check_integer:ret1
scan_integer:
scan_integer:ret0
check_eitem: ')
'
check_operator: )

check_literal:lit=',' idx=14 ')
'
check_literal:After drop space:',' idx=14 ')
'
  ',' != ')'
check_literal: ret0
check_operator:ret0
check_function: ')
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=14 ')
'
    dropping space
check_literal:After drop space:'%' idx=14 ')
'
  '%' != ')'
check_literal: ret0
check_literal:lit=' "' idx=14 ')
'
    dropping space
check_literal:After drop space:'"' idx=14 ')
'
  '"' != ')'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ')
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname ')
':
check_vname ret0 ')
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=14 ')
'
    dropping space
check_literal:After drop space:'(' idx=14 ')
'
  '(' != ')'
check_literal: ret0
check_sub_expr: ret0
check_eitem:ret0
scan_expression: ret1 ')
'
check_literal:lit=' ,' idx=14 ')
'
    dropping space
check_literal:After drop space:',' idx=14 ')
'
  ',' != ')'
check_literal: ret0
scan_literal:lit=' )' ')
'
scan_literal:After drop space:)

scan_literal:while loop:)

scan_variable:ret1 vname='F$' is str:1 int:0 flt:0 ary:1
VAR INFO: '                F$' gbl:0 ref:1 int:0 flt:0 str:1 ary:1 max_str:0 max_ary:0 num_ind:1
check_eitem: '
'
check_operator: 

check_literal:lit=',' idx=16 ''
check_literal:After drop space:',' idx=16 ''
check_literal  ret0 Empty test string
check_operator:ret0
check_function: ''
check_function: ret0
check_atom:
check_literal:lit=' %' idx=15 '
'
    dropping space
check_literal:After drop space:'%' idx=16 ''
check_literal  ret0 Empty test string
check_literal:lit=' "' idx=15 '
'
    dropping space
check_literal:After drop space:'"' idx=16 ''
check_literal  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ''
check_integer:ret0
check_number: ret0
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=15 '
'
    dropping space
check_literal:After drop space:'(' idx=16 ''
check_literal  ret0 Empty test string
check_sub_expr: ret0
check_eitem:ret0
scan_expression: ret1 '
'
scan_command: ret1 =>'PRINT'
check_literal:lit=':' idx=16 ''
check_literal:After drop space:':' idx=16 ''
check_literal  ret0 Empty test string
cline scanned OK
=======================cline==========================
==UDG 1,2,3,4,5,6,7,8,9
==
scan_cline:
check_line:
check_assignment:
check_variable:
check_vname 'UDG 1,2,3,4,5,6,7,8,9
':
check_vname ret1 ' 1,2,3,4,5,6,7,8,9
':
check_variable: ' 1,2,3,4,5,6,7,8,9
'
check_variable: Ary test ' 1,2,3,4,5,6,7,8,9
'
check_literal:lit='(' idx=3 ' 1,2,3,4,5,6,7,8,9
'
check_literal:After drop space:'(' idx=3 ' 1,2,3,4,5,6,7,8,9
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variable:ret1 
check_literal:lit=' =' idx=3 ' 1,2,3,4,5,6,7,8,9
'
    dropping space
check_literal:After drop space:'=' idx=4 '1,2,3,4,5,6,7,8,9
'
  '=' != '1'
check_literal: ret0
check_assignment:ret0
check_proc_call:
check_textlabel: 'UDG 1,2,3,4,5,6,7,8,9
'
check_textlabel:ret0
check_proc_call:ret0
check_command:
check_command: ret1 found=> 'UDG'
check_line:ret1
scan_cline: Checked len=19, ' 1,2,3,4,5,6,7,8,9
'
scan_line:
check_assignment:
check_variable:
check_vname 'UDG 1,2,3,4,5,6,7,8,9
':
check_vname ret1 ' 1,2,3,4,5,6,7,8,9
':
check_variable: ' 1,2,3,4,5,6,7,8,9
'
check_variable: Ary test ' 1,2,3,4,5,6,7,8,9
'
check_literal:lit='(' idx=3 ' 1,2,3,4,5,6,7,8,9
'
check_literal:After drop space:'(' idx=3 ' 1,2,3,4,5,6,7,8,9
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variable:ret1 
check_literal:lit=' =' idx=3 ' 1,2,3,4,5,6,7,8,9
'
    dropping space
check_literal:After drop space:'=' idx=4 '1,2,3,4,5,6,7,8,9
'
  '=' != '1'
check_literal: ret0
check_assignment:ret0
check_proc_call:
check_textlabel: 'UDG 1,2,3,4,5,6,7,8,9
'
check_textlabel:ret0
check_proc_call:ret0
check_command:
check_command: ret1 found=> 'UDG'
scan_line:check_command: 
scan_command:
scan_expression: ' 1,2,3,4,5,6,7,8,9
'
check_eitem: '1,2,3,4,5,6,7,8,9
'
check_operator: 1,2,3,4,5,6,7,8,9

check_literal:lit=',' idx=4 '1,2,3,4,5,6,7,8,9
'
check_literal:After drop space:',' idx=4 '1,2,3,4,5,6,7,8,9
'
  ',' != '1'
check_literal: ret0
check_operator:ret0
check_function: '1,2,3,4,5,6,7,8,9
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=4 '1,2,3,4,5,6,7,8,9
'
    dropping space
check_literal:After drop space:'%' idx=4 '1,2,3,4,5,6,7,8,9
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=4 '1,2,3,4,5,6,7,8,9
'
    dropping space
check_literal:After drop space:'"' idx=4 '1,2,3,4,5,6,7,8,9
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '1,2,3,4,5,6,7,8,9
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
scan_eitem:
check_operator: 1,2,3,4,5,6,7,8,9

check_literal:lit=',' idx=4 '1,2,3,4,5,6,7,8,9
'
check_literal:After drop space:',' idx=4 '1,2,3,4,5,6,7,8,9
'
  ',' != '1'
check_literal: ret0
check_operator:ret0
check_function: '1,2,3,4,5,6,7,8,9
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=4 '1,2,3,4,5,6,7,8,9
'
    dropping space
check_literal:After drop space:'%' idx=4 '1,2,3,4,5,6,7,8,9
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=4 '1,2,3,4,5,6,7,8,9
'
    dropping space
check_literal:After drop space:'"' idx=4 '1,2,3,4,5,6,7,8,9
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '1,2,3,4,5,6,7,8,9
'
check_integer:ret1
check_number: ret1
scan_atom:
check_literal:lit=' %' idx=4 '1,2,3,4,5,6,7,8,9
'
    dropping space
check_literal:After drop space:'%' idx=4 '1,2,3,4,5,6,7,8,9
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=4 '1,2,3,4,5,6,7,8,9
'
    dropping space
check_literal:After drop space:'"' idx=4 '1,2,3,4,5,6,7,8,9
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '1,2,3,4,5,6,7,8,9
'
check_integer:ret1
check_number: ret1
scan_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '1,2,3,4,5,6,7,8,9
'
check_integer:ret1
scan_integer:
scan_integer:ret0
check_eitem: ',2,3,4,5,6,7,8,9
'
check_operator: ,2,3,4,5,6,7,8,9

check_literal:lit=',' idx=5 ',2,3,4,5,6,7,8,9
'
check_literal:After drop space:',' idx=5 ',2,3,4,5,6,7,8,9
'
check_literal:After while():2,3,4,5,6,7,8,9

check_literal:ret1 
scan_literal:lit=',' ',2,3,4,5,6,7,8,9
'
scan_literal:After drop space:,2,3,4,5,6,7,8,9

scan_literal:while loop:,2,3,4,5,6,7,8,9

check_eitem:ret1
scan_eitem:
check_operator: 2,3,4,5,6,7,8,9

check_literal:lit=',' idx=6 '2,3,4,5,6,7,8,9
'
check_literal:After drop space:',' idx=6 '2,3,4,5,6,7,8,9
'
  ',' != '2'
check_literal: ret0
check_operator:ret0
check_function: '2,3,4,5,6,7,8,9
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=6 '2,3,4,5,6,7,8,9
'
    dropping space
check_literal:After drop space:'%' idx=6 '2,3,4,5,6,7,8,9
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=6 '2,3,4,5,6,7,8,9
'
    dropping space
check_literal:After drop space:'"' idx=6 '2,3,4,5,6,7,8,9
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2,3,4,5,6,7,8,9
'
check_integer:ret1
check_number: ret1
scan_atom:
check_literal:lit=' %' idx=6 '2,3,4,5,6,7,8,9
'
    dropping space
check_literal:After drop space:'%' idx=6 '2,3,4,5,6,7,8,9
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=6 '2,3,4,5,6,7,8,9
'
    dropping space
check_literal:After drop space:'"' idx=6 '2,3,4,5,6,7,8,9
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2,3,4,5,6,7,8,9
'
check_integer:ret1
check_number: ret1
scan_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2,3,4,5,6,7,8,9
'
check_integer:ret1
scan_integer:
scan_integer:ret0
check_eitem: ',3,4,5,6,7,8,9
'
check_operator: ,3,4,5,6,7,8,9

check_literal:lit=',' idx=7 ',3,4,5,6,7,8,9
'
check_literal:After drop space:',' idx=7 ',3,4,5,6,7,8,9
'
check_literal:After while():3,4,5,6,7,8,9

check_literal:ret1 
scan_literal:lit=',' ',3,4,5,6,7,8,9
'
scan_literal:After drop space:,3,4,5,6,7,8,9

scan_literal:while loop:,3,4,5,6,7,8,9

check_eitem:ret1
scan_eitem:
check_operator: 3,4,5,6,7,8,9

check_literal:lit=',' idx=8 '3,4,5,6,7,8,9
'
check_literal:After drop space:',' idx=8 '3,4,5,6,7,8,9
'
  ',' != '3'
check_literal: ret0
check_operator:ret0
check_function: '3,4,5,6,7,8,9
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=8 '3,4,5,6,7,8,9
'
    dropping space
check_literal:After drop space:'%' idx=8 '3,4,5,6,7,8,9
'
  '%' != '3'
check_literal: ret0
check_literal:lit=' "' idx=8 '3,4,5,6,7,8,9
'
    dropping space
check_literal:After drop space:'"' idx=8 '3,4,5,6,7,8,9
'
  '"' != '3'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '3,4,5,6,7,8,9
'
check_integer:ret1
check_number: ret1
scan_atom:
check_literal:lit=' %' idx=8 '3,4,5,6,7,8,9
'
    dropping space
check_literal:After drop space:'%' idx=8 '3,4,5,6,7,8,9
'
  '%' != '3'
check_literal: ret0
check_literal:lit=' "' idx=8 '3,4,5,6,7,8,9
'
    dropping space
check_literal:After drop space:'"' idx=8 '3,4,5,6,7,8,9
'
  '"' != '3'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '3,4,5,6,7,8,9
'
check_integer:ret1
check_number: ret1
scan_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '3,4,5,6,7,8,9
'
check_integer:ret1
scan_integer:
scan_integer:ret0
check_eitem: ',4,5,6,7,8,9
'
check_operator: ,4,5,6,7,8,9

check_literal:lit=',' idx=9 ',4,5,6,7,8,9
'
check_literal:After drop space:',' idx=9 ',4,5,6,7,8,9
'
check_literal:After while():4,5,6,7,8,9

check_literal:ret1 
scan_literal:lit=',' ',4,5,6,7,8,9
'
scan_literal:After drop space:,4,5,6,7,8,9

scan_literal:while loop:,4,5,6,7,8,9

check_eitem:ret1
scan_eitem:
check_operator: 4,5,6,7,8,9

check_literal:lit=',' idx=10 '4,5,6,7,8,9
'
check_literal:After drop space:',' idx=10 '4,5,6,7,8,9
'
  ',' != '4'
check_literal: ret0
check_operator:ret0
check_function: '4,5,6,7,8,9
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=10 '4,5,6,7,8,9
'
    dropping space
check_literal:After drop space:'%' idx=10 '4,5,6,7,8,9
'
  '%' != '4'
check_literal: ret0
check_literal:lit=' "' idx=10 '4,5,6,7,8,9
'
    dropping space
check_literal:After drop space:'"' idx=10 '4,5,6,7,8,9
'
  '"' != '4'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '4,5,6,7,8,9
'
check_integer:ret1
check_number: ret1
scan_atom:
check_literal:lit=' %' idx=10 '4,5,6,7,8,9
'
    dropping space
check_literal:After drop space:'%' idx=10 '4,5,6,7,8,9
'
  '%' != '4'
check_literal: ret0
check_literal:lit=' "' idx=10 '4,5,6,7,8,9
'
    dropping space
check_literal:After drop space:'"' idx=10 '4,5,6,7,8,9
'
  '"' != '4'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '4,5,6,7,8,9
'
check_integer:ret1
check_number: ret1
scan_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '4,5,6,7,8,9
'
check_integer:ret1
scan_integer:
scan_integer:ret0
check_eitem: ',5,6,7,8,9
'
check_operator: ,5,6,7,8,9

check_literal:lit=',' idx=11 ',5,6,7,8,9
'
check_literal:After drop space:',' idx=11 ',5,6,7,8,9
'
check_literal:After while():5,6,7,8,9

check_literal:ret1 
scan_literal:lit=',' ',5,6,7,8,9
'
scan_literal:After drop space:,5,6,7,8,9

scan_literal:while loop:,5,6,7,8,9

check_eitem:ret1
scan_eitem:
check_operator: 5,6,7,8,9

check_literal:lit=',' idx=12 '5,6,7,8,9
'
check_literal:After drop space:',' idx=12 '5,6,7,8,9
'
  ',' != '5'
check_literal: ret0
check_operator:ret0
check_function: '5,6,7,8,9
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=12 '5,6,7,8,9
'
    dropping space
check_literal:After drop space:'%' idx=12 '5,6,7,8,9
'
  '%' != '5'
check_literal: ret0
check_literal:lit=' "' idx=12 '5,6,7,8,9
'
    dropping space
check_literal:After drop space:'"' idx=12 '5,6,7,8,9
'
  '"' != '5'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '5,6,7,8,9
'
check_integer:ret1
check_number: ret1
scan_atom:
check_literal:lit=' %' idx=12 '5,6,7,8,9
'
    dropping space
check_literal:After drop space:'%' idx=12 '5,6,7,8,9
'
  '%' != '5'
check_literal: ret0
check_literal:lit=' "' idx=12 '5,6,7,8,9
'
    dropping space
check_literal:After drop space:'"' idx=12 '5,6,7,8,9
'
  '"' != '5'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '5,6,7,8,9
'
check_integer:ret1
check_number: ret1
scan_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '5,6,7,8,9
'
check_integer:ret1
scan_integer:
scan_integer:ret0
check_eitem: ',6,7,8,9
'
check_operator: ,6,7,8,9

check_literal:lit=',' idx=13 ',6,7,8,9
'
check_literal:After drop space:',' idx=13 ',6,7,8,9
'
check_literal:After while():6,7,8,9

check_literal:ret1 
scan_literal:lit=',' ',6,7,8,9
'
scan_literal:After drop space:,6,7,8,9

scan_literal:while loop:,6,7,8,9

check_eitem:ret1
scan_eitem:
check_operator: 6,7,8,9

check_literal:lit=',' idx=14 '6,7,8,9
'
check_literal:After drop space:',' idx=14 '6,7,8,9
'
  ',' != '6'
check_literal: ret0
check_operator:ret0
check_function: '6,7,8,9
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=14 '6,7,8,9
'
    dropping space
check_literal:After drop space:'%' idx=14 '6,7,8,9
'
  '%' != '6'
check_literal: ret0
check_literal:lit=' "' idx=14 '6,7,8,9
'
    dropping space
check_literal:After drop space:'"' idx=14 '6,7,8,9
'
  '"' != '6'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '6,7,8,9
'
check_integer:ret1
check_number: ret1
scan_atom:
check_literal:lit=' %' idx=14 '6,7,8,9
'
    dropping space
check_literal:After drop space:'%' idx=14 '6,7,8,9
'
  '%' != '6'
check_literal: ret0
check_literal:lit=' "' idx=14 '6,7,8,9
'
    dropping space
check_literal:After drop space:'"' idx=14 '6,7,8,9
'
  '"' != '6'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '6,7,8,9
'
check_integer:ret1
check_number: ret1
scan_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '6,7,8,9
'
check_integer:ret1
scan_integer:
scan_integer:ret0
check_eitem: ',7,8,9
'
check_operator: ,7,8,9

check_literal:lit=',' idx=15 ',7,8,9
'
check_literal:After drop space:',' idx=15 ',7,8,9
'
check_literal:After while():7,8,9

check_literal:ret1 
scan_literal:lit=',' ',7,8,9
'
scan_literal:After drop space:,7,8,9

scan_literal:while loop:,7,8,9

check_eitem:ret1
scan_eitem:
check_operator: 7,8,9

check_literal:lit=',' idx=16 '7,8,9
'
check_literal:After drop space:',' idx=16 '7,8,9
'
  ',' != '7'
check_literal: ret0
check_operator:ret0
check_function: '7,8,9
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=16 '7,8,9
'
    dropping space
check_literal:After drop space:'%' idx=16 '7,8,9
'
  '%' != '7'
check_literal: ret0
check_literal:lit=' "' idx=16 '7,8,9
'
    dropping space
check_literal:After drop space:'"' idx=16 '7,8,9
'
  '"' != '7'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '7,8,9
'
check_integer:ret1
check_number: ret1
scan_atom:
check_literal:lit=' %' idx=16 '7,8,9
'
    dropping space
check_literal:After drop space:'%' idx=16 '7,8,9
'
  '%' != '7'
check_literal: ret0
check_literal:lit=' "' idx=16 '7,8,9
'
    dropping space
check_literal:After drop space:'"' idx=16 '7,8,9
'
  '"' != '7'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '7,8,9
'
check_integer:ret1
check_number: ret1
scan_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '7,8,9
'
check_integer:ret1
scan_integer:
scan_integer:ret0
check_eitem: ',8,9
'
check_operator: ,8,9

check_literal:lit=',' idx=17 ',8,9
'
check_literal:After drop space:',' idx=17 ',8,9
'
check_literal:After while():8,9

check_literal:ret1 
scan_literal:lit=',' ',8,9
'
scan_literal:After drop space:,8,9

scan_literal:while loop:,8,9

check_eitem:ret1
scan_eitem:
check_operator: 8,9

check_literal:lit=',' idx=18 '8,9
'
check_literal:After drop space:',' idx=18 '8,9
'
  ',' != '8'
check_literal: ret0
check_operator:ret0
check_function: '8,9
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=18 '8,9
'
    dropping space
check_literal:After drop space:'%' idx=18 '8,9
'
  '%' != '8'
check_literal: ret0
check_literal:lit=' "' idx=18 '8,9
'
    dropping space
check_literal:After drop space:'"' idx=18 '8,9
'
  '"' != '8'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '8,9
'
check_integer:ret1
check_number: ret1
scan_atom:
check_literal:lit=' %' idx=18 '8,9
'
    dropping space
check_literal:After drop space:'%' idx=18 '8,9
'
  '%' != '8'
check_literal: ret0
check_literal:lit=' "' idx=18 '8,9
'
    dropping space
check_literal:After drop space:'"' idx=18 '8,9
'
  '"' != '8'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '8,9
'
check_integer:ret1
check_number: ret1
scan_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '8,9
'
check_integer:ret1
scan_integer:
scan_integer:ret0
check_eitem: ',9
'
check_operator: ,9

check_literal:lit=',' idx=19 ',9
'
check_literal:After drop space:',' idx=19 ',9
'
check_literal:After while():9

check_literal:ret1 
scan_literal:lit=',' ',9
'
scan_literal:After drop space:,9

scan_literal:while loop:,9

check_eitem:ret1
scan_eitem:
check_operator: 9

check_literal:lit=',' idx=20 '9
'
check_literal:After drop space:',' idx=20 '9
'
  ',' != '9'
check_literal: ret0
check_operator:ret0
check_function: '9
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=20 '9
'
    dropping space
check_literal:After drop space:'%' idx=20 '9
'
  '%' != '9'
check_literal: ret0
check_literal:lit=' "' idx=20 '9
'
    dropping space
check_literal:After drop space:'"' idx=20 '9
'
  '"' != '9'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '9
'
check_integer:ret1
check_number: ret1
scan_atom:
check_literal:lit=' %' idx=20 '9
'
    dropping space
check_literal:After drop space:'%' idx=20 '9
'
  '%' != '9'
check_literal: ret0
check_literal:lit=' "' idx=20 '9
'
    dropping space
check_literal:After drop space:'"' idx=20 '9
'
  '"' != '9'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '9
'
check_integer:ret1
check_number: ret1
scan_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '9
'
check_integer:ret1
scan_integer:
scan_integer:ret0
check_eitem: ''
check_operator: 
check_literal:lit=',' idx=22 ''
check_literal:After drop space:',' idx=22 ''
check_literal  ret0 Empty test string
check_operator:ret0
check_function: ''
check_function: ret0
check_atom:
check_literal:lit=' %' idx=22 ''
    dropping space
check_literal:After drop space:'%' idx=22 ''
check_literal  ret0 Empty test string
check_literal:lit=' "' idx=22 ''
    dropping space
check_literal:After drop space:'"' idx=22 ''
check_literal  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ''
check_integer:ret0
check_number: ret0
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=22 ''
    dropping space
check_literal:After drop space:'(' idx=22 ''
check_literal  ret0 Empty test string
check_sub_expr: ret0
check_eitem:ret0
scan_expression: ret1 ''
scan_command: ret1 =>'UDG'
check_literal:lit=':' idx=22 ''
check_literal:After drop space:':' idx=22 ''
check_literal  ret0 Empty test string
cline scanned OK
=======================cline==========================
==UDG(1,2,3,4,5,6,7,8,9)
==
scan_cline:
check_line:
check_assignment:
check_variable:
check_vname 'UDG(1,2,3,4,5,6,7,8,9)
':
check_vname ret1 '(1,2,3,4,5,6,7,8,9)
':
check_variable: '(1,2,3,4,5,6,7,8,9)
'
check_variable: Ary test '(1,2,3,4,5,6,7,8,9)
'
check_literal:lit='(' idx=3 '(1,2,3,4,5,6,7,8,9)
'
check_literal:After drop space:'(' idx=3 '(1,2,3,4,5,6,7,8,9)
'
check_literal:After while():1,2,3,4,5,6,7,8,9)

check_literal:ret1 
check_variable: is array
check_expression: '1,2,3,4,5,6,7,8,9)
'
check_eitem: '1,2,3,4,5,6,7,8,9)
'
check_operator: 1,2,3,4,5,6,7,8,9)

check_literal:lit=',' idx=4 '1,2,3,4,5,6,7,8,9)
'
check_literal:After drop space:',' idx=4 '1,2,3,4,5,6,7,8,9)
'
  ',' != '1'
check_literal: ret0
check_operator:ret0
check_function: '1,2,3,4,5,6,7,8,9)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=4 '1,2,3,4,5,6,7,8,9)
'
    dropping space
check_literal:After drop space:'%' idx=4 '1,2,3,4,5,6,7,8,9)
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=4 '1,2,3,4,5,6,7,8,9)
'
    dropping space
check_literal:After drop space:'"' idx=4 '1,2,3,4,5,6,7,8,9)
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '1,2,3,4,5,6,7,8,9)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: ',2,3,4,5,6,7,8,9)
'
check_operator: ,2,3,4,5,6,7,8,9)

check_literal:lit=',' idx=5 ',2,3,4,5,6,7,8,9)
'
check_literal:After drop space:',' idx=5 ',2,3,4,5,6,7,8,9)
'
check_literal:After while():2,3,4,5,6,7,8,9)

check_literal:ret1 
scan_literal:lit=',' 'UDG(1,2,3,4,5,6,7,8,9)
'
scan_literal:After drop space:UDG(1,2,3,4,5,6,7,8,9)

scan_literal:while loop:UDG(1,2,3,4,5,6,7,8,9)

check_function: ',2,3,4,5,6,7,8,9)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=5 ',2,3,4,5,6,7,8,9)
'
    dropping space
check_literal:After drop space:'%' idx=5 ',2,3,4,5,6,7,8,9)
'
  '%' != ','
check_literal: ret0
check_literal:lit=' "' idx=5 ',2,3,4,5,6,7,8,9)
'
    dropping space
check_literal:After drop space:'"' idx=5 ',2,3,4,5,6,7,8,9)
'
  '"' != ','
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ',2,3,4,5,6,7,8,9)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname ',2,3,4,5,6,7,8,9)
':
check_vname ret0 ',2,3,4,5,6,7,8,9)
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=5 ',2,3,4,5,6,7,8,9)
'
    dropping space
check_literal:After drop space:'(' idx=5 ',2,3,4,5,6,7,8,9)
'
  '(' != ','
check_literal: ret0
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 ',2,3,4,5,6,7,8,9)
'
check_literal:lit=' ,' idx=5 ',2,3,4,5,6,7,8,9)
'
    dropping space
check_literal:After drop space:',' idx=5 ',2,3,4,5,6,7,8,9)
'
check_literal:After while():2,3,4,5,6,7,8,9)

check_literal:ret1 
check_variable:ret0 
check_assignment:ret0
check_proc_call:
check_textlabel: 'UDG(1,2,3,4,5,6,7,8,9)
'
check_textlabel:ret0
check_proc_call:ret0
check_command:
check_command: ret1 found=> 'UDG'
check_line:ret1
scan_cline: Checked len=20, '(1,2,3,4,5,6,7,8,9)
'
scan_line:
check_assignment:
check_variable:
check_vname 'UDG(1,2,3,4,5,6,7,8,9)
':
check_vname ret1 '(1,2,3,4,5,6,7,8,9)
':
check_variable: '(1,2,3,4,5,6,7,8,9)
'
check_variable: Ary test '(1,2,3,4,5,6,7,8,9)
'
check_literal:lit='(' idx=3 '(1,2,3,4,5,6,7,8,9)
'
check_literal:After drop space:'(' idx=3 '(1,2,3,4,5,6,7,8,9)
'
check_literal:After while():1,2,3,4,5,6,7,8,9)

check_literal:ret1 
check_variable: is array
check_expression: '1,2,3,4,5,6,7,8,9)
'
check_eitem: '1,2,3,4,5,6,7,8,9)
'
check_operator: 1,2,3,4,5,6,7,8,9)

check_literal:lit=',' idx=4 '1,2,3,4,5,6,7,8,9)
'
check_literal:After drop space:',' idx=4 '1,2,3,4,5,6,7,8,9)
'
  ',' != '1'
check_literal: ret0
check_operator:ret0
check_function: '1,2,3,4,5,6,7,8,9)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=4 '1,2,3,4,5,6,7,8,9)
'
    dropping space
check_literal:After drop space:'%' idx=4 '1,2,3,4,5,6,7,8,9)
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=4 '1,2,3,4,5,6,7,8,9)
'
    dropping space
check_literal:After drop space:'"' idx=4 '1,2,3,4,5,6,7,8,9)
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '1,2,3,4,5,6,7,8,9)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: ',2,3,4,5,6,7,8,9)
'
check_operator: ,2,3,4,5,6,7,8,9)

check_literal:lit=',' idx=5 ',2,3,4,5,6,7,8,9)
'
check_literal:After drop space:',' idx=5 ',2,3,4,5,6,7,8,9)
'
check_literal:After while():2,3,4,5,6,7,8,9)

check_literal:ret1 
scan_literal:lit=',' 'UDG(1,2,3,4,5,6,7,8,9)
'
scan_literal:After drop space:UDG(1,2,3,4,5,6,7,8,9)

scan_literal:while loop:UDG(1,2,3,4,5,6,7,8,9)

check_function: ',2,3,4,5,6,7,8,9)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=5 ',2,3,4,5,6,7,8,9)
'
    dropping space
check_literal:After drop space:'%' idx=5 ',2,3,4,5,6,7,8,9)
'
  '%' != ','
check_literal: ret0
check_literal:lit=' "' idx=5 ',2,3,4,5,6,7,8,9)
'
    dropping space
check_literal:After drop space:'"' idx=5 ',2,3,4,5,6,7,8,9)
'
  '"' != ','
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ',2,3,4,5,6,7,8,9)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname ',2,3,4,5,6,7,8,9)
':
check_vname ret0 ',2,3,4,5,6,7,8,9)
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=5 ',2,3,4,5,6,7,8,9)
'
    dropping space
check_literal:After drop space:'(' idx=5 ',2,3,4,5,6,7,8,9)
'
  '(' != ','
check_literal: ret0
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 ',2,3,4,5,6,7,8,9)
'
check_literal:lit=' ,' idx=5 ',2,3,4,5,6,7,8,9)
'
    dropping space
check_literal:After drop space:',' idx=5 ',2,3,4,5,6,7,8,9)
'
check_literal:After while():2,3,4,5,6,7,8,9)

check_literal:ret1 
check_variable:ret0 
check_assignment:ret0
check_proc_call:
check_textlabel: 'UDG(1,2,3,4,5,6,7,8,9)
'
check_textlabel:ret0
check_proc_call:ret0
check_command:
check_command: ret1 found=> 'UDG'
scan_line:check_command: 
scan_command:
scan_expression: '(1,2,3,4,5,6,7,8,9)
'
check_eitem: '(1,2,3,4,5,6,7,8,9)
'
check_operator: (1,2,3,4,5,6,7,8,9)

check_literal:lit=',' idx=3 '(1,2,3,4,5,6,7,8,9)
'
check_literal:After drop space:',' idx=3 '(1,2,3,4,5,6,7,8,9)
'
  ',' != '('
check_literal: ret0
check_operator:ret0
check_function: '(1,2,3,4,5,6,7,8,9)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=3 '(1,2,3,4,5,6,7,8,9)
'
    dropping space
check_literal:After drop space:'%' idx=3 '(1,2,3,4,5,6,7,8,9)
'
  '%' != '('
check_literal: ret0
check_literal:lit=' "' idx=3 '(1,2,3,4,5,6,7,8,9)
'
    dropping space
check_literal:After drop space:'"' idx=3 '(1,2,3,4,5,6,7,8,9)
'
  '"' != '('
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: '(1,2,3,4,5,6,7,8,9)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname '(1,2,3,4,5,6,7,8,9)
':
check_vname ret0 '(1,2,3,4,5,6,7,8,9)
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=3 '(1,2,3,4,5,6,7,8,9)
'
    dropping space
check_literal:After drop space:'(' idx=3 '(1,2,3,4,5,6,7,8,9)
'
check_literal:After while():1,2,3,4,5,6,7,8,9)

check_literal:ret1 
check_sub_expr: ret1
check_eitem:ret1
scan_eitem:
check_operator: (1,2,3,4,5,6,7,8,9)

check_literal:lit=',' idx=3 '(1,2,3,4,5,6,7,8,9)
'
check_literal:After drop space:',' idx=3 '(1,2,3,4,5,6,7,8,9)
'
  ',' != '('
check_literal: ret0
check_operator:ret0
check_function: '(1,2,3,4,5,6,7,8,9)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=3 '(1,2,3,4,5,6,7,8,9)
'
    dropping space
check_literal:After drop space:'%' idx=3 '(1,2,3,4,5,6,7,8,9)
'
  '%' != '('
check_literal: ret0
check_literal:lit=' "' idx=3 '(1,2,3,4,5,6,7,8,9)
'
    dropping space
check_literal:After drop space:'"' idx=3 '(1,2,3,4,5,6,7,8,9)
'
  '"' != '('
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: '(1,2,3,4,5,6,7,8,9)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname '(1,2,3,4,5,6,7,8,9)
':
check_vname ret0 '(1,2,3,4,5,6,7,8,9)
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=3 '(1,2,3,4,5,6,7,8,9)
'
    dropping space
check_literal:After drop space:'(' idx=3 '(1,2,3,4,5,6,7,8,9)
'
check_literal:After while():1,2,3,4,5,6,7,8,9)

check_literal:ret1 
check_sub_expr: ret1
scan_sub_expr:
scan_literal:lit=' (' '(1,2,3,4,5,6,7,8,9)
'
scan_literal:After drop space:(1,2,3,4,5,6,7,8,9)

scan_literal:while loop:(1,2,3,4,5,6,7,8,9)

scan_expression: '1,2,3,4,5,6,7,8,9)
'
check_eitem: '1,2,3,4,5,6,7,8,9)
'
check_operator: 1,2,3,4,5,6,7,8,9)

check_literal:lit=',' idx=4 '1,2,3,4,5,6,7,8,9)
'
check_literal:After drop space:',' idx=4 '1,2,3,4,5,6,7,8,9)
'
  ',' != '1'
check_literal: ret0
check_operator:ret0
check_function: '1,2,3,4,5,6,7,8,9)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=4 '1,2,3,4,5,6,7,8,9)
'
    dropping space
check_literal:After drop space:'%' idx=4 '1,2,3,4,5,6,7,8,9)
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=4 '1,2,3,4,5,6,7,8,9)
'
    dropping space
check_literal:After drop space:'"' idx=4 '1,2,3,4,5,6,7,8,9)
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '1,2,3,4,5,6,7,8,9)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
scan_eitem:
check_operator: 1,2,3,4,5,6,7,8,9)

check_literal:lit=',' idx=4 '1,2,3,4,5,6,7,8,9)
'
check_literal:After drop space:',' idx=4 '1,2,3,4,5,6,7,8,9)
'
  ',' != '1'
check_literal: ret0
check_operator:ret0
check_function: '1,2,3,4,5,6,7,8,9)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=4 '1,2,3,4,5,6,7,8,9)
'
    dropping space
check_literal:After drop space:'%' idx=4 '1,2,3,4,5,6,7,8,9)
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=4 '1,2,3,4,5,6,7,8,9)
'
    dropping space
check_literal:After drop space:'"' idx=4 '1,2,3,4,5,6,7,8,9)
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '1,2,3,4,5,6,7,8,9)
'
check_integer:ret1
check_number: ret1
scan_atom:
check_literal:lit=' %' idx=4 '1,2,3,4,5,6,7,8,9)
'
    dropping space
check_literal:After drop space:'%' idx=4 '1,2,3,4,5,6,7,8,9)
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=4 '1,2,3,4,5,6,7,8,9)
'
    dropping space
check_literal:After drop space:'"' idx=4 '1,2,3,4,5,6,7,8,9)
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '1,2,3,4,5,6,7,8,9)
'
check_integer:ret1
check_number: ret1
scan_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '1,2,3,4,5,6,7,8,9)
'
check_integer:ret1
scan_integer:
scan_integer:ret0
check_eitem: ',2,3,4,5,6,7,8,9)
'
check_operator: ,2,3,4,5,6,7,8,9)

check_literal:lit=',' idx=5 ',2,3,4,5,6,7,8,9)
'
check_literal:After drop space:',' idx=5 ',2,3,4,5,6,7,8,9)
'
check_literal:After while():2,3,4,5,6,7,8,9)

check_literal:ret1 
scan_literal:lit=',' ',2,3,4,5,6,7,8,9)
'
scan_literal:After drop space:,2,3,4,5,6,7,8,9)

scan_literal:while loop:,2,3,4,5,6,7,8,9)

check_eitem:ret1
scan_eitem:
check_operator: 2,3,4,5,6,7,8,9)

check_literal:lit=',' idx=6 '2,3,4,5,6,7,8,9)
'
check_literal:After drop space:',' idx=6 '2,3,4,5,6,7,8,9)
'
  ',' != '2'
check_literal: ret0
check_operator:ret0
check_function: '2,3,4,5,6,7,8,9)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=6 '2,3,4,5,6,7,8,9)
'
    dropping space
check_literal:After drop space:'%' idx=6 '2,3,4,5,6,7,8,9)
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=6 '2,3,4,5,6,7,8,9)
'
    dropping space
check_literal:After drop space:'"' idx=6 '2,3,4,5,6,7,8,9)
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2,3,4,5,6,7,8,9)
'
check_integer:ret1
check_number: ret1
scan_atom:
check_literal:lit=' %' idx=6 '2,3,4,5,6,7,8,9)
'
    dropping space
check_literal:After drop space:'%' idx=6 '2,3,4,5,6,7,8,9)
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=6 '2,3,4,5,6,7,8,9)
'
    dropping space
check_literal:After drop space:'"' idx=6 '2,3,4,5,6,7,8,9)
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2,3,4,5,6,7,8,9)
'
check_integer:ret1
check_number: ret1
scan_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2,3,4,5,6,7,8,9)
'
check_integer:ret1
scan_integer:
scan_integer:ret0
check_eitem: ',3,4,5,6,7,8,9)
'
check_operator: ,3,4,5,6,7,8,9)

check_literal:lit=',' idx=7 ',3,4,5,6,7,8,9)
'
check_literal:After drop space:',' idx=7 ',3,4,5,6,7,8,9)
'
check_literal:After while():3,4,5,6,7,8,9)

check_literal:ret1 
scan_literal:lit=',' ',3,4,5,6,7,8,9)
'
scan_literal:After drop space:,3,4,5,6,7,8,9)

scan_literal:while loop:,3,4,5,6,7,8,9)

check_eitem:ret1
scan_eitem:
check_operator: 3,4,5,6,7,8,9)

check_literal:lit=',' idx=8 '3,4,5,6,7,8,9)
'
check_literal:After drop space:',' idx=8 '3,4,5,6,7,8,9)
'
  ',' != '3'
check_literal: ret0
check_operator:ret0
check_function: '3,4,5,6,7,8,9)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=8 '3,4,5,6,7,8,9)
'
    dropping space
check_literal:After drop space:'%' idx=8 '3,4,5,6,7,8,9)
'
  '%' != '3'
check_literal: ret0
check_literal:lit=' "' idx=8 '3,4,5,6,7,8,9)
'
    dropping space
check_literal:After drop space:'"' idx=8 '3,4,5,6,7,8,9)
'
  '"' != '3'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '3,4,5,6,7,8,9)
'
check_integer:ret1
check_number: ret1
scan_atom:
check_literal:lit=' %' idx=8 '3,4,5,6,7,8,9)
'
    dropping space
check_literal:After drop space:'%' idx=8 '3,4,5,6,7,8,9)
'
  '%' != '3'
check_literal: ret0
check_literal:lit=' "' idx=8 '3,4,5,6,7,8,9)
'
    dropping space
check_literal:After drop space:'"' idx=8 '3,4,5,6,7,8,9)
'
  '"' != '3'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '3,4,5,6,7,8,9)
'
check_integer:ret1
check_number: ret1
scan_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '3,4,5,6,7,8,9)
'
check_integer:ret1
scan_integer:
scan_integer:ret0
check_eitem: ',4,5,6,7,8,9)
'
check_operator: ,4,5,6,7,8,9)

check_literal:lit=',' idx=9 ',4,5,6,7,8,9)
'
check_literal:After drop space:',' idx=9 ',4,5,6,7,8,9)
'
check_literal:After while():4,5,6,7,8,9)

check_literal:ret1 
scan_literal:lit=',' ',4,5,6,7,8,9)
'
scan_literal:After drop space:,4,5,6,7,8,9)

scan_literal:while loop:,4,5,6,7,8,9)

check_eitem:ret1
scan_eitem:
check_operator: 4,5,6,7,8,9)

check_literal:lit=',' idx=10 '4,5,6,7,8,9)
'
check_literal:After drop space:',' idx=10 '4,5,6,7,8,9)
'
  ',' != '4'
check_literal: ret0
check_operator:ret0
check_function: '4,5,6,7,8,9)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=10 '4,5,6,7,8,9)
'
    dropping space
check_literal:After drop space:'%' idx=10 '4,5,6,7,8,9)
'
  '%' != '4'
check_literal: ret0
check_literal:lit=' "' idx=10 '4,5,6,7,8,9)
'
    dropping space
check_literal:After drop space:'"' idx=10 '4,5,6,7,8,9)
'
  '"' != '4'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '4,5,6,7,8,9)
'
check_integer:ret1
check_number: ret1
scan_atom:
check_literal:lit=' %' idx=10 '4,5,6,7,8,9)
'
    dropping space
check_literal:After drop space:'%' idx=10 '4,5,6,7,8,9)
'
  '%' != '4'
check_literal: ret0
check_literal:lit=' "' idx=10 '4,5,6,7,8,9)
'
    dropping space
check_literal:After drop space:'"' idx=10 '4,5,6,7,8,9)
'
  '"' != '4'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '4,5,6,7,8,9)
'
check_integer:ret1
check_number: ret1
scan_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '4,5,6,7,8,9)
'
check_integer:ret1
scan_integer:
scan_integer:ret0
check_eitem: ',5,6,7,8,9)
'
check_operator: ,5,6,7,8,9)

check_literal:lit=',' idx=11 ',5,6,7,8,9)
'
check_literal:After drop space:',' idx=11 ',5,6,7,8,9)
'
check_literal:After while():5,6,7,8,9)

check_literal:ret1 
scan_literal:lit=',' ',5,6,7,8,9)
'
scan_literal:After drop space:,5,6,7,8,9)

scan_literal:while loop:,5,6,7,8,9)

check_eitem:ret1
scan_eitem:
check_operator: 5,6,7,8,9)

check_literal:lit=',' idx=12 '5,6,7,8,9)
'
check_literal:After drop space:',' idx=12 '5,6,7,8,9)
'
  ',' != '5'
check_literal: ret0
check_operator:ret0
check_function: '5,6,7,8,9)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=12 '5,6,7,8,9)
'
    dropping space
check_literal:After drop space:'%' idx=12 '5,6,7,8,9)
'
  '%' != '5'
check_literal: ret0
check_literal:lit=' "' idx=12 '5,6,7,8,9)
'
    dropping space
check_literal:After drop space:'"' idx=12 '5,6,7,8,9)
'
  '"' != '5'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '5,6,7,8,9)
'
check_integer:ret1
check_number: ret1
scan_atom:
check_literal:lit=' %' idx=12 '5,6,7,8,9)
'
    dropping space
check_literal:After drop space:'%' idx=12 '5,6,7,8,9)
'
  '%' != '5'
check_literal: ret0
check_literal:lit=' "' idx=12 '5,6,7,8,9)
'
    dropping space
check_literal:After drop space:'"' idx=12 '5,6,7,8,9)
'
  '"' != '5'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '5,6,7,8,9)
'
check_integer:ret1
check_number: ret1
scan_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '5,6,7,8,9)
'
check_integer:ret1
scan_integer:
scan_integer:ret0
check_eitem: ',6,7,8,9)
'
check_operator: ,6,7,8,9)

check_literal:lit=',' idx=13 ',6,7,8,9)
'
check_literal:After drop space:',' idx=13 ',6,7,8,9)
'
check_literal:After while():6,7,8,9)

check_literal:ret1 
scan_literal:lit=',' ',6,7,8,9)
'
scan_literal:After drop space:,6,7,8,9)

scan_literal:while loop:,6,7,8,9)

check_eitem:ret1
scan_eitem:
check_operator: 6,7,8,9)

check_literal:lit=',' idx=14 '6,7,8,9)
'
check_literal:After drop space:',' idx=14 '6,7,8,9)
'
  ',' != '6'
check_literal: ret0
check_operator:ret0
check_function: '6,7,8,9)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=14 '6,7,8,9)
'
    dropping space
check_literal:After drop space:'%' idx=14 '6,7,8,9)
'
  '%' != '6'
check_literal: ret0
check_literal:lit=' "' idx=14 '6,7,8,9)
'
    dropping space
check_literal:After drop space:'"' idx=14 '6,7,8,9)
'
  '"' != '6'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '6,7,8,9)
'
check_integer:ret1
check_number: ret1
scan_atom:
check_literal:lit=' %' idx=14 '6,7,8,9)
'
    dropping space
check_literal:After drop space:'%' idx=14 '6,7,8,9)
'
  '%' != '6'
check_literal: ret0
check_literal:lit=' "' idx=14 '6,7,8,9)
'
    dropping space
check_literal:After drop space:'"' idx=14 '6,7,8,9)
'
  '"' != '6'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '6,7,8,9)
'
check_integer:ret1
check_number: ret1
scan_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '6,7,8,9)
'
check_integer:ret1
scan_integer:
scan_integer:ret0
check_eitem: ',7,8,9)
'
check_operator: ,7,8,9)

check_literal:lit=',' idx=15 ',7,8,9)
'
check_literal:After drop space:',' idx=15 ',7,8,9)
'
check_literal:After while():7,8,9)

check_literal:ret1 
scan_literal:lit=',' ',7,8,9)
'
scan_literal:After drop space:,7,8,9)

scan_literal:while loop:,7,8,9)

check_eitem:ret1
scan_eitem:
check_operator: 7,8,9)

check_literal:lit=',' idx=16 '7,8,9)
'
check_literal:After drop space:',' idx=16 '7,8,9)
'
  ',' != '7'
check_literal: ret0
check_operator:ret0
check_function: '7,8,9)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=16 '7,8,9)
'
    dropping space
check_literal:After drop space:'%' idx=16 '7,8,9)
'
  '%' != '7'
check_literal: ret0
check_literal:lit=' "' idx=16 '7,8,9)
'
    dropping space
check_literal:After drop space:'"' idx=16 '7,8,9)
'
  '"' != '7'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '7,8,9)
'
check_integer:ret1
check_number: ret1
scan_atom:
check_literal:lit=' %' idx=16 '7,8,9)
'
    dropping space
check_literal:After drop space:'%' idx=16 '7,8,9)
'
  '%' != '7'
check_literal: ret0
check_literal:lit=' "' idx=16 '7,8,9)
'
    dropping space
check_literal:After drop space:'"' idx=16 '7,8,9)
'
  '"' != '7'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '7,8,9)
'
check_integer:ret1
check_number: ret1
scan_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '7,8,9)
'
check_integer:ret1
scan_integer:
scan_integer:ret0
check_eitem: ',8,9)
'
check_operator: ,8,9)

check_literal:lit=',' idx=17 ',8,9)
'
check_literal:After drop space:',' idx=17 ',8,9)
'
check_literal:After while():8,9)

check_literal:ret1 
scan_literal:lit=',' ',8,9)
'
scan_literal:After drop space:,8,9)

scan_literal:while loop:,8,9)

check_eitem:ret1
scan_eitem:
check_operator: 8,9)

check_literal:lit=',' idx=18 '8,9)
'
check_literal:After drop space:',' idx=18 '8,9)
'
  ',' != '8'
check_literal: ret0
check_operator:ret0
check_function: '8,9)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=18 '8,9)
'
    dropping space
check_literal:After drop space:'%' idx=18 '8,9)
'
  '%' != '8'
check_literal: ret0
check_literal:lit=' "' idx=18 '8,9)
'
    dropping space
check_literal:After drop space:'"' idx=18 '8,9)
'
  '"' != '8'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '8,9)
'
check_integer:ret1
check_number: ret1
scan_atom:
check_literal:lit=' %' idx=18 '8,9)
'
    dropping space
check_literal:After drop space:'%' idx=18 '8,9)
'
  '%' != '8'
check_literal: ret0
check_literal:lit=' "' idx=18 '8,9)
'
    dropping space
check_literal:After drop space:'"' idx=18 '8,9)
'
  '"' != '8'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '8,9)
'
check_integer:ret1
check_number: ret1
scan_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '8,9)
'
check_integer:ret1
scan_integer:
scan_integer:ret0
check_eitem: ',9)
'
check_operator: ,9)

check_literal:lit=',' idx=19 ',9)
'
check_literal:After drop space:',' idx=19 ',9)
'
check_literal:After while():9)

check_literal:ret1 
scan_literal:lit=',' ',9)
'
scan_literal:After drop space:,9)

scan_literal:while loop:,9)

check_eitem:ret1
scan_eitem:
check_operator: 9)

check_literal:lit=',' idx=20 '9)
'
check_literal:After drop space:',' idx=20 '9)
'
  ',' != '9'
check_literal: ret0
check_operator:ret0
check_function: '9)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=20 '9)
'
    dropping space
check_literal:After drop space:'%' idx=20 '9)
'
  '%' != '9'
check_literal: ret0
check_literal:lit=' "' idx=20 '9)
'
    dropping space
check_literal:After drop space:'"' idx=20 '9)
'
  '"' != '9'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '9)
'
check_integer:ret1
check_number: ret1
scan_atom:
check_literal:lit=' %' idx=20 '9)
'
    dropping space
check_literal:After drop space:'%' idx=20 '9)
'
  '%' != '9'
check_literal: ret0
check_literal:lit=' "' idx=20 '9)
'
    dropping space
check_literal:After drop space:'"' idx=20 '9)
'
  '"' != '9'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '9)
'
check_integer:ret1
check_number: ret1
scan_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '9)
'
check_integer:ret1
scan_integer:
scan_integer:ret0
check_eitem: ')
'
check_operator: )

check_literal:lit=',' idx=21 ')
'
check_literal:After drop space:',' idx=21 ')
'
  ',' != ')'
check_literal: ret0
check_operator:ret0
check_function: ')
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=21 ')
'
    dropping space
check_literal:After drop space:'%' idx=21 ')
'
  '%' != ')'
check_literal: ret0
check_literal:lit=' "' idx=21 ')
'
    dropping space
check_literal:After drop space:'"' idx=21 ')
'
  '"' != ')'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ')
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname ')
':
check_vname ret0 ')
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=21 ')
'
    dropping space
check_literal:After drop space:'(' idx=21 ')
'
  '(' != ')'
check_literal: ret0
check_sub_expr: ret0
check_eitem:ret0
scan_expression: ret1 ')
'
scan_literal:lit=' )' ')
'
scan_literal:After drop space:)

scan_literal:while loop:)

scan_sub_expr:ret1
check_eitem: '
'
check_operator: 

check_literal:lit=',' idx=23 ''
check_literal:After drop space:',' idx=23 ''
check_literal  ret0 Empty test string
check_operator:ret0
check_function: ''
check_function: ret0
check_atom:
check_literal:lit=' %' idx=22 '
'
    dropping space
check_literal:After drop space:'%' idx=23 ''
check_literal  ret0 Empty test string
check_literal:lit=' "' idx=22 '
'
    dropping space
check_literal:After drop space:'"' idx=23 ''
check_literal  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ''
check_integer:ret0
check_number: ret0
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=22 '
'
    dropping space
check_literal:After drop space:'(' idx=23 ''
check_literal  ret0 Empty test string
check_sub_expr: ret0
check_eitem:ret0
scan_expression: ret1 '
'
scan_command: ret1 =>'UDG'
check_literal:lit=':' idx=23 ''
check_literal:After drop space:':' idx=23 ''
check_literal  ret0 Empty test string
cline scanned OK
=======================cline==========================
==UDG 1,2.3, 3.4, 5.6, 7, 8, 9, 10
==
scan_cline:
check_line:
check_assignment:
check_variable:
check_vname 'UDG 1,2.3, 3.4, 5.6, 7, 8, 9, 10
':
check_vname ret1 ' 1,2.3, 3.4, 5.6, 7, 8, 9, 10
':
check_variable: ' 1,2.3, 3.4, 5.6, 7, 8, 9, 10
'
check_variable: Ary test ' 1,2.3, 3.4, 5.6, 7, 8, 9, 10
'
check_literal:lit='(' idx=3 ' 1,2.3, 3.4, 5.6, 7, 8, 9, 10
'
check_literal:After drop space:'(' idx=3 ' 1,2.3, 3.4, 5.6, 7, 8, 9, 10
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variable:ret1 
check_literal:lit=' =' idx=3 ' 1,2.3, 3.4, 5.6, 7, 8, 9, 10
'
    dropping space
check_literal:After drop space:'=' idx=4 '1,2.3, 3.4, 5.6, 7, 8, 9, 10
'
  '=' != '1'
check_literal: ret0
check_assignment:ret0
check_proc_call:
check_textlabel: 'UDG 1,2.3, 3.4, 5.6, 7, 8, 9, 10
'
check_textlabel:ret0
check_proc_call:ret0
check_command:
check_command: ret1 found=> 'UDG'
check_line:ret1
scan_cline: Checked len=30, ' 1,2.3, 3.4, 5.6, 7, 8, 9, 10
'
scan_line:
check_assignment:
check_variable:
check_vname 'UDG 1,2.3, 3.4, 5.6, 7, 8, 9, 10
':
check_vname ret1 ' 1,2.3, 3.4, 5.6, 7, 8, 9, 10
':
check_variable: ' 1,2.3, 3.4, 5.6, 7, 8, 9, 10
'
check_variable: Ary test ' 1,2.3, 3.4, 5.6, 7, 8, 9, 10
'
check_literal:lit='(' idx=3 ' 1,2.3, 3.4, 5.6, 7, 8, 9, 10
'
check_literal:After drop space:'(' idx=3 ' 1,2.3, 3.4, 5.6, 7, 8, 9, 10
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variable:ret1 
check_literal:lit=' =' idx=3 ' 1,2.3, 3.4, 5.6, 7, 8, 9, 10
'
    dropping space
check_literal:After drop space:'=' idx=4 '1,2.3, 3.4, 5.6, 7, 8, 9, 10
'
  '=' != '1'
check_literal: ret0
check_assignment:ret0
check_proc_call:
check_textlabel: 'UDG 1,2.3, 3.4, 5.6, 7, 8, 9, 10
'
check_textlabel:ret0
check_proc_call:ret0
check_command:
check_command: ret1 found=> 'UDG'
scan_line:check_command: 
scan_command:
scan_expression: ' 1,2.3, 3.4, 5.6, 7, 8, 9, 10
'
check_eitem: '1,2.3, 3.4, 5.6, 7, 8, 9, 10
'
check_operator: 1,2.3, 3.4, 5.6, 7, 8, 9, 10

check_literal:lit=',' idx=4 '1,2.3, 3.4, 5.6, 7, 8, 9, 10
'
check_literal:After drop space:',' idx=4 '1,2.3, 3.4, 5.6, 7, 8, 9, 10
'
  ',' != '1'
check_literal: ret0
check_operator:ret0
check_function: '1,2.3, 3.4, 5.6, 7, 8, 9, 10
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=4 '1,2.3, 3.4, 5.6, 7, 8, 9, 10
'
    dropping space
check_literal:After drop space:'%' idx=4 '1,2.3, 3.4, 5.6, 7, 8, 9, 10
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=4 '1,2.3, 3.4, 5.6, 7, 8, 9, 10
'
    dropping space
check_literal:After drop space:'"' idx=4 '1,2.3, 3.4, 5.6, 7, 8, 9, 10
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '1,2.3, 3.4, 5.6, 7, 8, 9, 10
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
scan_eitem:
check_operator: 1,2.3, 3.4, 5.6, 7, 8, 9, 10

check_literal:lit=',' idx=4 '1,2.3, 3.4, 5.6, 7, 8, 9, 10
'
check_literal:After drop space:',' idx=4 '1,2.3, 3.4, 5.6, 7, 8, 9, 10
'
  ',' != '1'
check_literal: ret0
check_operator:ret0
check_function: '1,2.3, 3.4, 5.6, 7, 8, 9, 10
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=4 '1,2.3, 3.4, 5.6, 7, 8, 9, 10
'
    dropping space
check_literal:After drop space:'%' idx=4 '1,2.3, 3.4, 5.6, 7, 8, 9, 10
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=4 '1,2.3, 3.4, 5.6, 7, 8, 9, 10
'
    dropping space
check_literal:After drop space:'"' idx=4 '1,2.3, 3.4, 5.6, 7, 8, 9, 10
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '1,2.3, 3.4, 5.6, 7, 8, 9, 10
'
check_integer:ret1
check_number: ret1
scan_atom:
check_literal:lit=' %' idx=4 '1,2.3, 3.4, 5.6, 7, 8, 9, 10
'
    dropping space
check_literal:After drop space:'%' idx=4 '1,2.3, 3.4, 5.6, 7, 8, 9, 10
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=4 '1,2.3, 3.4, 5.6, 7, 8, 9, 10
'
    dropping space
check_literal:After drop space:'"' idx=4 '1,2.3, 3.4, 5.6, 7, 8, 9, 10
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '1,2.3, 3.4, 5.6, 7, 8, 9, 10
'
check_integer:ret1
check_number: ret1
scan_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '1,2.3, 3.4, 5.6, 7, 8, 9, 10
'
check_integer:ret1
scan_integer:
scan_integer:ret0
check_eitem: ',2.3, 3.4, 5.6, 7, 8, 9, 10
'
check_operator: ,2.3, 3.4, 5.6, 7, 8, 9, 10

check_literal:lit=',' idx=5 ',2.3, 3.4, 5.6, 7, 8, 9, 10
'
check_literal:After drop space:',' idx=5 ',2.3, 3.4, 5.6, 7, 8, 9, 10
'
check_literal:After while():2.3, 3.4, 5.6, 7, 8, 9, 10

check_literal:ret1 
scan_literal:lit=',' ',2.3, 3.4, 5.6, 7, 8, 9, 10
'
scan_literal:After drop space:,2.3, 3.4, 5.6, 7, 8, 9, 10

scan_literal:while loop:,2.3, 3.4, 5.6, 7, 8, 9, 10

check_eitem:ret1
scan_eitem:
check_operator: 2.3, 3.4, 5.6, 7, 8, 9, 10

check_literal:lit=',' idx=6 '2.3, 3.4, 5.6, 7, 8, 9, 10
'
check_literal:After drop space:',' idx=6 '2.3, 3.4, 5.6, 7, 8, 9, 10
'
  ',' != '2'
check_literal: ret0
check_operator:ret0
check_function: '2.3, 3.4, 5.6, 7, 8, 9, 10
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=6 '2.3, 3.4, 5.6, 7, 8, 9, 10
'
    dropping space
check_literal:After drop space:'%' idx=6 '2.3, 3.4, 5.6, 7, 8, 9, 10
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=6 '2.3, 3.4, 5.6, 7, 8, 9, 10
'
    dropping space
check_literal:After drop space:'"' idx=6 '2.3, 3.4, 5.6, 7, 8, 9, 10
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret1
check_number: ret1
scan_atom:
check_literal:lit=' %' idx=6 '2.3, 3.4, 5.6, 7, 8, 9, 10
'
    dropping space
check_literal:After drop space:'%' idx=6 '2.3, 3.4, 5.6, 7, 8, 9, 10
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=6 '2.3, 3.4, 5.6, 7, 8, 9, 10
'
    dropping space
check_literal:After drop space:'"' idx=6 '2.3, 3.4, 5.6, 7, 8, 9, 10
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret1
check_number: ret1
scan_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret1
scan_float:
isfloatdigit:
scan_float: ret0
check_eitem: ', 3.4, 5.6, 7, 8, 9, 10
'
check_operator: , 3.4, 5.6, 7, 8, 9, 10

check_literal:lit=',' idx=9 ', 3.4, 5.6, 7, 8, 9, 10
'
check_literal:After drop space:',' idx=9 ', 3.4, 5.6, 7, 8, 9, 10
'
check_literal:After while(): 3.4, 5.6, 7, 8, 9, 10

check_literal:ret1 
scan_literal:lit=',' ', 3.4, 5.6, 7, 8, 9, 10
'
scan_literal:After drop space:, 3.4, 5.6, 7, 8, 9, 10

scan_literal:while loop:, 3.4, 5.6, 7, 8, 9, 10

check_eitem:ret1
scan_eitem:
check_operator:  3.4, 5.6, 7, 8, 9, 10

check_literal:lit=',' idx=11 '3.4, 5.6, 7, 8, 9, 10
'
check_literal:After drop space:',' idx=11 '3.4, 5.6, 7, 8, 9, 10
'
  ',' != '3'
check_literal: ret0
check_operator:ret0
check_function: '3.4, 5.6, 7, 8, 9, 10
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=10 ' 3.4, 5.6, 7, 8, 9, 10
'
    dropping space
check_literal:After drop space:'%' idx=11 '3.4, 5.6, 7, 8, 9, 10
'
  '%' != '3'
check_literal: ret0
check_literal:lit=' "' idx=10 ' 3.4, 5.6, 7, 8, 9, 10
'
    dropping space
check_literal:After drop space:'"' idx=11 '3.4, 5.6, 7, 8, 9, 10
'
  '"' != '3'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret1
check_number: ret1
scan_atom:
check_literal:lit=' %' idx=10 ' 3.4, 5.6, 7, 8, 9, 10
'
    dropping space
check_literal:After drop space:'%' idx=11 '3.4, 5.6, 7, 8, 9, 10
'
  '%' != '3'
check_literal: ret0
check_literal:lit=' "' idx=10 ' 3.4, 5.6, 7, 8, 9, 10
'
    dropping space
check_literal:After drop space:'"' idx=11 '3.4, 5.6, 7, 8, 9, 10
'
  '"' != '3'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret1
check_number: ret1
scan_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret1
scan_float:
isfloatdigit:
scan_float: ret0
check_eitem: ', 5.6, 7, 8, 9, 10
'
check_operator: , 5.6, 7, 8, 9, 10

check_literal:lit=',' idx=14 ', 5.6, 7, 8, 9, 10
'
check_literal:After drop space:',' idx=14 ', 5.6, 7, 8, 9, 10
'
check_literal:After while(): 5.6, 7, 8, 9, 10

check_literal:ret1 
scan_literal:lit=',' ', 5.6, 7, 8, 9, 10
'
scan_literal:After drop space:, 5.6, 7, 8, 9, 10

scan_literal:while loop:, 5.6, 7, 8, 9, 10

check_eitem:ret1
scan_eitem:
check_operator:  5.6, 7, 8, 9, 10

check_literal:lit=',' idx=16 '5.6, 7, 8, 9, 10
'
check_literal:After drop space:',' idx=16 '5.6, 7, 8, 9, 10
'
  ',' != '5'
check_literal: ret0
check_operator:ret0
check_function: '5.6, 7, 8, 9, 10
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=15 ' 5.6, 7, 8, 9, 10
'
    dropping space
check_literal:After drop space:'%' idx=16 '5.6, 7, 8, 9, 10
'
  '%' != '5'
check_literal: ret0
check_literal:lit=' "' idx=15 ' 5.6, 7, 8, 9, 10
'
    dropping space
check_literal:After drop space:'"' idx=16 '5.6, 7, 8, 9, 10
'
  '"' != '5'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret1
check_number: ret1
scan_atom:
check_literal:lit=' %' idx=15 ' 5.6, 7, 8, 9, 10
'
    dropping space
check_literal:After drop space:'%' idx=16 '5.6, 7, 8, 9, 10
'
  '%' != '5'
check_literal: ret0
check_literal:lit=' "' idx=15 ' 5.6, 7, 8, 9, 10
'
    dropping space
check_literal:After drop space:'"' idx=16 '5.6, 7, 8, 9, 10
'
  '"' != '5'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret1
check_number: ret1
scan_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret1
scan_float:
isfloatdigit:
scan_float: ret0
check_eitem: ', 7, 8, 9, 10
'
check_operator: , 7, 8, 9, 10

check_literal:lit=',' idx=19 ', 7, 8, 9, 10
'
check_literal:After drop space:',' idx=19 ', 7, 8, 9, 10
'
check_literal:After while(): 7, 8, 9, 10

check_literal:ret1 
scan_literal:lit=',' ', 7, 8, 9, 10
'
scan_literal:After drop space:, 7, 8, 9, 10

scan_literal:while loop:, 7, 8, 9, 10

check_eitem:ret1
scan_eitem:
check_operator:  7, 8, 9, 10

check_literal:lit=',' idx=21 '7, 8, 9, 10
'
check_literal:After drop space:',' idx=21 '7, 8, 9, 10
'
  ',' != '7'
check_literal: ret0
check_operator:ret0
check_function: '7, 8, 9, 10
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=20 ' 7, 8, 9, 10
'
    dropping space
check_literal:After drop space:'%' idx=21 '7, 8, 9, 10
'
  '%' != '7'
check_literal: ret0
check_literal:lit=' "' idx=20 ' 7, 8, 9, 10
'
    dropping space
check_literal:After drop space:'"' idx=21 '7, 8, 9, 10
'
  '"' != '7'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '7, 8, 9, 10
'
check_integer:ret1
check_number: ret1
scan_atom:
check_literal:lit=' %' idx=20 ' 7, 8, 9, 10
'
    dropping space
check_literal:After drop space:'%' idx=21 '7, 8, 9, 10
'
  '%' != '7'
check_literal: ret0
check_literal:lit=' "' idx=20 ' 7, 8, 9, 10
'
    dropping space
check_literal:After drop space:'"' idx=21 '7, 8, 9, 10
'
  '"' != '7'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '7, 8, 9, 10
'
check_integer:ret1
check_number: ret1
scan_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '7, 8, 9, 10
'
check_integer:ret1
scan_integer:
scan_integer:ret0
check_eitem: ', 8, 9, 10
'
check_operator: , 8, 9, 10

check_literal:lit=',' idx=22 ', 8, 9, 10
'
check_literal:After drop space:',' idx=22 ', 8, 9, 10
'
check_literal:After while(): 8, 9, 10

check_literal:ret1 
scan_literal:lit=',' ', 8, 9, 10
'
scan_literal:After drop space:, 8, 9, 10

scan_literal:while loop:, 8, 9, 10

check_eitem:ret1
scan_eitem:
check_operator:  8, 9, 10

check_literal:lit=',' idx=24 '8, 9, 10
'
check_literal:After drop space:',' idx=24 '8, 9, 10
'
  ',' != '8'
check_literal: ret0
check_operator:ret0
check_function: '8, 9, 10
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=23 ' 8, 9, 10
'
    dropping space
check_literal:After drop space:'%' idx=24 '8, 9, 10
'
  '%' != '8'
check_literal: ret0
check_literal:lit=' "' idx=23 ' 8, 9, 10
'
    dropping space
check_literal:After drop space:'"' idx=24 '8, 9, 10
'
  '"' != '8'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '8, 9, 10
'
check_integer:ret1
check_number: ret1
scan_atom:
check_literal:lit=' %' idx=23 ' 8, 9, 10
'
    dropping space
check_literal:After drop space:'%' idx=24 '8, 9, 10
'
  '%' != '8'
check_literal: ret0
check_literal:lit=' "' idx=23 ' 8, 9, 10
'
    dropping space
check_literal:After drop space:'"' idx=24 '8, 9, 10
'
  '"' != '8'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '8, 9, 10
'
check_integer:ret1
check_number: ret1
scan_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '8, 9, 10
'
check_integer:ret1
scan_integer:
scan_integer:ret0
check_eitem: ', 9, 10
'
check_operator: , 9, 10

check_literal:lit=',' idx=25 ', 9, 10
'
check_literal:After drop space:',' idx=25 ', 9, 10
'
check_literal:After while(): 9, 10

check_literal:ret1 
scan_literal:lit=',' ', 9, 10
'
scan_literal:After drop space:, 9, 10

scan_literal:while loop:, 9, 10

check_eitem:ret1
scan_eitem:
check_operator:  9, 10

check_literal:lit=',' idx=27 '9, 10
'
check_literal:After drop space:',' idx=27 '9, 10
'
  ',' != '9'
check_literal: ret0
check_operator:ret0
check_function: '9, 10
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=26 ' 9, 10
'
    dropping space
check_literal:After drop space:'%' idx=27 '9, 10
'
  '%' != '9'
check_literal: ret0
check_literal:lit=' "' idx=26 ' 9, 10
'
    dropping space
check_literal:After drop space:'"' idx=27 '9, 10
'
  '"' != '9'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '9, 10
'
check_integer:ret1
check_number: ret1
scan_atom:
check_literal:lit=' %' idx=26 ' 9, 10
'
    dropping space
check_literal:After drop space:'%' idx=27 '9, 10
'
  '%' != '9'
check_literal: ret0
check_literal:lit=' "' idx=26 ' 9, 10
'
    dropping space
check_literal:After drop space:'"' idx=27 '9, 10
'
  '"' != '9'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '9, 10
'
check_integer:ret1
check_number: ret1
scan_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '9, 10
'
check_integer:ret1
scan_integer:
scan_integer:ret0
check_eitem: ', 10
'
check_operator: , 10

check_literal:lit=',' idx=28 ', 10
'
check_literal:After drop space:',' idx=28 ', 10
'
check_literal:After while(): 10

check_literal:ret1 
scan_literal:lit=',' ', 10
'
scan_literal:After drop space:, 10

scan_literal:while loop:, 10

check_eitem:ret1
scan_eitem:
check_operator:  10

check_literal:lit=',' idx=30 '10
'
check_literal:After drop space:',' idx=30 '10
'
  ',' != '1'
check_literal: ret0
check_operator:ret0
check_function: '10
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=29 ' 10
'
    dropping space
check_literal:After drop space:'%' idx=30 '10
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=29 ' 10
'
    dropping space
check_literal:After drop space:'"' idx=30 '10
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '10
'
check_integer:ret1
check_number: ret1
scan_atom:
check_literal:lit=' %' idx=29 ' 10
'
    dropping space
check_literal:After drop space:'%' idx=30 '10
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=29 ' 10
'
    dropping space
check_literal:After drop space:'"' idx=30 '10
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '10
'
check_integer:ret1
check_number: ret1
scan_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '10
'
check_integer:ret1
scan_integer:
scan_integer:ret0
check_eitem: ''
check_operator: 
check_literal:lit=',' idx=33 ''
check_literal:After drop space:',' idx=33 ''
check_literal  ret0 Empty test string
check_operator:ret0
check_function: ''
check_function: ret0
check_atom:
check_literal:lit=' %' idx=33 ''
    dropping space
check_literal:After drop space:'%' idx=33 ''
check_literal  ret0 Empty test string
check_literal:lit=' "' idx=33 ''
    dropping space
check_literal:After drop space:'"' idx=33 ''
check_literal  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ''
check_integer:ret0
check_number: ret0
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=33 ''
    dropping space
check_literal:After drop space:'(' idx=33 ''
check_literal  ret0 Empty test string
check_sub_expr: ret0
check_eitem:ret0
scan_expression: ret1 ''
scan_command: ret1 =>'UDG'
check_literal:lit=':' idx=33 ''
check_literal:After drop space:':' idx=33 ''
check_literal  ret0 Empty test string
cline scanned OK
=======================cline==========================
==     UDG 1 , 2.3, 3.4, 5.6, 7, 8, 9, 10	
==
scan_cline:
check_line:
check_assignment:
check_variable:
check_vname 'UDG 1 , 2.3, 3.4, 5.6, 7, 8, 9, 10	
':
check_vname ret1 ' 1 , 2.3, 3.4, 5.6, 7, 8, 9, 10	
':
check_variable: ' 1 , 2.3, 3.4, 5.6, 7, 8, 9, 10	
'
check_variable: Ary test ' 1 , 2.3, 3.4, 5.6, 7, 8, 9, 10	
'
check_literal:lit='(' idx=8 ' 1 , 2.3, 3.4, 5.6, 7, 8, 9, 10	
'
check_literal:After drop space:'(' idx=8 ' 1 , 2.3, 3.4, 5.6, 7, 8, 9, 10	
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variable:ret1 
check_literal:lit=' =' idx=8 ' 1 , 2.3, 3.4, 5.6, 7, 8, 9, 10	
'
    dropping space
check_literal:After drop space:'=' idx=9 '1 , 2.3, 3.4, 5.6, 7, 8, 9, 10	
'
  '=' != '1'
check_literal: ret0
check_assignment:ret0
check_proc_call:
check_textlabel: 'UDG 1 , 2.3, 3.4, 5.6, 7, 8, 9, 10	
'
check_textlabel:ret0
check_proc_call:ret0
check_command:
check_command: ret1 found=> 'UDG'
check_line:ret1
scan_cline: Checked len=33, ' 1 , 2.3, 3.4, 5.6, 7, 8, 9, 10	
'
scan_line:
check_assignment:
check_variable:
check_vname 'UDG 1 , 2.3, 3.4, 5.6, 7, 8, 9, 10	
':
check_vname ret1 ' 1 , 2.3, 3.4, 5.6, 7, 8, 9, 10	
':
check_variable: ' 1 , 2.3, 3.4, 5.6, 7, 8, 9, 10	
'
check_variable: Ary test ' 1 , 2.3, 3.4, 5.6, 7, 8, 9, 10	
'
check_literal:lit='(' idx=8 ' 1 , 2.3, 3.4, 5.6, 7, 8, 9, 10	
'
check_literal:After drop space:'(' idx=8 ' 1 , 2.3, 3.4, 5.6, 7, 8, 9, 10	
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variable:ret1 
check_literal:lit=' =' idx=8 ' 1 , 2.3, 3.4, 5.6, 7, 8, 9, 10	
'
    dropping space
check_literal:After drop space:'=' idx=9 '1 , 2.3, 3.4, 5.6, 7, 8, 9, 10	
'
  '=' != '1'
check_literal: ret0
check_assignment:ret0
check_proc_call:
check_textlabel: 'UDG 1 , 2.3, 3.4, 5.6, 7, 8, 9, 10	
'
check_textlabel:ret0
check_proc_call:ret0
check_command:
check_command: ret1 found=> 'UDG'
scan_line:check_command: 
scan_command:
scan_expression: ' 1 , 2.3, 3.4, 5.6, 7, 8, 9, 10	
'
check_eitem: '1 , 2.3, 3.4, 5.6, 7, 8, 9, 10	
'
check_operator: 1 , 2.3, 3.4, 5.6, 7, 8, 9, 10	

check_literal:lit=',' idx=9 '1 , 2.3, 3.4, 5.6, 7, 8, 9, 10	
'
check_literal:After drop space:',' idx=9 '1 , 2.3, 3.4, 5.6, 7, 8, 9, 10	
'
  ',' != '1'
check_literal: ret0
check_operator:ret0
check_function: '1 , 2.3, 3.4, 5.6, 7, 8, 9, 10	
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=9 '1 , 2.3, 3.4, 5.6, 7, 8, 9, 10	
'
    dropping space
check_literal:After drop space:'%' idx=9 '1 , 2.3, 3.4, 5.6, 7, 8, 9, 10	
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=9 '1 , 2.3, 3.4, 5.6, 7, 8, 9, 10	
'
    dropping space
check_literal:After drop space:'"' idx=9 '1 , 2.3, 3.4, 5.6, 7, 8, 9, 10	
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '1 , 2.3, 3.4, 5.6, 7, 8, 9, 10	
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
scan_eitem:
check_operator: 1 , 2.3, 3.4, 5.6, 7, 8, 9, 10	

check_literal:lit=',' idx=9 '1 , 2.3, 3.4, 5.6, 7, 8, 9, 10	
'
check_literal:After drop space:',' idx=9 '1 , 2.3, 3.4, 5.6, 7, 8, 9, 10	
'
  ',' != '1'
check_literal: ret0
check_operator:ret0
check_function: '1 , 2.3, 3.4, 5.6, 7, 8, 9, 10	
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=9 '1 , 2.3, 3.4, 5.6, 7, 8, 9, 10	
'
    dropping space
check_literal:After drop space:'%' idx=9 '1 , 2.3, 3.4, 5.6, 7, 8, 9, 10	
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=9 '1 , 2.3, 3.4, 5.6, 7, 8, 9, 10	
'
    dropping space
check_literal:After drop space:'"' idx=9 '1 , 2.3, 3.4, 5.6, 7, 8, 9, 10	
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '1 , 2.3, 3.4, 5.6, 7, 8, 9, 10	
'
check_integer:ret1
check_number: ret1
scan_atom:
check_literal:lit=' %' idx=9 '1 , 2.3, 3.4, 5.6, 7, 8, 9, 10	
'
    dropping space
check_literal:After drop space:'%' idx=9 '1 , 2.3, 3.4, 5.6, 7, 8, 9, 10	
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=9 '1 , 2.3, 3.4, 5.6, 7, 8, 9, 10	
'
    dropping space
check_literal:After drop space:'"' idx=9 '1 , 2.3, 3.4, 5.6, 7, 8, 9, 10	
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '1 , 2.3, 3.4, 5.6, 7, 8, 9, 10	
'
check_integer:ret1
check_number: ret1
scan_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '1 , 2.3, 3.4, 5.6, 7, 8, 9, 10	
'
check_integer:ret1
scan_integer:
scan_integer:ret0
check_eitem: ', 2.3, 3.4, 5.6, 7, 8, 9, 10	
'
check_operator: , 2.3, 3.4, 5.6, 7, 8, 9, 10	

check_literal:lit=',' idx=11 ', 2.3, 3.4, 5.6, 7, 8, 9, 10	
'
check_literal:After drop space:',' idx=11 ', 2.3, 3.4, 5.6, 7, 8, 9, 10	
'
check_literal:After while(): 2.3, 3.4, 5.6, 7, 8, 9, 10	

check_literal:ret1 
scan_literal:lit=',' ', 2.3, 3.4, 5.6, 7, 8, 9, 10	
'
scan_literal:After drop space:, 2.3, 3.4, 5.6, 7, 8, 9, 10	

scan_literal:while loop:, 2.3, 3.4, 5.6, 7, 8, 9, 10	

check_eitem:ret1
scan_eitem:
check_operator:  2.3, 3.4, 5.6, 7, 8, 9, 10	

check_literal:lit=',' idx=13 '2.3, 3.4, 5.6, 7, 8, 9, 10	
'
check_literal:After drop space:',' idx=13 '2.3, 3.4, 5.6, 7, 8, 9, 10	
'
  ',' != '2'
check_literal: ret0
check_operator:ret0
check_function: '2.3, 3.4, 5.6, 7, 8, 9, 10	
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=12 ' 2.3, 3.4, 5.6, 7, 8, 9, 10	
'
    dropping space
check_literal:After drop space:'%' idx=13 '2.3, 3.4, 5.6, 7, 8, 9, 10	
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=12 ' 2.3, 3.4, 5.6, 7, 8, 9, 10	
'
    dropping space
check_literal:After drop space:'"' idx=13 '2.3, 3.4, 5.6, 7, 8, 9, 10	
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret1
check_number: ret1
scan_atom:
check_literal:lit=' %' idx=12 ' 2.3, 3.4, 5.6, 7, 8, 9, 10	
'
    dropping space
check_literal:After drop space:'%' idx=13 '2.3, 3.4, 5.6, 7, 8, 9, 10	
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=12 ' 2.3, 3.4, 5.6, 7, 8, 9, 10	
'
    dropping space
check_literal:After drop space:'"' idx=13 '2.3, 3.4, 5.6, 7, 8, 9, 10	
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret1
check_number: ret1
scan_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret1
scan_float:
isfloatdigit:
scan_float: ret0
check_eitem: ', 3.4, 5.6, 7, 8, 9, 10	
'
check_operator: , 3.4, 5.6, 7, 8, 9, 10	

check_literal:lit=',' idx=16 ', 3.4, 5.6, 7, 8, 9, 10	
'
check_literal:After drop space:',' idx=16 ', 3.4, 5.6, 7, 8, 9, 10	
'
check_literal:After while(): 3.4, 5.6, 7, 8, 9, 10	

check_literal:ret1 
scan_literal:lit=',' ', 3.4, 5.6, 7, 8, 9, 10	
'
scan_literal:After drop space:, 3.4, 5.6, 7, 8, 9, 10	

scan_literal:while loop:, 3.4, 5.6, 7, 8, 9, 10	

check_eitem:ret1
scan_eitem:
check_operator:  3.4, 5.6, 7, 8, 9, 10	

check_literal:lit=',' idx=18 '3.4, 5.6, 7, 8, 9, 10	
'
check_literal:After drop space:',' idx=18 '3.4, 5.6, 7, 8, 9, 10	
'
  ',' != '3'
check_literal: ret0
check_operator:ret0
check_function: '3.4, 5.6, 7, 8, 9, 10	
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=17 ' 3.4, 5.6, 7, 8, 9, 10	
'
    dropping space
check_literal:After drop space:'%' idx=18 '3.4, 5.6, 7, 8, 9, 10	
'
  '%' != '3'
check_literal: ret0
check_literal:lit=' "' idx=17 ' 3.4, 5.6, 7, 8, 9, 10	
'
    dropping space
check_literal:After drop space:'"' idx=18 '3.4, 5.6, 7, 8, 9, 10	
'
  '"' != '3'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret1
check_number: ret1
scan_atom:
check_literal:lit=' %' idx=17 ' 3.4, 5.6, 7, 8, 9, 10	
'
    dropping space
check_literal:After drop space:'%' idx=18 '3.4, 5.6, 7, 8, 9, 10	
'
  '%' != '3'
check_literal: ret0
check_literal:lit=' "' idx=17 ' 3.4, 5.6, 7, 8, 9, 10	
'
    dropping space
check_literal:After drop space:'"' idx=18 '3.4, 5.6, 7, 8, 9, 10	
'
  '"' != '3'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret1
check_number: ret1
scan_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret1
scan_float:
isfloatdigit:
scan_float: ret0
check_eitem: ', 5.6, 7, 8, 9, 10	
'
check_operator: , 5.6, 7, 8, 9, 10	

check_literal:lit=',' idx=21 ', 5.6, 7, 8, 9, 10	
'
check_literal:After drop space:',' idx=21 ', 5.6, 7, 8, 9, 10	
'
check_literal:After while(): 5.6, 7, 8, 9, 10	

check_literal:ret1 
scan_literal:lit=',' ', 5.6, 7, 8, 9, 10	
'
scan_literal:After drop space:, 5.6, 7, 8, 9, 10	

scan_literal:while loop:, 5.6, 7, 8, 9, 10	

check_eitem:ret1
scan_eitem:
check_operator:  5.6, 7, 8, 9, 10	

check_literal:lit=',' idx=23 '5.6, 7, 8, 9, 10	
'
check_literal:After drop space:',' idx=23 '5.6, 7, 8, 9, 10	
'
  ',' != '5'
check_literal: ret0
check_operator:ret0
check_function: '5.6, 7, 8, 9, 10	
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=22 ' 5.6, 7, 8, 9, 10	
'
    dropping space
check_literal:After drop space:'%' idx=23 '5.6, 7, 8, 9, 10	
'
  '%' != '5'
check_literal: ret0
check_literal:lit=' "' idx=22 ' 5.6, 7, 8, 9, 10	
'
    dropping space
check_literal:After drop space:'"' idx=23 '5.6, 7, 8, 9, 10	
'
  '"' != '5'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret1
check_number: ret1
scan_atom:
check_literal:lit=' %' idx=22 ' 5.6, 7, 8, 9, 10	
'
    dropping space
check_literal:After drop space:'%' idx=23 '5.6, 7, 8, 9, 10	
'
  '%' != '5'
check_literal: ret0
check_literal:lit=' "' idx=22 ' 5.6, 7, 8, 9, 10	
'
    dropping space
check_literal:After drop space:'"' idx=23 '5.6, 7, 8, 9, 10	
'
  '"' != '5'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret1
check_number: ret1
scan_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret1
scan_float:
isfloatdigit:
scan_float: ret0
check_eitem: ', 7, 8, 9, 10	
'
check_operator: , 7, 8, 9, 10	

check_literal:lit=',' idx=26 ', 7, 8, 9, 10	
'
check_literal:After drop space:',' idx=26 ', 7, 8, 9, 10	
'
check_literal:After while(): 7, 8, 9, 10	

check_literal:ret1 
scan_literal:lit=',' ', 7, 8, 9, 10	
'
scan_literal:After drop space:, 7, 8, 9, 10	

scan_literal:while loop:, 7, 8, 9, 10	

check_eitem:ret1
scan_eitem:
check_operator:  7, 8, 9, 10	

check_literal:lit=',' idx=28 '7, 8, 9, 10	
'
check_literal:After drop space:',' idx=28 '7, 8, 9, 10	
'
  ',' != '7'
check_literal: ret0
check_operator:ret0
check_function: '7, 8, 9, 10	
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=27 ' 7, 8, 9, 10	
'
    dropping space
check_literal:After drop space:'%' idx=28 '7, 8, 9, 10	
'
  '%' != '7'
check_literal: ret0
check_literal:lit=' "' idx=27 ' 7, 8, 9, 10	
'
    dropping space
check_literal:After drop space:'"' idx=28 '7, 8, 9, 10	
'
  '"' != '7'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '7, 8, 9, 10	
'
check_integer:ret1
check_number: ret1
scan_atom:
check_literal:lit=' %' idx=27 ' 7, 8, 9, 10	
'
    dropping space
check_literal:After drop space:'%' idx=28 '7, 8, 9, 10	
'
  '%' != '7'
check_literal: ret0
check_literal:lit=' "' idx=27 ' 7, 8, 9, 10	
'
    dropping space
check_literal:After drop space:'"' idx=28 '7, 8, 9, 10	
'
  '"' != '7'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '7, 8, 9, 10	
'
check_integer:ret1
check_number: ret1
scan_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '7, 8, 9, 10	
'
check_integer:ret1
scan_integer:
scan_integer:ret0
check_eitem: ', 8, 9, 10	
'
check_operator: , 8, 9, 10	

check_literal:lit=',' idx=29 ', 8, 9, 10	
'
check_literal:After drop space:',' idx=29 ', 8, 9, 10	
'
check_literal:After while(): 8, 9, 10	

check_literal:ret1 
scan_literal:lit=',' ', 8, 9, 10	
'
scan_literal:After drop space:, 8, 9, 10	

scan_literal:while loop:, 8, 9, 10	

check_eitem:ret1
scan_eitem:
check_operator:  8, 9, 10	

check_literal:lit=',' idx=31 '8, 9, 10	
'
check_literal:After drop space:',' idx=31 '8, 9, 10	
'
  ',' != '8'
check_literal: ret0
check_operator:ret0
check_function: '8, 9, 10	
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=30 ' 8, 9, 10	
'
    dropping space
check_literal:After drop space:'%' idx=31 '8, 9, 10	
'
  '%' != '8'
check_literal: ret0
check_literal:lit=' "' idx=30 ' 8, 9, 10	
'
    dropping space
check_literal:After drop space:'"' idx=31 '8, 9, 10	
'
  '"' != '8'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '8, 9, 10	
'
check_integer:ret1
check_number: ret1
scan_atom:
check_literal:lit=' %' idx=30 ' 8, 9, 10	
'
    dropping space
check_literal:After drop space:'%' idx=31 '8, 9, 10	
'
  '%' != '8'
check_literal: ret0
check_literal:lit=' "' idx=30 ' 8, 9, 10	
'
    dropping space
check_literal:After drop space:'"' idx=31 '8, 9, 10	
'
  '"' != '8'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '8, 9, 10	
'
check_integer:ret1
check_number: ret1
scan_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '8, 9, 10	
'
check_integer:ret1
scan_integer:
scan_integer:ret0
check_eitem: ', 9, 10	
'
check_operator: , 9, 10	

check_literal:lit=',' idx=32 ', 9, 10	
'
check_literal:After drop space:',' idx=32 ', 9, 10	
'
check_literal:After while(): 9, 10	

check_literal:ret1 
scan_literal:lit=',' ', 9, 10	
'
scan_literal:After drop space:, 9, 10	

scan_literal:while loop:, 9, 10	

check_eitem:ret1
scan_eitem:
check_operator:  9, 10	

check_literal:lit=',' idx=34 '9, 10	
'
check_literal:After drop space:',' idx=34 '9, 10	
'
  ',' != '9'
check_literal: ret0
check_operator:ret0
check_function: '9, 10	
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=33 ' 9, 10	
'
    dropping space
check_literal:After drop space:'%' idx=34 '9, 10	
'
  '%' != '9'
check_literal: ret0
check_literal:lit=' "' idx=33 ' 9, 10	
'
    dropping space
check_literal:After drop space:'"' idx=34 '9, 10	
'
  '"' != '9'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '9, 10	
'
check_integer:ret1
check_number: ret1
scan_atom:
check_literal:lit=' %' idx=33 ' 9, 10	
'
    dropping space
check_literal:After drop space:'%' idx=34 '9, 10	
'
  '%' != '9'
check_literal: ret0
check_literal:lit=' "' idx=33 ' 9, 10	
'
    dropping space
check_literal:After drop space:'"' idx=34 '9, 10	
'
  '"' != '9'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '9, 10	
'
check_integer:ret1
check_number: ret1
scan_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '9, 10	
'
check_integer:ret1
scan_integer:
scan_integer:ret0
check_eitem: ', 10	
'
check_operator: , 10	

check_literal:lit=',' idx=35 ', 10	
'
check_literal:After drop space:',' idx=35 ', 10	
'
check_literal:After while(): 10	

check_literal:ret1 
scan_literal:lit=',' ', 10	
'
scan_literal:After drop space:, 10	

scan_literal:while loop:, 10	

check_eitem:ret1
scan_eitem:
check_operator:  10	

check_literal:lit=',' idx=37 '10	
'
check_literal:After drop space:',' idx=37 '10	
'
  ',' != '1'
check_literal: ret0
check_operator:ret0
check_function: '10	
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=36 ' 10	
'
    dropping space
check_literal:After drop space:'%' idx=37 '10	
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=36 ' 10	
'
    dropping space
check_literal:After drop space:'"' idx=37 '10	
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '10	
'
check_integer:ret1
check_number: ret1
scan_atom:
check_literal:lit=' %' idx=36 ' 10	
'
    dropping space
check_literal:After drop space:'%' idx=37 '10	
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=36 ' 10	
'
    dropping space
check_literal:After drop space:'"' idx=37 '10	
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '10	
'
check_integer:ret1
check_number: ret1
scan_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '10	
'
check_integer:ret1
scan_integer:
scan_integer:ret0
check_eitem: ''
check_operator: 
check_literal:lit=',' idx=41 ''
check_literal:After drop space:',' idx=41 ''
check_literal  ret0 Empty test string
check_operator:ret0
check_function: ''
check_function: ret0
check_atom:
check_literal:lit=' %' idx=41 ''
    dropping space
check_literal:After drop space:'%' idx=41 ''
check_literal  ret0 Empty test string
check_literal:lit=' "' idx=41 ''
    dropping space
check_literal:After drop space:'"' idx=41 ''
check_literal  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ''
check_integer:ret0
check_number: ret0
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=41 ''
    dropping space
check_literal:After drop space:'(' idx=41 ''
check_literal  ret0 Empty test string
check_sub_expr: ret0
check_eitem:ret0
scan_expression: ret1 ''
scan_command: ret1 =>'UDG'
check_literal:lit=':' idx=41 ''
check_literal:After drop space:':' idx=41 ''
check_literal  ret0 Empty test string
cline scanned OK
=======================cline==========================
==A%(2) = 6
==
scan_cline:
check_line:
check_assignment:
check_variable:
check_vname 'A%(2) = 6
':
check_vname ret1 '%(2) = 6
':
check_variable: '%(2) = 6
'
check_variable: Ary test '(2) = 6
'
check_literal:lit='(' idx=2 '(2) = 6
'
check_literal:After drop space:'(' idx=2 '(2) = 6
'
check_literal:After while():2) = 6

check_literal:ret1 
check_variable: is array
check_expression: '2) = 6
'
check_eitem: '2) = 6
'
check_operator: 2) = 6

check_literal:lit=',' idx=3 '2) = 6
'
check_literal:After drop space:',' idx=3 '2) = 6
'
  ',' != '2'
check_literal: ret0
check_operator:ret0
check_function: '2) = 6
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=3 '2) = 6
'
    dropping space
check_literal:After drop space:'%' idx=3 '2) = 6
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=3 '2) = 6
'
    dropping space
check_literal:After drop space:'"' idx=3 '2) = 6
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2) = 6
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: ') = 6
'
check_operator: ) = 6

check_literal:lit=',' idx=4 ') = 6
'
check_literal:After drop space:',' idx=4 ') = 6
'
  ',' != ')'
check_literal: ret0
check_operator:ret0
check_function: ') = 6
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=4 ') = 6
'
    dropping space
check_literal:After drop space:'%' idx=4 ') = 6
'
  '%' != ')'
check_literal: ret0
check_literal:lit=' "' idx=4 ') = 6
'
    dropping space
check_literal:After drop space:'"' idx=4 ') = 6
'
  '"' != ')'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ') = 6
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname ') = 6
':
check_vname ret0 ') = 6
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=4 ') = 6
'
    dropping space
check_literal:After drop space:'(' idx=4 ') = 6
'
  '(' != ')'
check_literal: ret0
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 ') = 6
'
check_literal:lit=' ,' idx=4 ') = 6
'
    dropping space
check_literal:After drop space:',' idx=4 ') = 6
'
  ',' != ')'
check_literal: ret0
check_literal:lit=' )' idx=4 ') = 6
'
    dropping space
check_literal:After drop space:')' idx=4 ') = 6
'
check_literal:After while(): = 6

check_literal:ret1 
check_variable:ret1 
check_literal:lit=' =' idx=5 ' = 6
'
    dropping space
check_literal:After drop space:'=' idx=6 '= 6
'
check_literal:After while(): 6

check_literal:ret1 
check_expression: '6
'
check_eitem: '6
'
check_operator: 6

check_literal:lit=',' idx=8 '6
'
check_literal:After drop space:',' idx=8 '6
'
  ',' != '6'
check_literal: ret0
check_operator:ret0
check_function: '6
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=8 '6
'
    dropping space
check_literal:After drop space:'%' idx=8 '6
'
  '%' != '6'
check_literal: ret0
check_literal:lit=' "' idx=8 '6
'
    dropping space
check_literal:After drop space:'"' idx=8 '6
'
  '"' != '6'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '6
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: '
'
check_operator: 

check_literal:lit=',' idx=10 ''
check_literal:After drop space:',' idx=10 ''
check_literal  ret0 Empty test string
check_operator:ret0
check_function: ''
check_function: ret0
check_atom:
check_literal:lit=' %' idx=9 '
'
    dropping space
check_literal:After drop space:'%' idx=10 ''
check_literal  ret0 Empty test string
check_literal:lit=' "' idx=9 '
'
    dropping space
check_literal:After drop space:'"' idx=10 ''
check_literal  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ''
check_integer:ret0
check_number: ret0
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=9 '
'
    dropping space
check_literal:After drop space:'(' idx=10 ''
check_literal  ret0 Empty test string
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 '
'
check_assignment:ret1
check_line:ret1
scan_cline: Checked len=1, '
'
scan_line:
check_assignment:
check_variable:
check_vname 'A%(2) = 6
':
check_vname ret1 '%(2) = 6
':
check_variable: '%(2) = 6
'
check_variable: Ary test '(2) = 6
'
check_literal:lit='(' idx=2 '(2) = 6
'
check_literal:After drop space:'(' idx=2 '(2) = 6
'
check_literal:After while():2) = 6

check_literal:ret1 
check_variable: is array
check_expression: '2) = 6
'
check_eitem: '2) = 6
'
check_operator: 2) = 6

check_literal:lit=',' idx=3 '2) = 6
'
check_literal:After drop space:',' idx=3 '2) = 6
'
  ',' != '2'
check_literal: ret0
check_operator:ret0
check_function: '2) = 6
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=3 '2) = 6
'
    dropping space
check_literal:After drop space:'%' idx=3 '2) = 6
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=3 '2) = 6
'
    dropping space
check_literal:After drop space:'"' idx=3 '2) = 6
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2) = 6
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: ') = 6
'
check_operator: ) = 6

check_literal:lit=',' idx=4 ') = 6
'
check_literal:After drop space:',' idx=4 ') = 6
'
  ',' != ')'
check_literal: ret0
check_operator:ret0
check_function: ') = 6
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=4 ') = 6
'
    dropping space
check_literal:After drop space:'%' idx=4 ') = 6
'
  '%' != ')'
check_literal: ret0
check_literal:lit=' "' idx=4 ') = 6
'
    dropping space
check_literal:After drop space:'"' idx=4 ') = 6
'
  '"' != ')'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ') = 6
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname ') = 6
':
check_vname ret0 ') = 6
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=4 ') = 6
'
    dropping space
check_literal:After drop space:'(' idx=4 ') = 6
'
  '(' != ')'
check_literal: ret0
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 ') = 6
'
check_literal:lit=' ,' idx=4 ') = 6
'
    dropping space
check_literal:After drop space:',' idx=4 ') = 6
'
  ',' != ')'
check_literal: ret0
check_literal:lit=' )' idx=4 ') = 6
'
    dropping space
check_literal:After drop space:')' idx=4 ') = 6
'
check_literal:After while(): = 6

check_literal:ret1 
check_variable:ret1 
check_literal:lit=' =' idx=5 ' = 6
'
    dropping space
check_literal:After drop space:'=' idx=6 '= 6
'
check_literal:After while(): 6

check_literal:ret1 
check_expression: '6
'
check_eitem: '6
'
check_operator: 6

check_literal:lit=',' idx=8 '6
'
check_literal:After drop space:',' idx=8 '6
'
  ',' != '6'
check_literal: ret0
check_operator:ret0
check_function: '6
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=8 '6
'
    dropping space
check_literal:After drop space:'%' idx=8 '6
'
  '%' != '6'
check_literal: ret0
check_literal:lit=' "' idx=8 '6
'
    dropping space
check_literal:After drop space:'"' idx=8 '6
'
  '"' != '6'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '6
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: '
'
check_operator: 

check_literal:lit=',' idx=10 ''
check_literal:After drop space:',' idx=10 ''
check_literal  ret0 Empty test string
check_operator:ret0
check_function: ''
check_function: ret0
check_atom:
check_literal:lit=' %' idx=9 '
'
    dropping space
check_literal:After drop space:'%' idx=10 ''
check_literal  ret0 Empty test string
check_literal:lit=' "' idx=9 '
'
    dropping space
check_literal:After drop space:'"' idx=10 ''
check_literal  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ''
check_integer:ret0
check_number: ret0
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=9 '
'
    dropping space
check_literal:After drop space:'(' idx=10 ''
check_literal  ret0 Empty test string
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 '
'
check_assignment:ret1
scan_assignment:
scan_variable:
scan_vname: 'A%(2) = 6
'
scan_vname: ret1 'A'
scan_variable: '%(2) = 6
' vname='A'
scan_variable: Ary test '(2) = 6
'
check_literal:lit='(' idx=2 '(2) = 6
'
check_literal:After drop space:'(' idx=2 '(2) = 6
'
check_literal:After while():2) = 6

check_literal:ret1 
scan_literal:lit='(' '(2) = 6
'
scan_literal:After drop space:(2) = 6

scan_literal:while loop:(2) = 6

scan_variable: is array
scan_expression: '2) = 6
'
check_eitem: '2) = 6
'
check_operator: 2) = 6

check_literal:lit=',' idx=3 '2) = 6
'
check_literal:After drop space:',' idx=3 '2) = 6
'
  ',' != '2'
check_literal: ret0
check_operator:ret0
check_function: '2) = 6
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=3 '2) = 6
'
    dropping space
check_literal:After drop space:'%' idx=3 '2) = 6
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=3 '2) = 6
'
    dropping space
check_literal:After drop space:'"' idx=3 '2) = 6
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2) = 6
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
scan_eitem:
check_operator: 2) = 6

check_literal:lit=',' idx=3 '2) = 6
'
check_literal:After drop space:',' idx=3 '2) = 6
'
  ',' != '2'
check_literal: ret0
check_operator:ret0
check_function: '2) = 6
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=3 '2) = 6
'
    dropping space
check_literal:After drop space:'%' idx=3 '2) = 6
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=3 '2) = 6
'
    dropping space
check_literal:After drop space:'"' idx=3 '2) = 6
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2) = 6
'
check_integer:ret1
check_number: ret1
scan_atom:
check_literal:lit=' %' idx=3 '2) = 6
'
    dropping space
check_literal:After drop space:'%' idx=3 '2) = 6
'
  '%' != '2'
check_literal: ret0
check_literal:lit=' "' idx=3 '2) = 6
'
    dropping space
check_literal:After drop space:'"' idx=3 '2) = 6
'
  '"' != '2'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2) = 6
'
check_integer:ret1
check_number: ret1
scan_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '2) = 6
'
check_integer:ret1
scan_integer:
scan_integer:ret0
check_eitem: ') = 6
'
check_operator: ) = 6

check_literal:lit=',' idx=4 ') = 6
'
check_literal:After drop space:',' idx=4 ') = 6
'
  ',' != ')'
check_literal: ret0
check_operator:ret0
check_function: ') = 6
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=4 ') = 6
'
    dropping space
check_literal:After drop space:'%' idx=4 ') = 6
'
  '%' != ')'
check_literal: ret0
check_literal:lit=' "' idx=4 ') = 6
'
    dropping space
check_literal:After drop space:'"' idx=4 ') = 6
'
  '"' != ')'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ') = 6
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname ') = 6
':
check_vname ret0 ') = 6
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=4 ') = 6
'
    dropping space
check_literal:After drop space:'(' idx=4 ') = 6
'
  '(' != ')'
check_literal: ret0
check_sub_expr: ret0
check_eitem:ret0
scan_expression: ret1 ') = 6
'
check_literal:lit=' ,' idx=4 ') = 6
'
    dropping space
check_literal:After drop space:',' idx=4 ') = 6
'
  ',' != ')'
check_literal: ret0
scan_literal:lit=' )' ') = 6
'
scan_literal:After drop space:) = 6

scan_literal:while loop:) = 6

scan_variable:ret1 vname='A%' is str:0 int:1 flt:0 ary:1
VAR INFO: '                A%' gbl:0 ref:1 int:1 flt:0 str:0 ary:1 max_str:0 max_ary:0 num_ind:1
scan_literal:lit=' =' ' = 6
'
scan_literal:After drop space:= 6

scan_literal:while loop:= 6

scan_expression: ' 6
'
check_eitem: '6
'
check_operator: 6

check_literal:lit=',' idx=8 '6
'
check_literal:After drop space:',' idx=8 '6
'
  ',' != '6'
check_literal: ret0
check_operator:ret0
check_function: '6
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=8 '6
'
    dropping space
check_literal:After drop space:'%' idx=8 '6
'
  '%' != '6'
check_literal: ret0
check_literal:lit=' "' idx=8 '6
'
    dropping space
check_literal:After drop space:'"' idx=8 '6
'
  '"' != '6'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '6
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
scan_eitem:
check_operator: 6

check_literal:lit=',' idx=8 '6
'
check_literal:After drop space:',' idx=8 '6
'
  ',' != '6'
check_literal: ret0
check_operator:ret0
check_function: '6
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=8 '6
'
    dropping space
check_literal:After drop space:'%' idx=8 '6
'
  '%' != '6'
check_literal: ret0
check_literal:lit=' "' idx=8 '6
'
    dropping space
check_literal:After drop space:'"' idx=8 '6
'
  '"' != '6'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '6
'
check_integer:ret1
check_number: ret1
scan_atom:
check_literal:lit=' %' idx=8 '6
'
    dropping space
check_literal:After drop space:'%' idx=8 '6
'
  '%' != '6'
check_literal: ret0
check_literal:lit=' "' idx=8 '6
'
    dropping space
check_literal:After drop space:'"' idx=8 '6
'
  '"' != '6'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '6
'
check_integer:ret1
check_number: ret1
scan_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '6
'
check_integer:ret1
scan_integer:
scan_integer:ret0
check_eitem: ''
check_operator: 
check_literal:lit=',' idx=10 ''
check_literal:After drop space:',' idx=10 ''
check_literal  ret0 Empty test string
check_operator:ret0
check_function: ''
check_function: ret0
check_atom:
check_literal:lit=' %' idx=10 ''
    dropping space
check_literal:After drop space:'%' idx=10 ''
check_literal  ret0 Empty test string
check_literal:lit=' "' idx=10 ''
    dropping space
check_literal:After drop space:'"' idx=10 ''
check_literal  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ''
check_integer:ret0
check_number: ret0
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=10 ''
    dropping space
check_literal:After drop space:'(' idx=10 ''
check_literal  ret0 Empty test string
check_sub_expr: ret0
check_eitem:ret0
scan_expression: ret1 ''
scan_assignment: ret1
check_literal:lit=':' idx=10 ''
check_literal:After drop space:':' idx=10 ''
check_literal  ret0 Empty test string
cline scanned OK
=======================cline==========================
==G$(12,45) = "a"
==
scan_cline:
check_line:
check_assignment:
check_variable:
check_vname 'G$(12,45) = "a"
':
check_vname ret1 '$(12,45) = "a"
':
check_variable: '$(12,45) = "a"
'
check_variable: Ary test '(12,45) = "a"
'
check_literal:lit='(' idx=2 '(12,45) = "a"
'
check_literal:After drop space:'(' idx=2 '(12,45) = "a"
'
check_literal:After while():12,45) = "a"

check_literal:ret1 
check_variable: is array
check_expression: '12,45) = "a"
'
check_eitem: '12,45) = "a"
'
check_operator: 12,45) = "a"

check_literal:lit=',' idx=3 '12,45) = "a"
'
check_literal:After drop space:',' idx=3 '12,45) = "a"
'
  ',' != '1'
check_literal: ret0
check_operator:ret0
check_function: '12,45) = "a"
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=3 '12,45) = "a"
'
    dropping space
check_literal:After drop space:'%' idx=3 '12,45) = "a"
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=3 '12,45) = "a"
'
    dropping space
check_literal:After drop space:'"' idx=3 '12,45) = "a"
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '12,45) = "a"
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: ',45) = "a"
'
check_operator: ,45) = "a"

check_literal:lit=',' idx=5 ',45) = "a"
'
check_literal:After drop space:',' idx=5 ',45) = "a"
'
check_literal:After while():45) = "a"

check_literal:ret1 
scan_literal:lit=',' 'G$(12,45) = "a"
'
scan_literal:After drop space:G$(12,45) = "a"

scan_literal:while loop:G$(12,45) = "a"

check_function: ',45) = "a"
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=5 ',45) = "a"
'
    dropping space
check_literal:After drop space:'%' idx=5 ',45) = "a"
'
  '%' != ','
check_literal: ret0
check_literal:lit=' "' idx=5 ',45) = "a"
'
    dropping space
check_literal:After drop space:'"' idx=5 ',45) = "a"
'
  '"' != ','
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ',45) = "a"
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname ',45) = "a"
':
check_vname ret0 ',45) = "a"
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=5 ',45) = "a"
'
    dropping space
check_literal:After drop space:'(' idx=5 ',45) = "a"
'
  '(' != ','
check_literal: ret0
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 ',45) = "a"
'
check_literal:lit=' ,' idx=5 ',45) = "a"
'
    dropping space
check_literal:After drop space:',' idx=5 ',45) = "a"
'
check_literal:After while():45) = "a"

check_literal:ret1 
check_expression: '45) = "a"
'
check_eitem: '45) = "a"
'
check_operator: 45) = "a"

check_literal:lit=',' idx=6 '45) = "a"
'
check_literal:After drop space:',' idx=6 '45) = "a"
'
  ',' != '4'
check_literal: ret0
check_operator:ret0
check_function: '45) = "a"
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=6 '45) = "a"
'
    dropping space
check_literal:After drop space:'%' idx=6 '45) = "a"
'
  '%' != '4'
check_literal: ret0
check_literal:lit=' "' idx=6 '45) = "a"
'
    dropping space
check_literal:After drop space:'"' idx=6 '45) = "a"
'
  '"' != '4'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '45) = "a"
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: ') = "a"
'
check_operator: ) = "a"

check_literal:lit=',' idx=8 ') = "a"
'
check_literal:After drop space:',' idx=8 ') = "a"
'
  ',' != ')'
check_literal: ret0
check_operator:ret0
check_function: ') = "a"
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=8 ') = "a"
'
    dropping space
check_literal:After drop space:'%' idx=8 ') = "a"
'
  '%' != ')'
check_literal: ret0
check_literal:lit=' "' idx=8 ') = "a"
'
    dropping space
check_literal:After drop space:'"' idx=8 ') = "a"
'
  '"' != ')'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ') = "a"
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname ') = "a"
':
check_vname ret0 ') = "a"
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=8 ') = "a"
'
    dropping space
check_literal:After drop space:'(' idx=8 ') = "a"
'
  '(' != ')'
check_literal: ret0
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 ') = "a"
'
check_literal:lit=' )' idx=8 ') = "a"
'
    dropping space
check_literal:After drop space:')' idx=8 ') = "a"
'
check_literal:After while(): = "a"

check_literal:ret1 
check_variable:ret1 
check_literal:lit=' =' idx=9 ' = "a"
'
    dropping space
check_literal:After drop space:'=' idx=10 '= "a"
'
check_literal:After while(): "a"

check_literal:ret1 
check_expression: '"a"
'
check_eitem: '"a"
'
check_operator: "a"

check_literal:lit=',' idx=12 '"a"
'
check_literal:After drop space:',' idx=12 '"a"
'
  ',' != '"'
check_literal: ret0
check_operator:ret0
check_function: '"a"
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=12 '"a"
'
    dropping space
check_literal:After drop space:'%' idx=12 '"a"
'
  '%' != '"'
check_literal: ret0
check_literal:lit=' "' idx=12 '"a"
'
    dropping space
check_literal:After drop space:'"' idx=12 '"a"
'
check_literal:After while():a"

check_literal:ret1 
check_eitem:ret1
check_eitem: 'a"
'
check_operator: a"

check_literal:lit=',' idx=13 'a"
'
check_literal:After drop space:',' idx=13 'a"
'
  ',' != 'a'
check_literal: ret0
check_operator:ret0
check_function: 'a"
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=13 'a"
'
    dropping space
check_literal:After drop space:'%' idx=13 'a"
'
  '%' != 'a'
check_literal: ret0
check_literal:lit=' "' idx=13 'a"
'
    dropping space
check_literal:After drop space:'"' idx=13 'a"
'
  '"' != 'a'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'a"
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'a"
':
check_vname ret1 '"
':
check_variable: '"
'
check_variable: Ary test '"
'
check_literal:lit='(' idx=14 '"
'
check_literal:After drop space:'(' idx=14 '"
'
  '(' != '"'
check_literal: ret0
check_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variable:ret1 
check_eitem:ret1
check_eitem: '"
'
check_operator: "

check_literal:lit=',' idx=14 '"
'
check_literal:After drop space:',' idx=14 '"
'
  ',' != '"'
check_literal: ret0
check_operator:ret0
check_function: '"
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=14 '"
'
    dropping space
check_literal:After drop space:'%' idx=14 '"
'
  '%' != '"'
check_literal: ret0
check_literal:lit=' "' idx=14 '"
'
    dropping space
check_literal:After drop space:'"' idx=14 '"
'
check_literal:After while():

check_literal:ret1 
check_eitem:ret1
check_eitem: '
'
check_operator: 

check_literal:lit=',' idx=16 ''
check_literal:After drop space:',' idx=16 ''
check_literal  ret0 Empty test string
check_operator:ret0
check_function: ''
check_function: ret0
check_atom:
check_literal:lit=' %' idx=15 '
'
    dropping space
check_literal:After drop space:'%' idx=16 ''
check_literal  ret0 Empty test string
check_literal:lit=' "' idx=15 '
'
    dropping space
check_literal:After drop space:'"' idx=16 ''
check_literal  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ''
check_integer:ret0
check_number: ret0
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=15 '
'
    dropping space
check_literal:After drop space:'(' idx=16 ''
check_literal  ret0 Empty test string
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 '
'
check_assignment:ret1
check_line:ret1
scan_cline: Checked len=1, '
'
scan_line:
check_assignment:
check_variable:
check_vname 'G$(12,45) = "a"
':
check_vname ret1 '$(12,45) = "a"
':
check_variable: '$(12,45) = "a"
'
check_variable: Ary test '(12,45) = "a"
'
check_literal:lit='(' idx=2 '(12,45) = "a"
'
check_literal:After drop space:'(' idx=2 '(12,45) = "a"
'
check_literal:After while():12,45) = "a"

check_literal:ret1 
check_variable: is array
check_expression: '12,45) = "a"
'
check_eitem: '12,45) = "a"
'
check_operator: 12,45) = "a"

check_literal:lit=',' idx=3 '12,45) = "a"
'
check_literal:After drop space:',' idx=3 '12,45) = "a"
'
  ',' != '1'
check_literal: ret0
check_operator:ret0
check_function: '12,45) = "a"
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=3 '12,45) = "a"
'
    dropping space
check_literal:After drop space:'%' idx=3 '12,45) = "a"
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=3 '12,45) = "a"
'
    dropping space
check_literal:After drop space:'"' idx=3 '12,45) = "a"
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '12,45) = "a"
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: ',45) = "a"
'
check_operator: ,45) = "a"

check_literal:lit=',' idx=5 ',45) = "a"
'
check_literal:After drop space:',' idx=5 ',45) = "a"
'
check_literal:After while():45) = "a"

check_literal:ret1 
scan_literal:lit=',' 'G$(12,45) = "a"
'
scan_literal:After drop space:G$(12,45) = "a"

scan_literal:while loop:G$(12,45) = "a"

check_function: ',45) = "a"
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=5 ',45) = "a"
'
    dropping space
check_literal:After drop space:'%' idx=5 ',45) = "a"
'
  '%' != ','
check_literal: ret0
check_literal:lit=' "' idx=5 ',45) = "a"
'
    dropping space
check_literal:After drop space:'"' idx=5 ',45) = "a"
'
  '"' != ','
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ',45) = "a"
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname ',45) = "a"
':
check_vname ret0 ',45) = "a"
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=5 ',45) = "a"
'
    dropping space
check_literal:After drop space:'(' idx=5 ',45) = "a"
'
  '(' != ','
check_literal: ret0
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 ',45) = "a"
'
check_literal:lit=' ,' idx=5 ',45) = "a"
'
    dropping space
check_literal:After drop space:',' idx=5 ',45) = "a"
'
check_literal:After while():45) = "a"

check_literal:ret1 
check_expression: '45) = "a"
'
check_eitem: '45) = "a"
'
check_operator: 45) = "a"

check_literal:lit=',' idx=6 '45) = "a"
'
check_literal:After drop space:',' idx=6 '45) = "a"
'
  ',' != '4'
check_literal: ret0
check_operator:ret0
check_function: '45) = "a"
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=6 '45) = "a"
'
    dropping space
check_literal:After drop space:'%' idx=6 '45) = "a"
'
  '%' != '4'
check_literal: ret0
check_literal:lit=' "' idx=6 '45) = "a"
'
    dropping space
check_literal:After drop space:'"' idx=6 '45) = "a"
'
  '"' != '4'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '45) = "a"
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: ') = "a"
'
check_operator: ) = "a"

check_literal:lit=',' idx=8 ') = "a"
'
check_literal:After drop space:',' idx=8 ') = "a"
'
  ',' != ')'
check_literal: ret0
check_operator:ret0
check_function: ') = "a"
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=8 ') = "a"
'
    dropping space
check_literal:After drop space:'%' idx=8 ') = "a"
'
  '%' != ')'
check_literal: ret0
check_literal:lit=' "' idx=8 ') = "a"
'
    dropping space
check_literal:After drop space:'"' idx=8 ') = "a"
'
  '"' != ')'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ') = "a"
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname ') = "a"
':
check_vname ret0 ') = "a"
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=8 ') = "a"
'
    dropping space
check_literal:After drop space:'(' idx=8 ') = "a"
'
  '(' != ')'
check_literal: ret0
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 ') = "a"
'
check_literal:lit=' )' idx=8 ') = "a"
'
    dropping space
check_literal:After drop space:')' idx=8 ') = "a"
'
check_literal:After while(): = "a"

check_literal:ret1 
check_variable:ret1 
check_literal:lit=' =' idx=9 ' = "a"
'
    dropping space
check_literal:After drop space:'=' idx=10 '= "a"
'
check_literal:After while(): "a"

check_literal:ret1 
check_expression: '"a"
'
check_eitem: '"a"
'
check_operator: "a"

check_literal:lit=',' idx=12 '"a"
'
check_literal:After drop space:',' idx=12 '"a"
'
  ',' != '"'
check_literal: ret0
check_operator:ret0
check_function: '"a"
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=12 '"a"
'
    dropping space
check_literal:After drop space:'%' idx=12 '"a"
'
  '%' != '"'
check_literal: ret0
check_literal:lit=' "' idx=12 '"a"
'
    dropping space
check_literal:After drop space:'"' idx=12 '"a"
'
check_literal:After while():a"

check_literal:ret1 
check_eitem:ret1
check_eitem: 'a"
'
check_operator: a"

check_literal:lit=',' idx=13 'a"
'
check_literal:After drop space:',' idx=13 'a"
'
  ',' != 'a'
check_literal: ret0
check_operator:ret0
check_function: 'a"
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=13 'a"
'
    dropping space
check_literal:After drop space:'%' idx=13 'a"
'
  '%' != 'a'
check_literal: ret0
check_literal:lit=' "' idx=13 'a"
'
    dropping space
check_literal:After drop space:'"' idx=13 'a"
'
  '"' != 'a'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'a"
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'a"
':
check_vname ret1 '"
':
check_variable: '"
'
check_variable: Ary test '"
'
check_literal:lit='(' idx=14 '"
'
check_literal:After drop space:'(' idx=14 '"
'
  '(' != '"'
check_literal: ret0
check_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variable:ret1 
check_eitem:ret1
check_eitem: '"
'
check_operator: "

check_literal:lit=',' idx=14 '"
'
check_literal:After drop space:',' idx=14 '"
'
  ',' != '"'
check_literal: ret0
check_operator:ret0
check_function: '"
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=14 '"
'
    dropping space
check_literal:After drop space:'%' idx=14 '"
'
  '%' != '"'
check_literal: ret0
check_literal:lit=' "' idx=14 '"
'
    dropping space
check_literal:After drop space:'"' idx=14 '"
'
check_literal:After while():

check_literal:ret1 
check_eitem:ret1
check_eitem: '
'
check_operator: 

check_literal:lit=',' idx=16 ''
check_literal:After drop space:',' idx=16 ''
check_literal  ret0 Empty test string
check_operator:ret0
check_function: ''
check_function: ret0
check_atom:
check_literal:lit=' %' idx=15 '
'
    dropping space
check_literal:After drop space:'%' idx=16 ''
check_literal  ret0 Empty test string
check_literal:lit=' "' idx=15 '
'
    dropping space
check_literal:After drop space:'"' idx=16 ''
check_literal  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ''
check_integer:ret0
check_number: ret0
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=15 '
'
    dropping space
check_literal:After drop space:'(' idx=16 ''
check_literal  ret0 Empty test string
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 '
'
check_assignment:ret1
scan_assignment:
scan_variable:
scan_vname: 'G$(12,45) = "a"
'
scan_vname: ret1 'G'
scan_variable: '$(12,45) = "a"
' vname='G'
scan_variable: Ary test '(12,45) = "a"
'
check_literal:lit='(' idx=2 '(12,45) = "a"
'
check_literal:After drop space:'(' idx=2 '(12,45) = "a"
'
check_literal:After while():12,45) = "a"

check_literal:ret1 
scan_literal:lit='(' '(12,45) = "a"
'
scan_literal:After drop space:(12,45) = "a"

scan_literal:while loop:(12,45) = "a"

scan_variable: is array
scan_expression: '12,45) = "a"
'
check_eitem: '12,45) = "a"
'
check_operator: 12,45) = "a"

check_literal:lit=',' idx=3 '12,45) = "a"
'
check_literal:After drop space:',' idx=3 '12,45) = "a"
'
  ',' != '1'
check_literal: ret0
check_operator:ret0
check_function: '12,45) = "a"
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=3 '12,45) = "a"
'
    dropping space
check_literal:After drop space:'%' idx=3 '12,45) = "a"
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=3 '12,45) = "a"
'
    dropping space
check_literal:After drop space:'"' idx=3 '12,45) = "a"
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '12,45) = "a"
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
scan_eitem:
check_operator: 12,45) = "a"

check_literal:lit=',' idx=3 '12,45) = "a"
'
check_literal:After drop space:',' idx=3 '12,45) = "a"
'
  ',' != '1'
check_literal: ret0
check_operator:ret0
check_function: '12,45) = "a"
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=3 '12,45) = "a"
'
    dropping space
check_literal:After drop space:'%' idx=3 '12,45) = "a"
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=3 '12,45) = "a"
'
    dropping space
check_literal:After drop space:'"' idx=3 '12,45) = "a"
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '12,45) = "a"
'
check_integer:ret1
check_number: ret1
scan_atom:
check_literal:lit=' %' idx=3 '12,45) = "a"
'
    dropping space
check_literal:After drop space:'%' idx=3 '12,45) = "a"
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=3 '12,45) = "a"
'
    dropping space
check_literal:After drop space:'"' idx=3 '12,45) = "a"
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '12,45) = "a"
'
check_integer:ret1
check_number: ret1
scan_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '12,45) = "a"
'
check_integer:ret1
scan_integer:
scan_integer:ret0
check_eitem: ',45) = "a"
'
check_operator: ,45) = "a"

check_literal:lit=',' idx=5 ',45) = "a"
'
check_literal:After drop space:',' idx=5 ',45) = "a"
'
check_literal:After while():45) = "a"

check_literal:ret1 
scan_literal:lit=',' ',45) = "a"
'
scan_literal:After drop space:,45) = "a"

scan_literal:while loop:,45) = "a"

check_eitem:ret1
scan_eitem:
check_operator: 45) = "a"

check_literal:lit=',' idx=6 '45) = "a"
'
check_literal:After drop space:',' idx=6 '45) = "a"
'
  ',' != '4'
check_literal: ret0
check_operator:ret0
check_function: '45) = "a"
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=6 '45) = "a"
'
    dropping space
check_literal:After drop space:'%' idx=6 '45) = "a"
'
  '%' != '4'
check_literal: ret0
check_literal:lit=' "' idx=6 '45) = "a"
'
    dropping space
check_literal:After drop space:'"' idx=6 '45) = "a"
'
  '"' != '4'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '45) = "a"
'
check_integer:ret1
check_number: ret1
scan_atom:
check_literal:lit=' %' idx=6 '45) = "a"
'
    dropping space
check_literal:After drop space:'%' idx=6 '45) = "a"
'
  '%' != '4'
check_literal: ret0
check_literal:lit=' "' idx=6 '45) = "a"
'
    dropping space
check_literal:After drop space:'"' idx=6 '45) = "a"
'
  '"' != '4'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '45) = "a"
'
check_integer:ret1
check_number: ret1
scan_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '45) = "a"
'
check_integer:ret1
scan_integer:
scan_integer:ret0
check_eitem: ') = "a"
'
check_operator: ) = "a"

check_literal:lit=',' idx=8 ') = "a"
'
check_literal:After drop space:',' idx=8 ') = "a"
'
  ',' != ')'
check_literal: ret0
check_operator:ret0
check_function: ') = "a"
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=8 ') = "a"
'
    dropping space
check_literal:After drop space:'%' idx=8 ') = "a"
'
  '%' != ')'
check_literal: ret0
check_literal:lit=' "' idx=8 ') = "a"
'
    dropping space
check_literal:After drop space:'"' idx=8 ') = "a"
'
  '"' != ')'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ') = "a"
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname ') = "a"
':
check_vname ret0 ') = "a"
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=8 ') = "a"
'
    dropping space
check_literal:After drop space:'(' idx=8 ') = "a"
'
  '(' != ')'
check_literal: ret0
check_sub_expr: ret0
check_eitem:ret0
scan_expression: ret1 ') = "a"
'
check_literal:lit=' ,' idx=8 ') = "a"
'
    dropping space
check_literal:After drop space:',' idx=8 ') = "a"
'
  ',' != ')'
check_literal: ret0
scan_literal:lit=' )' ') = "a"
'
scan_literal:After drop space:) = "a"

scan_literal:while loop:) = "a"

scan_variable:ret1 vname='G$' is str:1 int:0 flt:0 ary:1
VAR INFO: '                G$' gbl:0 ref:1 int:0 flt:0 str:1 ary:1 max_str:0 max_ary:0 num_ind:1
scan_literal:lit=' =' ' = "a"
'
scan_literal:After drop space:= "a"

scan_literal:while loop:= "a"

scan_expression: ' "a"
'
check_eitem: '"a"
'
check_operator: "a"

check_literal:lit=',' idx=12 '"a"
'
check_literal:After drop space:',' idx=12 '"a"
'
  ',' != '"'
check_literal: ret0
check_operator:ret0
check_function: '"a"
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=12 '"a"
'
    dropping space
check_literal:After drop space:'%' idx=12 '"a"
'
  '%' != '"'
check_literal: ret0
check_literal:lit=' "' idx=12 '"a"
'
    dropping space
check_literal:After drop space:'"' idx=12 '"a"
'
check_literal:After while():a"

check_literal:ret1 
check_eitem:ret1
scan_eitem:
check_operator: "a"

check_literal:lit=',' idx=12 '"a"
'
check_literal:After drop space:',' idx=12 '"a"
'
  ',' != '"'
check_literal: ret0
check_operator:ret0
check_function: '"a"
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=12 '"a"
'
    dropping space
check_literal:After drop space:'%' idx=12 '"a"
'
  '%' != '"'
check_literal: ret0
check_literal:lit=' "' idx=12 '"a"
'
    dropping space
check_literal:After drop space:'"' idx=12 '"a"
'
check_literal:After while():a"

check_literal:ret1 
scan_atom:
check_literal:lit=' %' idx=12 '"a"
'
    dropping space
check_literal:After drop space:'%' idx=12 '"a"
'
  '%' != '"'
check_literal: ret0
check_literal:lit=' "' idx=12 '"a"
'
    dropping space
check_literal:After drop space:'"' idx=12 '"a"
'
check_literal:After while():a"

check_literal:ret1 
scan_string:
scan_literal:lit=' "' '"a"
'
scan_literal:After drop space:"a"

scan_literal:while loop:"a"

  (in if) 'a"
'
  (in wh) 'a"
'
  (in wh) '"
'
scan_string: ret1
check_eitem: '
'
check_operator: 

check_literal:lit=',' idx=16 ''
check_literal:After drop space:',' idx=16 ''
check_literal  ret0 Empty test string
check_operator:ret0
check_function: ''
check_function: ret0
check_atom:
check_literal:lit=' %' idx=15 '
'
    dropping space
check_literal:After drop space:'%' idx=16 ''
check_literal  ret0 Empty test string
check_literal:lit=' "' idx=15 '
'
    dropping space
check_literal:After drop space:'"' idx=16 ''
check_literal  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ''
check_integer:ret0
check_number: ret0
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=15 '
'
    dropping space
check_literal:After drop space:'(' idx=16 ''
check_literal  ret0 Empty test string
check_sub_expr: ret0
check_eitem:ret0
scan_expression: ret1 '
'
scan_assignment: ret1
check_literal:lit=':' idx=16 ''
check_literal:After drop space:':' idx=16 ''
check_literal  ret0 Empty test string
cline scanned OK
=======================cline==========================
==A%=1
==
scan_cline:
check_line:
check_assignment:
check_variable:
check_vname 'A%=1
':
check_vname ret1 '%=1
':
check_variable: '%=1
'
check_variable: Ary test '=1
'
check_literal:lit='(' idx=2 '=1
'
check_literal:After drop space:'(' idx=2 '=1
'
  '(' != '='
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_literal:lit=' =' idx=2 '=1
'
    dropping space
check_literal:After drop space:'=' idx=2 '=1
'
check_literal:After while():1

check_literal:ret1 
check_expression: '1
'
check_eitem: '1
'
check_operator: 1

check_literal:lit=',' idx=3 '1
'
check_literal:After drop space:',' idx=3 '1
'
  ',' != '1'
check_literal: ret0
check_operator:ret0
check_function: '1
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=3 '1
'
    dropping space
check_literal:After drop space:'%' idx=3 '1
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=3 '1
'
    dropping space
check_literal:After drop space:'"' idx=3 '1
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '1
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: '
'
check_operator: 

check_literal:lit=',' idx=5 ''
check_literal:After drop space:',' idx=5 ''
check_literal  ret0 Empty test string
check_operator:ret0
check_function: ''
check_function: ret0
check_atom:
check_literal:lit=' %' idx=4 '
'
    dropping space
check_literal:After drop space:'%' idx=5 ''
check_literal  ret0 Empty test string
check_literal:lit=' "' idx=4 '
'
    dropping space
check_literal:After drop space:'"' idx=5 ''
check_literal  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ''
check_integer:ret0
check_number: ret0
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=4 '
'
    dropping space
check_literal:After drop space:'(' idx=5 ''
check_literal  ret0 Empty test string
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 '
'
check_assignment:ret1
check_line:ret1
scan_cline: Checked len=1, '
'
scan_line:
check_assignment:
check_variable:
check_vname 'A%=1
':
check_vname ret1 '%=1
':
check_variable: '%=1
'
check_variable: Ary test '=1
'
check_literal:lit='(' idx=2 '=1
'
check_literal:After drop space:'(' idx=2 '=1
'
  '(' != '='
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_literal:lit=' =' idx=2 '=1
'
    dropping space
check_literal:After drop space:'=' idx=2 '=1
'
check_literal:After while():1

check_literal:ret1 
check_expression: '1
'
check_eitem: '1
'
check_operator: 1

check_literal:lit=',' idx=3 '1
'
check_literal:After drop space:',' idx=3 '1
'
  ',' != '1'
check_literal: ret0
check_operator:ret0
check_function: '1
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=3 '1
'
    dropping space
check_literal:After drop space:'%' idx=3 '1
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=3 '1
'
    dropping space
check_literal:After drop space:'"' idx=3 '1
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '1
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: '
'
check_operator: 

check_literal:lit=',' idx=5 ''
check_literal:After drop space:',' idx=5 ''
check_literal  ret0 Empty test string
check_operator:ret0
check_function: ''
check_function: ret0
check_atom:
check_literal:lit=' %' idx=4 '
'
    dropping space
check_literal:After drop space:'%' idx=5 ''
check_literal  ret0 Empty test string
check_literal:lit=' "' idx=4 '
'
    dropping space
check_literal:After drop space:'"' idx=5 ''
check_literal  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ''
check_integer:ret0
check_number: ret0
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=4 '
'
    dropping space
check_literal:After drop space:'(' idx=5 ''
check_literal  ret0 Empty test string
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 '
'
check_assignment:ret1
scan_assignment:
scan_variable:
scan_vname: 'A%=1
'
scan_vname: ret1 'A'
scan_variable: '%=1
' vname='A'
scan_variable: Ary test '=1
'
check_literal:lit='(' idx=2 '=1
'
check_literal:After drop space:'(' idx=2 '=1
'
  '(' != '='
check_literal: ret0
scan_variable:ret1 vname='A%' is str:0 int:1 flt:0 ary:0
VAR INFO: '                A%' gbl:0 ref:1 int:1 flt:0 str:0 ary:0 max_str:0 max_ary:0 num_ind:0
scan_literal:lit=' =' '=1
'
scan_literal:After drop space:=1

scan_literal:while loop:=1

scan_expression: '1
'
check_eitem: '1
'
check_operator: 1

check_literal:lit=',' idx=3 '1
'
check_literal:After drop space:',' idx=3 '1
'
  ',' != '1'
check_literal: ret0
check_operator:ret0
check_function: '1
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=3 '1
'
    dropping space
check_literal:After drop space:'%' idx=3 '1
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=3 '1
'
    dropping space
check_literal:After drop space:'"' idx=3 '1
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '1
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
scan_eitem:
check_operator: 1

check_literal:lit=',' idx=3 '1
'
check_literal:After drop space:',' idx=3 '1
'
  ',' != '1'
check_literal: ret0
check_operator:ret0
check_function: '1
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=3 '1
'
    dropping space
check_literal:After drop space:'%' idx=3 '1
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=3 '1
'
    dropping space
check_literal:After drop space:'"' idx=3 '1
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '1
'
check_integer:ret1
check_number: ret1
scan_atom:
check_literal:lit=' %' idx=3 '1
'
    dropping space
check_literal:After drop space:'%' idx=3 '1
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=3 '1
'
    dropping space
check_literal:After drop space:'"' idx=3 '1
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '1
'
check_integer:ret1
check_number: ret1
scan_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '1
'
check_integer:ret1
scan_integer:
scan_integer:ret0
check_eitem: ''
check_operator: 
check_literal:lit=',' idx=5 ''
check_literal:After drop space:',' idx=5 ''
check_literal  ret0 Empty test string
check_operator:ret0
check_function: ''
check_function: ret0
check_atom:
check_literal:lit=' %' idx=5 ''
    dropping space
check_literal:After drop space:'%' idx=5 ''
check_literal  ret0 Empty test string
check_literal:lit=' "' idx=5 ''
    dropping space
check_literal:After drop space:'"' idx=5 ''
check_literal  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ''
check_integer:ret0
check_number: ret0
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=5 ''
    dropping space
check_literal:After drop space:'(' idx=5 ''
check_literal  ret0 Empty test string
check_sub_expr: ret0
check_eitem:ret0
scan_expression: ret1 ''
scan_assignment: ret1
check_literal:lit=':' idx=5 ''
check_literal:After drop space:':' idx=5 ''
check_literal  ret0 Empty test string
cline scanned OK
=======================cline==========================
==B%=3
==
scan_cline:
check_line:
check_assignment:
check_variable:
check_vname 'B%=3
':
check_vname ret1 '%=3
':
check_variable: '%=3
'
check_variable: Ary test '=3
'
check_literal:lit='(' idx=2 '=3
'
check_literal:After drop space:'(' idx=2 '=3
'
  '(' != '='
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_literal:lit=' =' idx=2 '=3
'
    dropping space
check_literal:After drop space:'=' idx=2 '=3
'
check_literal:After while():3

check_literal:ret1 
check_expression: '3
'
check_eitem: '3
'
check_operator: 3

check_literal:lit=',' idx=3 '3
'
check_literal:After drop space:',' idx=3 '3
'
  ',' != '3'
check_literal: ret0
check_operator:ret0
check_function: '3
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=3 '3
'
    dropping space
check_literal:After drop space:'%' idx=3 '3
'
  '%' != '3'
check_literal: ret0
check_literal:lit=' "' idx=3 '3
'
    dropping space
check_literal:After drop space:'"' idx=3 '3
'
  '"' != '3'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '3
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: '
'
check_operator: 

check_literal:lit=',' idx=5 ''
check_literal:After drop space:',' idx=5 ''
check_literal  ret0 Empty test string
check_operator:ret0
check_function: ''
check_function: ret0
check_atom:
check_literal:lit=' %' idx=4 '
'
    dropping space
check_literal:After drop space:'%' idx=5 ''
check_literal  ret0 Empty test string
check_literal:lit=' "' idx=4 '
'
    dropping space
check_literal:After drop space:'"' idx=5 ''
check_literal  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ''
check_integer:ret0
check_number: ret0
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=4 '
'
    dropping space
check_literal:After drop space:'(' idx=5 ''
check_literal  ret0 Empty test string
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 '
'
check_assignment:ret1
check_line:ret1
scan_cline: Checked len=1, '
'
scan_line:
check_assignment:
check_variable:
check_vname 'B%=3
':
check_vname ret1 '%=3
':
check_variable: '%=3
'
check_variable: Ary test '=3
'
check_literal:lit='(' idx=2 '=3
'
check_literal:After drop space:'(' idx=2 '=3
'
  '(' != '='
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_literal:lit=' =' idx=2 '=3
'
    dropping space
check_literal:After drop space:'=' idx=2 '=3
'
check_literal:After while():3

check_literal:ret1 
check_expression: '3
'
check_eitem: '3
'
check_operator: 3

check_literal:lit=',' idx=3 '3
'
check_literal:After drop space:',' idx=3 '3
'
  ',' != '3'
check_literal: ret0
check_operator:ret0
check_function: '3
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=3 '3
'
    dropping space
check_literal:After drop space:'%' idx=3 '3
'
  '%' != '3'
check_literal: ret0
check_literal:lit=' "' idx=3 '3
'
    dropping space
check_literal:After drop space:'"' idx=3 '3
'
  '"' != '3'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '3
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: '
'
check_operator: 

check_literal:lit=',' idx=5 ''
check_literal:After drop space:',' idx=5 ''
check_literal  ret0 Empty test string
check_operator:ret0
check_function: ''
check_function: ret0
check_atom:
check_literal:lit=' %' idx=4 '
'
    dropping space
check_literal:After drop space:'%' idx=5 ''
check_literal  ret0 Empty test string
check_literal:lit=' "' idx=4 '
'
    dropping space
check_literal:After drop space:'"' idx=5 ''
check_literal  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ''
check_integer:ret0
check_number: ret0
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=4 '
'
    dropping space
check_literal:After drop space:'(' idx=5 ''
check_literal  ret0 Empty test string
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 '
'
check_assignment:ret1
scan_assignment:
scan_variable:
scan_vname: 'B%=3
'
scan_vname: ret1 'B'
scan_variable: '%=3
' vname='B'
scan_variable: Ary test '=3
'
check_literal:lit='(' idx=2 '=3
'
check_literal:After drop space:'(' idx=2 '=3
'
  '(' != '='
check_literal: ret0
scan_variable:ret1 vname='B%' is str:0 int:1 flt:0 ary:0
VAR INFO: '                B%' gbl:0 ref:1 int:1 flt:0 str:0 ary:0 max_str:0 max_ary:0 num_ind:0
scan_literal:lit=' =' '=3
'
scan_literal:After drop space:=3

scan_literal:while loop:=3

scan_expression: '3
'
check_eitem: '3
'
check_operator: 3

check_literal:lit=',' idx=3 '3
'
check_literal:After drop space:',' idx=3 '3
'
  ',' != '3'
check_literal: ret0
check_operator:ret0
check_function: '3
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=3 '3
'
    dropping space
check_literal:After drop space:'%' idx=3 '3
'
  '%' != '3'
check_literal: ret0
check_literal:lit=' "' idx=3 '3
'
    dropping space
check_literal:After drop space:'"' idx=3 '3
'
  '"' != '3'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '3
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
scan_eitem:
check_operator: 3

check_literal:lit=',' idx=3 '3
'
check_literal:After drop space:',' idx=3 '3
'
  ',' != '3'
check_literal: ret0
check_operator:ret0
check_function: '3
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=3 '3
'
    dropping space
check_literal:After drop space:'%' idx=3 '3
'
  '%' != '3'
check_literal: ret0
check_literal:lit=' "' idx=3 '3
'
    dropping space
check_literal:After drop space:'"' idx=3 '3
'
  '"' != '3'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '3
'
check_integer:ret1
check_number: ret1
scan_atom:
check_literal:lit=' %' idx=3 '3
'
    dropping space
check_literal:After drop space:'%' idx=3 '3
'
  '%' != '3'
check_literal: ret0
check_literal:lit=' "' idx=3 '3
'
    dropping space
check_literal:After drop space:'"' idx=3 '3
'
  '"' != '3'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '3
'
check_integer:ret1
check_number: ret1
scan_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '3
'
check_integer:ret1
scan_integer:
scan_integer:ret0
check_eitem: ''
check_operator: 
check_literal:lit=',' idx=5 ''
check_literal:After drop space:',' idx=5 ''
check_literal  ret0 Empty test string
check_operator:ret0
check_function: ''
check_function: ret0
check_atom:
check_literal:lit=' %' idx=5 ''
    dropping space
check_literal:After drop space:'%' idx=5 ''
check_literal  ret0 Empty test string
check_literal:lit=' "' idx=5 ''
    dropping space
check_literal:After drop space:'"' idx=5 ''
check_literal  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ''
check_integer:ret0
check_number: ret0
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=5 ''
    dropping space
check_literal:After drop space:'(' idx=5 ''
check_literal  ret0 Empty test string
check_sub_expr: ret0
check_eitem:ret0
scan_expression: ret1 ''
scan_assignment: ret1
check_literal:lit=':' idx=5 ''
check_literal:After drop space:':' idx=5 ''
check_literal  ret0 Empty test string
cline scanned OK
=======================cline==========================
==A%=1:B%=9
==
scan_cline:
check_line:
check_assignment:
check_variable:
check_vname 'A%=1:B%=9
':
check_vname ret1 '%=1:B%=9
':
check_variable: '%=1:B%=9
'
check_variable: Ary test '=1:B%=9
'
check_literal:lit='(' idx=2 '=1:B%=9
'
check_literal:After drop space:'(' idx=2 '=1:B%=9
'
  '(' != '='
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_literal:lit=' =' idx=2 '=1:B%=9
'
    dropping space
check_literal:After drop space:'=' idx=2 '=1:B%=9
'
check_literal:After while():1:B%=9

check_literal:ret1 
check_expression: '1:B%=9
'
check_eitem: '1:B%=9
'
check_operator: 1:B%=9

check_literal:lit=',' idx=3 '1:B%=9
'
check_literal:After drop space:',' idx=3 '1:B%=9
'
  ',' != '1'
check_literal: ret0
check_operator:ret0
check_function: '1:B%=9
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=3 '1:B%=9
'
    dropping space
check_literal:After drop space:'%' idx=3 '1:B%=9
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=3 '1:B%=9
'
    dropping space
check_literal:After drop space:'"' idx=3 '1:B%=9
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '1:B%=9
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: ':B%=9
'
check_operator: :B%=9

check_literal:lit=',' idx=4 ':B%=9
'
check_literal:After drop space:',' idx=4 ':B%=9
'
  ',' != ':'
check_literal: ret0
check_operator:ret0
check_function: ':B%=9
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=4 ':B%=9
'
    dropping space
check_literal:After drop space:'%' idx=4 ':B%=9
'
  '%' != ':'
check_literal: ret0
check_literal:lit=' "' idx=4 ':B%=9
'
    dropping space
check_literal:After drop space:'"' idx=4 ':B%=9
'
  '"' != ':'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ':B%=9
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname ':B%=9
':
check_vname ret0 ':B%=9
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=4 ':B%=9
'
    dropping space
check_literal:After drop space:'(' idx=4 ':B%=9
'
  '(' != ':'
check_literal: ret0
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 ':B%=9
'
check_assignment:ret1
check_line:ret1
scan_cline: Checked len=6, ':B%=9
'
scan_line:
check_assignment:
check_variable:
check_vname 'A%=1:B%=9
':
check_vname ret1 '%=1:B%=9
':
check_variable: '%=1:B%=9
'
check_variable: Ary test '=1:B%=9
'
check_literal:lit='(' idx=2 '=1:B%=9
'
check_literal:After drop space:'(' idx=2 '=1:B%=9
'
  '(' != '='
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_literal:lit=' =' idx=2 '=1:B%=9
'
    dropping space
check_literal:After drop space:'=' idx=2 '=1:B%=9
'
check_literal:After while():1:B%=9

check_literal:ret1 
check_expression: '1:B%=9
'
check_eitem: '1:B%=9
'
check_operator: 1:B%=9

check_literal:lit=',' idx=3 '1:B%=9
'
check_literal:After drop space:',' idx=3 '1:B%=9
'
  ',' != '1'
check_literal: ret0
check_operator:ret0
check_function: '1:B%=9
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=3 '1:B%=9
'
    dropping space
check_literal:After drop space:'%' idx=3 '1:B%=9
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=3 '1:B%=9
'
    dropping space
check_literal:After drop space:'"' idx=3 '1:B%=9
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '1:B%=9
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: ':B%=9
'
check_operator: :B%=9

check_literal:lit=',' idx=4 ':B%=9
'
check_literal:After drop space:',' idx=4 ':B%=9
'
  ',' != ':'
check_literal: ret0
check_operator:ret0
check_function: ':B%=9
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=4 ':B%=9
'
    dropping space
check_literal:After drop space:'%' idx=4 ':B%=9
'
  '%' != ':'
check_literal: ret0
check_literal:lit=' "' idx=4 ':B%=9
'
    dropping space
check_literal:After drop space:'"' idx=4 ':B%=9
'
  '"' != ':'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ':B%=9
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname ':B%=9
':
check_vname ret0 ':B%=9
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=4 ':B%=9
'
    dropping space
check_literal:After drop space:'(' idx=4 ':B%=9
'
  '(' != ':'
check_literal: ret0
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 ':B%=9
'
check_assignment:ret1
scan_assignment:
scan_variable:
scan_vname: 'A%=1:B%=9
'
scan_vname: ret1 'A'
scan_variable: '%=1:B%=9
' vname='A'
scan_variable: Ary test '=1:B%=9
'
check_literal:lit='(' idx=2 '=1:B%=9
'
check_literal:After drop space:'(' idx=2 '=1:B%=9
'
  '(' != '='
check_literal: ret0
scan_variable:ret1 vname='A%' is str:0 int:1 flt:0 ary:0
VAR INFO: '                A%' gbl:0 ref:1 int:1 flt:0 str:0 ary:0 max_str:0 max_ary:0 num_ind:0
scan_literal:lit=' =' '=1:B%=9
'
scan_literal:After drop space:=1:B%=9

scan_literal:while loop:=1:B%=9

scan_expression: '1:B%=9
'
check_eitem: '1:B%=9
'
check_operator: 1:B%=9

check_literal:lit=',' idx=3 '1:B%=9
'
check_literal:After drop space:',' idx=3 '1:B%=9
'
  ',' != '1'
check_literal: ret0
check_operator:ret0
check_function: '1:B%=9
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=3 '1:B%=9
'
    dropping space
check_literal:After drop space:'%' idx=3 '1:B%=9
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=3 '1:B%=9
'
    dropping space
check_literal:After drop space:'"' idx=3 '1:B%=9
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '1:B%=9
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
scan_eitem:
check_operator: 1:B%=9

check_literal:lit=',' idx=3 '1:B%=9
'
check_literal:After drop space:',' idx=3 '1:B%=9
'
  ',' != '1'
check_literal: ret0
check_operator:ret0
check_function: '1:B%=9
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=3 '1:B%=9
'
    dropping space
check_literal:After drop space:'%' idx=3 '1:B%=9
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=3 '1:B%=9
'
    dropping space
check_literal:After drop space:'"' idx=3 '1:B%=9
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '1:B%=9
'
check_integer:ret1
check_number: ret1
scan_atom:
check_literal:lit=' %' idx=3 '1:B%=9
'
    dropping space
check_literal:After drop space:'%' idx=3 '1:B%=9
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=3 '1:B%=9
'
    dropping space
check_literal:After drop space:'"' idx=3 '1:B%=9
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '1:B%=9
'
check_integer:ret1
check_number: ret1
scan_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '1:B%=9
'
check_integer:ret1
scan_integer:
scan_integer:ret0
check_eitem: ':B%=9
'
check_operator: :B%=9

check_literal:lit=',' idx=4 ':B%=9
'
check_literal:After drop space:',' idx=4 ':B%=9
'
  ',' != ':'
check_literal: ret0
check_operator:ret0
check_function: ':B%=9
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=4 ':B%=9
'
    dropping space
check_literal:After drop space:'%' idx=4 ':B%=9
'
  '%' != ':'
check_literal: ret0
check_literal:lit=' "' idx=4 ':B%=9
'
    dropping space
check_literal:After drop space:'"' idx=4 ':B%=9
'
  '"' != ':'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ':B%=9
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname ':B%=9
':
check_vname ret0 ':B%=9
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=4 ':B%=9
'
    dropping space
check_literal:After drop space:'(' idx=4 ':B%=9
'
  '(' != ':'
check_literal: ret0
check_sub_expr: ret0
check_eitem:ret0
scan_expression: ret1 ':B%=9
'
scan_assignment: ret1
check_literal:lit=':' idx=4 ':B%=9
'
check_literal:After drop space:':' idx=4 ':B%=9
'
check_literal:After while():B%=9

check_literal:ret1 
scan_literal:lit=':' 'B%=9
'
scan_literal:After drop space:B%=9

scan_literal:while loop:B%=9

check_line:
check_assignment:
check_variable:
check_vname 'B%=9
':
check_vname ret1 '%=9
':
check_variable: '%=9
'
check_variable: Ary test '=9
'
check_literal:lit='(' idx=7 '=9
'
check_literal:After drop space:'(' idx=7 '=9
'
  '(' != '='
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_literal:lit=' =' idx=7 '=9
'
    dropping space
check_literal:After drop space:'=' idx=7 '=9
'
check_literal:After while():9

check_literal:ret1 
check_expression: '9
'
check_eitem: '9
'
check_operator: 9

check_literal:lit=',' idx=8 '9
'
check_literal:After drop space:',' idx=8 '9
'
  ',' != '9'
check_literal: ret0
check_operator:ret0
check_function: '9
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=8 '9
'
    dropping space
check_literal:After drop space:'%' idx=8 '9
'
  '%' != '9'
check_literal: ret0
check_literal:lit=' "' idx=8 '9
'
    dropping space
check_literal:After drop space:'"' idx=8 '9
'
  '"' != '9'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '9
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: '
'
check_operator: 

check_literal:lit=',' idx=10 ''
check_literal:After drop space:',' idx=10 ''
check_literal  ret0 Empty test string
check_operator:ret0
check_function: ''
check_function: ret0
check_atom:
check_literal:lit=' %' idx=9 '
'
    dropping space
check_literal:After drop space:'%' idx=10 ''
check_literal  ret0 Empty test string
check_literal:lit=' "' idx=9 '
'
    dropping space
check_literal:After drop space:'"' idx=10 ''
check_literal  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ''
check_integer:ret0
check_number: ret0
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=9 '
'
    dropping space
check_literal:After drop space:'(' idx=10 ''
check_literal  ret0 Empty test string
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 '
'
check_assignment:ret1
check_line:ret1
scan_cline: Checked len=1, '
'
scan_line:
check_assignment:
check_variable:
check_vname 'B%=9
':
check_vname ret1 '%=9
':
check_variable: '%=9
'
check_variable: Ary test '=9
'
check_literal:lit='(' idx=7 '=9
'
check_literal:After drop space:'(' idx=7 '=9
'
  '(' != '='
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_literal:lit=' =' idx=7 '=9
'
    dropping space
check_literal:After drop space:'=' idx=7 '=9
'
check_literal:After while():9

check_literal:ret1 
check_expression: '9
'
check_eitem: '9
'
check_operator: 9

check_literal:lit=',' idx=8 '9
'
check_literal:After drop space:',' idx=8 '9
'
  ',' != '9'
check_literal: ret0
check_operator:ret0
check_function: '9
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=8 '9
'
    dropping space
check_literal:After drop space:'%' idx=8 '9
'
  '%' != '9'
check_literal: ret0
check_literal:lit=' "' idx=8 '9
'
    dropping space
check_literal:After drop space:'"' idx=8 '9
'
  '"' != '9'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '9
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: '
'
check_operator: 

check_literal:lit=',' idx=10 ''
check_literal:After drop space:',' idx=10 ''
check_literal  ret0 Empty test string
check_operator:ret0
check_function: ''
check_function: ret0
check_atom:
check_literal:lit=' %' idx=9 '
'
    dropping space
check_literal:After drop space:'%' idx=10 ''
check_literal  ret0 Empty test string
check_literal:lit=' "' idx=9 '
'
    dropping space
check_literal:After drop space:'"' idx=10 ''
check_literal  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ''
check_integer:ret0
check_number: ret0
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=9 '
'
    dropping space
check_literal:After drop space:'(' idx=10 ''
check_literal  ret0 Empty test string
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 '
'
check_assignment:ret1
scan_assignment:
scan_variable:
scan_vname: 'B%=9
'
scan_vname: ret1 'B'
scan_variable: '%=9
' vname='B'
scan_variable: Ary test '=9
'
check_literal:lit='(' idx=7 '=9
'
check_literal:After drop space:'(' idx=7 '=9
'
  '(' != '='
check_literal: ret0
scan_variable:ret1 vname='B%' is str:0 int:1 flt:0 ary:0
VAR INFO: '                B%' gbl:0 ref:1 int:1 flt:0 str:0 ary:0 max_str:0 max_ary:0 num_ind:0
scan_literal:lit=' =' '=9
'
scan_literal:After drop space:=9

scan_literal:while loop:=9

scan_expression: '9
'
check_eitem: '9
'
check_operator: 9

check_literal:lit=',' idx=8 '9
'
check_literal:After drop space:',' idx=8 '9
'
  ',' != '9'
check_literal: ret0
check_operator:ret0
check_function: '9
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=8 '9
'
    dropping space
check_literal:After drop space:'%' idx=8 '9
'
  '%' != '9'
check_literal: ret0
check_literal:lit=' "' idx=8 '9
'
    dropping space
check_literal:After drop space:'"' idx=8 '9
'
  '"' != '9'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '9
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
scan_eitem:
check_operator: 9

check_literal:lit=',' idx=8 '9
'
check_literal:After drop space:',' idx=8 '9
'
  ',' != '9'
check_literal: ret0
check_operator:ret0
check_function: '9
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=8 '9
'
    dropping space
check_literal:After drop space:'%' idx=8 '9
'
  '%' != '9'
check_literal: ret0
check_literal:lit=' "' idx=8 '9
'
    dropping space
check_literal:After drop space:'"' idx=8 '9
'
  '"' != '9'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '9
'
check_integer:ret1
check_number: ret1
scan_atom:
check_literal:lit=' %' idx=8 '9
'
    dropping space
check_literal:After drop space:'%' idx=8 '9
'
  '%' != '9'
check_literal: ret0
check_literal:lit=' "' idx=8 '9
'
    dropping space
check_literal:After drop space:'"' idx=8 '9
'
  '"' != '9'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '9
'
check_integer:ret1
check_number: ret1
scan_number:
check_float:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '9
'
check_integer:ret1
scan_integer:
scan_integer:ret0
check_eitem: ''
check_operator: 
check_literal:lit=',' idx=10 ''
check_literal:After drop space:',' idx=10 ''
check_literal  ret0 Empty test string
check_operator:ret0
check_function: ''
check_function: ret0
check_atom:
check_literal:lit=' %' idx=10 ''
    dropping space
check_literal:After drop space:'%' idx=10 ''
check_literal  ret0 Empty test string
check_literal:lit=' "' idx=10 ''
    dropping space
check_literal:After drop space:'"' idx=10 ''
check_literal  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ''
check_integer:ret0
check_number: ret0
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=10 ''
    dropping space
check_literal:After drop space:'(' idx=10 ''
check_literal  ret0 Empty test string
check_sub_expr: ret0
check_eitem:ret0
scan_expression: ret1 ''
scan_assignment: ret1
check_literal:lit=':' idx=10 ''
check_literal:After drop space:':' idx=10 ''
check_literal  ret0 Empty test string
cline scanned OK
=======================cline==========================
==Z%=a%(34)
==
scan_cline:
check_line:
check_assignment:
check_variable:
check_vname 'Z%=a%(34)
':
check_vname ret1 '%=a%(34)
':
check_variable: '%=a%(34)
'
check_variable: Ary test '=a%(34)
'
check_literal:lit='(' idx=2 '=a%(34)
'
check_literal:After drop space:'(' idx=2 '=a%(34)
'
  '(' != '='
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_literal:lit=' =' idx=2 '=a%(34)
'
    dropping space
check_literal:After drop space:'=' idx=2 '=a%(34)
'
check_literal:After while():a%(34)

check_literal:ret1 
check_expression: 'a%(34)
'
check_eitem: 'a%(34)
'
check_operator: a%(34)

check_literal:lit=',' idx=3 'a%(34)
'
check_literal:After drop space:',' idx=3 'a%(34)
'
  ',' != 'a'
check_literal: ret0
check_operator:ret0
check_function: 'a%(34)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=3 'a%(34)
'
    dropping space
check_literal:After drop space:'%' idx=3 'a%(34)
'
  '%' != 'a'
check_literal: ret0
check_literal:lit=' "' idx=3 'a%(34)
'
    dropping space
check_literal:After drop space:'"' idx=3 'a%(34)
'
  '"' != 'a'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'a%(34)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'a%(34)
':
check_vname ret1 '%(34)
':
check_variable: '%(34)
'
check_variable: Ary test '(34)
'
check_literal:lit='(' idx=5 '(34)
'
check_literal:After drop space:'(' idx=5 '(34)
'
check_literal:After while():34)

check_literal:ret1 
check_variable: is array
check_expression: '34)
'
check_eitem: '34)
'
check_operator: 34)

check_literal:lit=',' idx=6 '34)
'
check_literal:After drop space:',' idx=6 '34)
'
  ',' != '3'
check_literal: ret0
check_operator:ret0
check_function: '34)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=6 '34)
'
    dropping space
check_literal:After drop space:'%' idx=6 '34)
'
  '%' != '3'
check_literal: ret0
check_literal:lit=' "' idx=6 '34)
'
    dropping space
check_literal:After drop space:'"' idx=6 '34)
'
  '"' != '3'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '34)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: ')
'
check_operator: )

check_literal:lit=',' idx=8 ')
'
check_literal:After drop space:',' idx=8 ')
'
  ',' != ')'
check_literal: ret0
check_operator:ret0
check_function: ')
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=8 ')
'
    dropping space
check_literal:After drop space:'%' idx=8 ')
'
  '%' != ')'
check_literal: ret0
check_literal:lit=' "' idx=8 ')
'
    dropping space
check_literal:After drop space:'"' idx=8 ')
'
  '"' != ')'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ')
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname ')
':
check_vname ret0 ')
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=8 ')
'
    dropping space
check_literal:After drop space:'(' idx=8 ')
'
  '(' != ')'
check_literal: ret0
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 ')
'
check_literal:lit=' ,' idx=8 ')
'
    dropping space
check_literal:After drop space:',' idx=8 ')
'
  ',' != ')'
check_literal: ret0
check_literal:lit=' )' idx=8 ')
'
    dropping space
check_literal:After drop space:')' idx=8 ')
'
check_literal:After while():

check_literal:ret1 
check_variable:ret1 
check_eitem:ret1
check_eitem: '
'
check_operator: 

check_literal:lit=',' idx=10 ''
check_literal:After drop space:',' idx=10 ''
check_literal  ret0 Empty test string
check_operator:ret0
check_function: ''
check_function: ret0
check_atom:
check_literal:lit=' %' idx=9 '
'
    dropping space
check_literal:After drop space:'%' idx=10 ''
check_literal  ret0 Empty test string
check_literal:lit=' "' idx=9 '
'
    dropping space
check_literal:After drop space:'"' idx=10 ''
check_literal  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ''
check_integer:ret0
check_number: ret0
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=9 '
'
    dropping space
check_literal:After drop space:'(' idx=10 ''
check_literal  ret0 Empty test string
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 '
'
check_assignment:ret1
check_line:ret1
scan_cline: Checked len=1, '
'
scan_line:
check_assignment:
check_variable:
check_vname 'Z%=a%(34)
':
check_vname ret1 '%=a%(34)
':
check_variable: '%=a%(34)
'
check_variable: Ary test '=a%(34)
'
check_literal:lit='(' idx=2 '=a%(34)
'
check_literal:After drop space:'(' idx=2 '=a%(34)
'
  '(' != '='
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_literal:lit=' =' idx=2 '=a%(34)
'
    dropping space
check_literal:After drop space:'=' idx=2 '=a%(34)
'
check_literal:After while():a%(34)

check_literal:ret1 
check_expression: 'a%(34)
'
check_eitem: 'a%(34)
'
check_operator: a%(34)

check_literal:lit=',' idx=3 'a%(34)
'
check_literal:After drop space:',' idx=3 'a%(34)
'
  ',' != 'a'
check_literal: ret0
check_operator:ret0
check_function: 'a%(34)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=3 'a%(34)
'
    dropping space
check_literal:After drop space:'%' idx=3 'a%(34)
'
  '%' != 'a'
check_literal: ret0
check_literal:lit=' "' idx=3 'a%(34)
'
    dropping space
check_literal:After drop space:'"' idx=3 'a%(34)
'
  '"' != 'a'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'a%(34)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'a%(34)
':
check_vname ret1 '%(34)
':
check_variable: '%(34)
'
check_variable: Ary test '(34)
'
check_literal:lit='(' idx=5 '(34)
'
check_literal:After drop space:'(' idx=5 '(34)
'
check_literal:After while():34)

check_literal:ret1 
check_variable: is array
check_expression: '34)
'
check_eitem: '34)
'
check_operator: 34)

check_literal:lit=',' idx=6 '34)
'
check_literal:After drop space:',' idx=6 '34)
'
  ',' != '3'
check_literal: ret0
check_operator:ret0
check_function: '34)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=6 '34)
'
    dropping space
check_literal:After drop space:'%' idx=6 '34)
'
  '%' != '3'
check_literal: ret0
check_literal:lit=' "' idx=6 '34)
'
    dropping space
check_literal:After drop space:'"' idx=6 '34)
'
  '"' != '3'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '34)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: ')
'
check_operator: )

check_literal:lit=',' idx=8 ')
'
check_literal:After drop space:',' idx=8 ')
'
  ',' != ')'
check_literal: ret0
check_operator:ret0
check_function: ')
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=8 ')
'
    dropping space
check_literal:After drop space:'%' idx=8 ')
'
  '%' != ')'
check_literal: ret0
check_literal:lit=' "' idx=8 ')
'
    dropping space
check_literal:After drop space:'"' idx=8 ')
'
  '"' != ')'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ')
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname ')
':
check_vname ret0 ')
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=8 ')
'
    dropping space
check_literal:After drop space:'(' idx=8 ')
'
  '(' != ')'
check_literal: ret0
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 ')
'
check_literal:lit=' ,' idx=8 ')
'
    dropping space
check_literal:After drop space:',' idx=8 ')
'
  ',' != ')'
check_literal: ret0
check_literal:lit=' )' idx=8 ')
'
    dropping space
check_literal:After drop space:')' idx=8 ')
'
check_literal:After while():

check_literal:ret1 
check_variable:ret1 
check_eitem:ret1
check_eitem: '
'
check_operator: 

check_literal:lit=',' idx=10 ''
check_literal:After drop space:',' idx=10 ''
check_literal  ret0 Empty test string
check_operator:ret0
check_function: ''
check_function: ret0
check_atom:
check_literal:lit=' %' idx=9 '
'
    dropping space
check_literal:After drop space:'%' idx=10 ''
check_literal  ret0 Empty test string
check_literal:lit=' "' idx=9 '
'
    dropping space
check_literal:After drop space:'"' idx=10 ''
check_literal  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ''
check_integer:ret0
check_number: ret0
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=9 '
'
    dropping space
check_literal:After drop space:'(' idx=10 ''
check_literal  ret0 Empty test string
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 '
'
check_assignment:ret1
scan_assignment:
scan_variable:
scan_vname: 'Z%=a%(34)
'
scan_vname: ret1 'Z'
scan_variable: '%=a%(34)
' vname='Z'
scan_variable: Ary test '=a%(34)
'
check_literal:lit='(' idx=2 '=a%(34)
'
check_literal:After drop space:'(' idx=2 '=a%(34)
'
  '(' != '='
check_literal: ret0
scan_variable:ret1 vname='Z%' is str:0 int:1 flt:0 ary:0
VAR INFO: '                Z%' gbl:0 ref:1 int:1 flt:0 str:0 ary:0 max_str:0 max_ary:0 num_ind:0
scan_literal:lit=' =' '=a%(34)
'
scan_literal:After drop space:=a%(34)

scan_literal:while loop:=a%(34)

scan_expression: 'a%(34)
'
check_eitem: 'a%(34)
'
check_operator: a%(34)

check_literal:lit=',' idx=3 'a%(34)
'
check_literal:After drop space:',' idx=3 'a%(34)
'
  ',' != 'a'
check_literal: ret0
check_operator:ret0
check_function: 'a%(34)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=3 'a%(34)
'
    dropping space
check_literal:After drop space:'%' idx=3 'a%(34)
'
  '%' != 'a'
check_literal: ret0
check_literal:lit=' "' idx=3 'a%(34)
'
    dropping space
check_literal:After drop space:'"' idx=3 'a%(34)
'
  '"' != 'a'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'a%(34)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'a%(34)
':
check_vname ret1 '%(34)
':
check_variable: '%(34)
'
check_variable: Ary test '(34)
'
check_literal:lit='(' idx=5 '(34)
'
check_literal:After drop space:'(' idx=5 '(34)
'
check_literal:After while():34)

check_literal:ret1 
check_variable: is array
check_expression: '34)
'
check_eitem: '34)
'
check_operator: 34)

check_literal:lit=',' idx=6 '34)
'
check_literal:After drop space:',' idx=6 '34)
'
  ',' != '3'
check_literal: ret0
check_operator:ret0
check_function: '34)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=6 '34)
'
    dropping space
check_literal:After drop space:'%' idx=6 '34)
'
  '%' != '3'
check_literal: ret0
check_literal:lit=' "' idx=6 '34)
'
    dropping space
check_literal:After drop space:'"' idx=6 '34)
'
  '"' != '3'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '34)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: ')
'
check_operator: )

check_literal:lit=',' idx=8 ')
'
check_literal:After drop space:',' idx=8 ')
'
  ',' != ')'
check_literal: ret0
check_operator:ret0
check_function: ')
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=8 ')
'
    dropping space
check_literal:After drop space:'%' idx=8 ')
'
  '%' != ')'
check_literal: ret0
check_literal:lit=' "' idx=8 ')
'
    dropping space
check_literal:After drop space:'"' idx=8 ')
'
  '"' != ')'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ')
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname ')
':
check_vname ret0 ')
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=8 ')
'
    dropping space
check_literal:After drop space:'(' idx=8 ')
'
  '(' != ')'
check_literal: ret0
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 ')
'
check_literal:lit=' ,' idx=8 ')
'
    dropping space
check_literal:After drop space:',' idx=8 ')
'
  ',' != ')'
check_literal: ret0
check_literal:lit=' )' idx=8 ')
'
    dropping space
check_literal:After drop space:')' idx=8 ')
'
check_literal:After while():

check_literal:ret1 
check_variable:ret1 
check_eitem:ret1
scan_eitem:
check_operator: a%(34)

check_literal:lit=',' idx=3 'a%(34)
'
check_literal:After drop space:',' idx=3 'a%(34)
'
  ',' != 'a'
check_literal: ret0
check_operator:ret0
check_function: 'a%(34)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=3 'a%(34)
'
    dropping space
check_literal:After drop space:'%' idx=3 'a%(34)
'
  '%' != 'a'
check_literal: ret0
check_literal:lit=' "' idx=3 'a%(34)
'
    dropping space
check_literal:After drop space:'"' idx=3 'a%(34)
'
  '"' != 'a'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'a%(34)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'a%(34)
':
check_vname ret1 '%(34)
':
check_variable: '%(34)
'
check_variable: Ary test '(34)
'
check_literal:lit='(' idx=5 '(34)
'
check_literal:After drop space:'(' idx=5 '(34)
'
check_literal:After while():34)

check_literal:ret1 
check_variable: is array
check_expression: '34)
'
check_eitem: '34)
'
check_operator: 34)

check_literal:lit=',' idx=6 '34)
'
check_literal:After drop space:',' idx=6 '34)
'
  ',' != '3'
check_literal: ret0
check_operator:ret0
check_function: '34)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=6 '34)
'
    dropping space
check_literal:After drop space:'%' idx=6 '34)
'
  '%' != '3'
check_literal: ret0
check_literal:lit=' "' idx=6 '34)
'
    dropping space
check_literal:After drop space:'"' idx=6 '34)
'
  '"' != '3'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '34)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: ')
'
check_operator: )

check_literal:lit=',' idx=8 ')
'
check_literal:After drop space:',' idx=8 ')
'
  ',' != ')'
check_literal: ret0
check_operator:ret0
check_function: ')
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=8 ')
'
    dropping space
check_literal:After drop space:'%' idx=8 ')
'
  '%' != ')'
check_literal: ret0
check_literal:lit=' "' idx=8 ')
'
    dropping space
check_literal:After drop space:'"' idx=8 ')
'
  '"' != ')'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ')
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname ')
':
check_vname ret0 ')
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=8 ')
'
    dropping space
check_literal:After drop space:'(' idx=8 ')
'
  '(' != ')'
check_literal: ret0
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 ')
'
check_literal:lit=' ,' idx=8 ')
'
    dropping space
check_literal:After drop space:',' idx=8 ')
'
  ',' != ')'
check_literal: ret0
check_literal:lit=' )' idx=8 ')
'
    dropping space
check_literal:After drop space:')' idx=8 ')
'
check_literal:After while():

check_literal:ret1 
check_variable:ret1 
scan_atom:
check_literal:lit=' %' idx=3 'a%(34)
'
    dropping space
check_literal:After drop space:'%' idx=3 'a%(34)
'
  '%' != 'a'
check_literal: ret0
check_literal:lit=' "' idx=3 'a%(34)
'
    dropping space
check_literal:After drop space:'"' idx=3 'a%(34)
'
  '"' != 'a'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'a%(34)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'a%(34)
':
check_vname ret1 '%(34)
':
check_variable: '%(34)
'
check_variable: Ary test '(34)
'
check_literal:lit='(' idx=5 '(34)
'
check_literal:After drop space:'(' idx=5 '(34)
'
check_literal:After while():34)

check_literal:ret1 
check_variable: is array
check_expression: '34)
'
check_eitem: '34)
'
check_operator: 34)

check_literal:lit=',' idx=6 '34)
'
check_literal:After drop space:',' idx=6 '34)
'
  ',' != '3'
check_literal: ret0
check_operator:ret0
check_function: '34)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=6 '34)
'
    dropping space
check_literal:After drop space:'%' idx=6 '34)
'
  '%' != '3'
check_literal: ret0
check_literal:lit=' "' idx=6 '34)
'
    dropping space
check_literal:After drop space:'"' idx=6 '34)
'
  '"' != '3'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '34)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
check_eitem: ')
'
check_operator: )

check_literal:lit=',' idx=8 ')
'
check_literal:After drop space:',' idx=8 ')
'
  ',' != ')'
check_literal: ret0
check_operator:ret0
check_function: ')
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=8 ')
'
    dropping space
check_literal:After drop space:'%' idx=8 ')
'
  '%' != ')'
check_literal: ret0
check_literal:lit=' "' idx=8 ')
'
    dropping space
check_literal:After drop space:'"' idx=8 ')
'
  '"' != ')'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ')
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname ')
':
check_vname ret0 ')
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=8 ')
'
    dropping space
check_literal:After drop space:'(' idx=8 ')
'
  '(' != ')'
check_literal: ret0
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 ')
'
check_literal:lit=' ,' idx=8 ')
'
    dropping space
check_literal:After drop space:',' idx=8 ')
'
  ',' != ')'
check_literal: ret0
check_literal:lit=' )' idx=8 ')
'
    dropping space
check_literal:After drop space:')' idx=8 ')
'
check_literal:After while():

check_literal:ret1 
check_variable:ret1 
scan_variable:
scan_vname: 'a%(34)
'
scan_vname: ret1 'a'
scan_variable: '%(34)
' vname='a'
scan_variable: Ary test '(34)
'
check_literal:lit='(' idx=5 '(34)
'
check_literal:After drop space:'(' idx=5 '(34)
'
check_literal:After while():34)

check_literal:ret1 
scan_literal:lit='(' '(34)
'
scan_literal:After drop space:(34)

scan_literal:while loop:(34)

scan_variable: is array
scan_expression: '34)
'
check_eitem: '34)
'
check_operator: 34)

check_literal:lit=',' idx=6 '34)
'
check_literal:After drop space:',' idx=6 '34)
'
  ',' != '3'
check_literal: ret0
check_operator:ret0
check_function: '34)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=6 '34)
'
    dropping space
check_literal:After drop space:'%' idx=6 '34)
'
  '%' != '3'
check_literal: ret0
check_literal:lit=' "' idx=6 '34)
'
    dropping space
check_literal:After drop space:'"' idx=6 '34)
'
  '"' != '3'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '34)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
scan_eitem:
check_operator: 34)

check_literal:lit=',' idx=6 '34)
'
check_literal:After drop space:',' idx=6 '34)
'
  ',' != '3'
check_literal: ret0
check_operator:ret0
check_function: '34)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=6 '34)
'
    dropping space
check_literal:After drop space:'%' idx=6 '34)
'
  '%' != '3'
check_literal: ret0
check_literal:lit=' "' idx=6 '34)
'
    dropping space
check_literal:After drop space:'"' idx=6 '34)
'
  '"' != '3'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '34)
'
check_integer:ret1
check_number: ret1
scan_atom:
check_literal:lit=' %' idx=6 '34)
'
    dropping space
check_literal:After drop space:'%' idx=6 '34)
'
  '%' != '3'
check_literal: ret0
check_literal:lit=' "' idx=6 '34)
'
    dropping space
check_literal:After drop space:'"' idx=6 '34)
'
  '"' != '3'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '34)
'
check_integer:ret1
check_number: ret1
scan_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '34)
'
check_integer:ret1
scan_integer:
scan_integer:ret0
check_eitem: ')
'
check_operator: )

check_literal:lit=',' idx=8 ')
'
check_literal:After drop space:',' idx=8 ')
'
  ',' != ')'
check_literal: ret0
check_operator:ret0
check_function: ')
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=8 ')
'
    dropping space
check_literal:After drop space:'%' idx=8 ')
'
  '%' != ')'
check_literal: ret0
check_literal:lit=' "' idx=8 ')
'
    dropping space
check_literal:After drop space:'"' idx=8 ')
'
  '"' != ')'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ')
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname ')
':
check_vname ret0 ')
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=8 ')
'
    dropping space
check_literal:After drop space:'(' idx=8 ')
'
  '(' != ')'
check_literal: ret0
check_sub_expr: ret0
check_eitem:ret0
scan_expression: ret1 ')
'
check_literal:lit=' ,' idx=8 ')
'
    dropping space
check_literal:After drop space:',' idx=8 ')
'
  ',' != ')'
check_literal: ret0
scan_literal:lit=' )' ')
'
scan_literal:After drop space:)

scan_literal:while loop:)

scan_variable:ret1 vname='a%' is str:0 int:1 flt:0 ary:1
VAR INFO: '                a%' gbl:0 ref:1 int:1 flt:0 str:0 ary:1 max_str:0 max_ary:0 num_ind:1
check_eitem: '
'
check_operator: 

check_literal:lit=',' idx=10 ''
check_literal:After drop space:',' idx=10 ''
check_literal  ret0 Empty test string
check_operator:ret0
check_function: ''
check_function: ret0
check_atom:
check_literal:lit=' %' idx=9 '
'
    dropping space
check_literal:After drop space:'%' idx=10 ''
check_literal  ret0 Empty test string
check_literal:lit=' "' idx=9 '
'
    dropping space
check_literal:After drop space:'"' idx=10 ''
check_literal  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ''
check_integer:ret0
check_number: ret0
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=9 '
'
    dropping space
check_literal:After drop space:'(' idx=10 ''
check_literal  ret0 Empty test string
check_sub_expr: ret0
check_eitem:ret0
scan_expression: ret1 '
'
scan_assignment: ret1
check_literal:lit=':' idx=10 ''
check_literal:After drop space:':' idx=10 ''
check_literal  ret0 Empty test string
cline scanned OK
=======================cline==========================
==POKEB 181,U%(A%)
==
scan_cline:
check_line:
check_assignment:
check_variable:
check_vname 'POKEB 181,U%(A%)
':
check_vname ret1 ' 181,U%(A%)
':
check_variable: ' 181,U%(A%)
'
check_variable: Ary test ' 181,U%(A%)
'
check_literal:lit='(' idx=5 ' 181,U%(A%)
'
check_literal:After drop space:'(' idx=5 ' 181,U%(A%)
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variable:ret1 
check_literal:lit=' =' idx=5 ' 181,U%(A%)
'
    dropping space
check_literal:After drop space:'=' idx=6 '181,U%(A%)
'
  '=' != '1'
check_literal: ret0
check_assignment:ret0
check_proc_call:
check_textlabel: 'POKEB 181,U%(A%)
'
check_textlabel:ret0
check_proc_call:ret0
check_command:
check_command: ret1 found=> 'POKEB'
check_line:ret1
scan_cline: Checked len=12, ' 181,U%(A%)
'
scan_line:
check_assignment:
check_variable:
check_vname 'POKEB 181,U%(A%)
':
check_vname ret1 ' 181,U%(A%)
':
check_variable: ' 181,U%(A%)
'
check_variable: Ary test ' 181,U%(A%)
'
check_literal:lit='(' idx=5 ' 181,U%(A%)
'
check_literal:After drop space:'(' idx=5 ' 181,U%(A%)
'
  '(' != ' '
check_literal: ret0
check_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variable:ret1 
check_literal:lit=' =' idx=5 ' 181,U%(A%)
'
    dropping space
check_literal:After drop space:'=' idx=6 '181,U%(A%)
'
  '=' != '1'
check_literal: ret0
check_assignment:ret0
check_proc_call:
check_textlabel: 'POKEB 181,U%(A%)
'
check_textlabel:ret0
check_proc_call:ret0
check_command:
check_command: ret1 found=> 'POKEB'
scan_line:check_command: 
scan_command:
scan_expression: ' 181,U%(A%)
'
check_eitem: '181,U%(A%)
'
check_operator: 181,U%(A%)

check_literal:lit=',' idx=6 '181,U%(A%)
'
check_literal:After drop space:',' idx=6 '181,U%(A%)
'
  ',' != '1'
check_literal: ret0
check_operator:ret0
check_function: '181,U%(A%)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=6 '181,U%(A%)
'
    dropping space
check_literal:After drop space:'%' idx=6 '181,U%(A%)
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=6 '181,U%(A%)
'
    dropping space
check_literal:After drop space:'"' idx=6 '181,U%(A%)
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '181,U%(A%)
'
check_integer:ret1
check_number: ret1
check_eitem:ret1
scan_eitem:
check_operator: 181,U%(A%)

check_literal:lit=',' idx=6 '181,U%(A%)
'
check_literal:After drop space:',' idx=6 '181,U%(A%)
'
  ',' != '1'
check_literal: ret0
check_operator:ret0
check_function: '181,U%(A%)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=6 '181,U%(A%)
'
    dropping space
check_literal:After drop space:'%' idx=6 '181,U%(A%)
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=6 '181,U%(A%)
'
    dropping space
check_literal:After drop space:'"' idx=6 '181,U%(A%)
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '181,U%(A%)
'
check_integer:ret1
check_number: ret1
scan_atom:
check_literal:lit=' %' idx=6 '181,U%(A%)
'
    dropping space
check_literal:After drop space:'%' idx=6 '181,U%(A%)
'
  '%' != '1'
check_literal: ret0
check_literal:lit=' "' idx=6 '181,U%(A%)
'
    dropping space
check_literal:After drop space:'"' idx=6 '181,U%(A%)
'
  '"' != '1'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '181,U%(A%)
'
check_integer:ret1
check_number: ret1
scan_number:
check_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_float: ret0
check_integer: '181,U%(A%)
'
check_integer:ret1
scan_integer:
scan_integer:ret0
check_eitem: ',U%(A%)
'
check_operator: ,U%(A%)

check_literal:lit=',' idx=9 ',U%(A%)
'
check_literal:After drop space:',' idx=9 ',U%(A%)
'
check_literal:After while():U%(A%)

check_literal:ret1 
scan_literal:lit=',' ',U%(A%)
'
scan_literal:After drop space:,U%(A%)

scan_literal:while loop:,U%(A%)

check_eitem:ret1
scan_eitem:
check_operator: U%(A%)

check_literal:lit=',' idx=10 'U%(A%)
'
check_literal:After drop space:',' idx=10 'U%(A%)
'
  ',' != 'U'
check_literal: ret0
check_operator:ret0
check_function: 'U%(A%)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=10 'U%(A%)
'
    dropping space
check_literal:After drop space:'%' idx=10 'U%(A%)
'
  '%' != 'U'
check_literal: ret0
check_literal:lit=' "' idx=10 'U%(A%)
'
    dropping space
check_literal:After drop space:'"' idx=10 'U%(A%)
'
  '"' != 'U'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'U%(A%)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'U%(A%)
':
check_vname ret1 '%(A%)
':
check_variable: '%(A%)
'
check_variable: Ary test '(A%)
'
check_literal:lit='(' idx=12 '(A%)
'
check_literal:After drop space:'(' idx=12 '(A%)
'
check_literal:After while():A%)

check_literal:ret1 
check_variable: is array
check_expression: 'A%)
'
check_eitem: 'A%)
'
check_operator: A%)

check_literal:lit=',' idx=13 'A%)
'
check_literal:After drop space:',' idx=13 'A%)
'
  ',' != 'A'
check_literal: ret0
check_operator:ret0
check_function: 'A%)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=13 'A%)
'
    dropping space
check_literal:After drop space:'%' idx=13 'A%)
'
  '%' != 'A'
check_literal: ret0
check_literal:lit=' "' idx=13 'A%)
'
    dropping space
check_literal:After drop space:'"' idx=13 'A%)
'
  '"' != 'A'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'A%)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'A%)
':
check_vname ret1 '%)
':
check_variable: '%)
'
check_variable: Ary test ')
'
check_literal:lit='(' idx=15 ')
'
check_literal:After drop space:'(' idx=15 ')
'
  '(' != ')'
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_eitem:ret1
check_eitem: ')
'
check_operator: )

check_literal:lit=',' idx=15 ')
'
check_literal:After drop space:',' idx=15 ')
'
  ',' != ')'
check_literal: ret0
check_operator:ret0
check_function: ')
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=15 ')
'
    dropping space
check_literal:After drop space:'%' idx=15 ')
'
  '%' != ')'
check_literal: ret0
check_literal:lit=' "' idx=15 ')
'
    dropping space
check_literal:After drop space:'"' idx=15 ')
'
  '"' != ')'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ')
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname ')
':
check_vname ret0 ')
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=15 ')
'
    dropping space
check_literal:After drop space:'(' idx=15 ')
'
  '(' != ')'
check_literal: ret0
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 ')
'
check_literal:lit=' ,' idx=15 ')
'
    dropping space
check_literal:After drop space:',' idx=15 ')
'
  ',' != ')'
check_literal: ret0
check_literal:lit=' )' idx=15 ')
'
    dropping space
check_literal:After drop space:')' idx=15 ')
'
check_literal:After while():

check_literal:ret1 
check_variable:ret1 
scan_atom:
check_literal:lit=' %' idx=10 'U%(A%)
'
    dropping space
check_literal:After drop space:'%' idx=10 'U%(A%)
'
  '%' != 'U'
check_literal: ret0
check_literal:lit=' "' idx=10 'U%(A%)
'
    dropping space
check_literal:After drop space:'"' idx=10 'U%(A%)
'
  '"' != 'U'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'U%(A%)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'U%(A%)
':
check_vname ret1 '%(A%)
':
check_variable: '%(A%)
'
check_variable: Ary test '(A%)
'
check_literal:lit='(' idx=12 '(A%)
'
check_literal:After drop space:'(' idx=12 '(A%)
'
check_literal:After while():A%)

check_literal:ret1 
check_variable: is array
check_expression: 'A%)
'
check_eitem: 'A%)
'
check_operator: A%)

check_literal:lit=',' idx=13 'A%)
'
check_literal:After drop space:',' idx=13 'A%)
'
  ',' != 'A'
check_literal: ret0
check_operator:ret0
check_function: 'A%)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=13 'A%)
'
    dropping space
check_literal:After drop space:'%' idx=13 'A%)
'
  '%' != 'A'
check_literal: ret0
check_literal:lit=' "' idx=13 'A%)
'
    dropping space
check_literal:After drop space:'"' idx=13 'A%)
'
  '"' != 'A'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'A%)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'A%)
':
check_vname ret1 '%)
':
check_variable: '%)
'
check_variable: Ary test ')
'
check_literal:lit='(' idx=15 ')
'
check_literal:After drop space:'(' idx=15 ')
'
  '(' != ')'
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_eitem:ret1
check_eitem: ')
'
check_operator: )

check_literal:lit=',' idx=15 ')
'
check_literal:After drop space:',' idx=15 ')
'
  ',' != ')'
check_literal: ret0
check_operator:ret0
check_function: ')
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=15 ')
'
    dropping space
check_literal:After drop space:'%' idx=15 ')
'
  '%' != ')'
check_literal: ret0
check_literal:lit=' "' idx=15 ')
'
    dropping space
check_literal:After drop space:'"' idx=15 ')
'
  '"' != ')'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ')
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname ')
':
check_vname ret0 ')
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=15 ')
'
    dropping space
check_literal:After drop space:'(' idx=15 ')
'
  '(' != ')'
check_literal: ret0
check_sub_expr: ret0
check_eitem:ret0
check_expression:ret1 ')
'
check_literal:lit=' ,' idx=15 ')
'
    dropping space
check_literal:After drop space:',' idx=15 ')
'
  ',' != ')'
check_literal: ret0
check_literal:lit=' )' idx=15 ')
'
    dropping space
check_literal:After drop space:')' idx=15 ')
'
check_literal:After while():

check_literal:ret1 
check_variable:ret1 
scan_variable:
scan_vname: 'U%(A%)
'
scan_vname: ret1 'U'
scan_variable: '%(A%)
' vname='U'
scan_variable: Ary test '(A%)
'
check_literal:lit='(' idx=12 '(A%)
'
check_literal:After drop space:'(' idx=12 '(A%)
'
check_literal:After while():A%)

check_literal:ret1 
scan_literal:lit='(' '(A%)
'
scan_literal:After drop space:(A%)

scan_literal:while loop:(A%)

scan_variable: is array
scan_expression: 'A%)
'
check_eitem: 'A%)
'
check_operator: A%)

check_literal:lit=',' idx=13 'A%)
'
check_literal:After drop space:',' idx=13 'A%)
'
  ',' != 'A'
check_literal: ret0
check_operator:ret0
check_function: 'A%)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=13 'A%)
'
    dropping space
check_literal:After drop space:'%' idx=13 'A%)
'
  '%' != 'A'
check_literal: ret0
check_literal:lit=' "' idx=13 'A%)
'
    dropping space
check_literal:After drop space:'"' idx=13 'A%)
'
  '"' != 'A'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'A%)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'A%)
':
check_vname ret1 '%)
':
check_variable: '%)
'
check_variable: Ary test ')
'
check_literal:lit='(' idx=15 ')
'
check_literal:After drop space:'(' idx=15 ')
'
  '(' != ')'
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
check_eitem:ret1
scan_eitem:
check_operator: A%)

check_literal:lit=',' idx=13 'A%)
'
check_literal:After drop space:',' idx=13 'A%)
'
  ',' != 'A'
check_literal: ret0
check_operator:ret0
check_function: 'A%)
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=13 'A%)
'
    dropping space
check_literal:After drop space:'%' idx=13 'A%)
'
  '%' != 'A'
check_literal: ret0
check_literal:lit=' "' idx=13 'A%)
'
    dropping space
check_literal:After drop space:'"' idx=13 'A%)
'
  '"' != 'A'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'A%)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'A%)
':
check_vname ret1 '%)
':
check_variable: '%)
'
check_variable: Ary test ')
'
check_literal:lit='(' idx=15 ')
'
check_literal:After drop space:'(' idx=15 ')
'
  '(' != ')'
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
scan_atom:
check_literal:lit=' %' idx=13 'A%)
'
    dropping space
check_literal:After drop space:'%' idx=13 'A%)
'
  '%' != 'A'
check_literal: ret0
check_literal:lit=' "' idx=13 'A%)
'
    dropping space
check_literal:After drop space:'"' idx=13 'A%)
'
  '"' != 'A'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: 'A%)
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname 'A%)
':
check_vname ret1 '%)
':
check_variable: '%)
'
check_variable: Ary test ')
'
check_literal:lit='(' idx=15 ')
'
check_literal:After drop space:'(' idx=15 ')
'
  '(' != ')'
check_literal: ret0
check_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variable:ret1 
scan_variable:
scan_vname: 'A%)
'
scan_vname: ret1 'A'
scan_variable: '%)
' vname='A'
scan_variable: Ary test ')
'
check_literal:lit='(' idx=15 ')
'
check_literal:After drop space:'(' idx=15 ')
'
  '(' != ')'
check_literal: ret0
scan_variable:ret1 vname='A%' is str:0 int:1 flt:0 ary:0
VAR INFO: '                A%' gbl:0 ref:1 int:1 flt:0 str:0 ary:0 max_str:0 max_ary:0 num_ind:0
check_eitem: ')
'
check_operator: )

check_literal:lit=',' idx=15 ')
'
check_literal:After drop space:',' idx=15 ')
'
  ',' != ')'
check_literal: ret0
check_operator:ret0
check_function: ')
'
check_function: ret0
check_atom:
check_literal:lit=' %' idx=15 ')
'
    dropping space
check_literal:After drop space:'%' idx=15 ')
'
  '%' != ')'
check_literal: ret0
check_literal:lit=' "' idx=15 ')
'
    dropping space
check_literal:After drop space:'"' idx=15 ')
'
  '"' != ')'
check_literal: ret0
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ')
'
check_integer:ret0
check_number: ret0
check_variable:
check_vname ')
':
check_vname ret0 ')
':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=15 ')
'
    dropping space
check_literal:After drop space:'(' idx=15 ')
'
  '(' != ')'
check_literal: ret0
check_sub_expr: ret0
check_eitem:ret0
scan_expression: ret1 ')
'
check_literal:lit=' ,' idx=15 ')
'
    dropping space
check_literal:After drop space:',' idx=15 ')
'
  ',' != ')'
check_literal: ret0
scan_literal:lit=' )' ')
'
scan_literal:After drop space:)

scan_literal:while loop:)

scan_variable:ret1 vname='U%' is str:0 int:1 flt:0 ary:1
VAR INFO: '                U%' gbl:0 ref:1 int:1 flt:0 str:0 ary:1 max_str:0 max_ary:0 num_ind:1
check_eitem: '
'
check_operator: 

check_literal:lit=',' idx=17 ''
check_literal:After drop space:',' idx=17 ''
check_literal  ret0 Empty test string
check_operator:ret0
check_function: ''
check_function: ret0
check_atom:
check_literal:lit=' %' idx=16 '
'
    dropping space
check_literal:After drop space:'%' idx=17 ''
check_literal  ret0 Empty test string
check_literal:lit=' "' idx=16 '
'
    dropping space
check_literal:After drop space:'"' idx=17 ''
check_literal  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_float: ret0
check_integer: ''
check_integer:ret0
check_number: ret0
check_variable:
check_vname '':
check_vname ret0 '':
check_variable:ret0 
check_sub_expr:
check_literal:lit=' (' idx=16 '
'
    dropping space
check_literal:After drop space:'(' idx=17 ''
check_literal  ret0 Empty test string
check_sub_expr: ret0
check_eitem:ret0
scan_expression: ret1 '
'
scan_command: ret1 =>'POKEB'
check_literal:lit=':' idx=17 ''
check_literal:After drop space:':' idx=17 ''
check_literal  ret0 Empty test string
cline scanned OK

 37 lines scanned Ok
 0 lines scanned failed
 8 lines blank


=======================cline==========================
==PRINT "abc"
==
scan_cline:
check_line:
check_assignment:
check_vname 'PRINT "abc"
':
check_literal:lit=' = ' ' PRINT "abc"
'
    dropping space
check_literal:After drop space:'= ' 'PRINT "abc"
'
  '=' != 'P'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_cline: Checked len=12, 'PRINT "abc"
'
scan_line:
check_assignment:
check_vname 'PRINT "abc"
':
check_literal:lit=' = ' ' PRINT "abc"
'
    dropping space
check_literal:After drop space:'= ' 'PRINT "abc"
'
  '=' != 'P'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_line:check_command:1 
scan_command:
scan_expression: ' "abc"
'
check_eitem:
check_operator:
check_atom:
check_literal:lit=' "' '  "abc"
'
    dropping space
check_literal:After drop space:'"' '"abc"
'
check_literal:After while():abc"

ret1
scan_eitem:
check_operator:
check_atom:
check_literal:lit=' "' '  "abc"
'
    dropping space
check_literal:After drop space:'"' '"abc"
'
check_literal:After while():abc"

ret1
scan_atom:
check_literal:lit=' "' '  "abc"
'
    dropping space
check_literal:After drop space:'"' '"abc"
'
check_literal:After while():abc"

ret1
scan_string:
scan_literal:lit=' "' ' "abc"
'
scan_literal:After drop space:"abc"

scan_literal:while loop:"abc"

  (in if) 'abc"
'
  (in wh) 'abc"
'
  (in wh) 'bc"
'
  (in wh) 'bc"
'
  (in wh) 'c"
'
  (in wh) 'c"
'
  (in wh) '"
'
scan_string: ret1
check_eitem:
check_operator:
check_atom:
check_literal:lit=' "' ' 
'
    dropping space
check_literal:After drop space:'"' ''
  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname '':
check_sub_expr:
check_literal:lit=' ( ' ' '
    dropping space
check_literal:After drop space:'( ' ''
  ret0 Empty test string
scan_command: ret1 =>'PRINT'
check_literal:lit=':' ' '
check_literal:After drop space:':' ''
  ret0 Empty test string
cline scanned OK
=======================cline==========================
==PRINT "asdfgh"
==
scan_cline:
check_line:
check_assignment:
check_vname 'PRINT "asdfgh"
':
check_literal:lit=' = ' ' PRINT "asdfgh"
'
    dropping space
check_literal:After drop space:'= ' 'PRINT "asdfgh"
'
  '=' != 'P'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_cline: Checked len=15, 'PRINT "asdfgh"
'
scan_line:
check_assignment:
check_vname 'PRINT "asdfgh"
':
check_literal:lit=' = ' ' PRINT "asdfgh"
'
    dropping space
check_literal:After drop space:'= ' 'PRINT "asdfgh"
'
  '=' != 'P'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_line:check_command:1 
scan_command:
scan_expression: ' "asdfgh"
'
check_eitem:
check_operator:
check_atom:
check_literal:lit=' "' '  "asdfgh"
'
    dropping space
check_literal:After drop space:'"' '"asdfgh"
'
check_literal:After while():asdfgh"

ret1
scan_eitem:
check_operator:
check_atom:
check_literal:lit=' "' '  "asdfgh"
'
    dropping space
check_literal:After drop space:'"' '"asdfgh"
'
check_literal:After while():asdfgh"

ret1
scan_atom:
check_literal:lit=' "' '  "asdfgh"
'
    dropping space
check_literal:After drop space:'"' '"asdfgh"
'
check_literal:After while():asdfgh"

ret1
scan_string:
scan_literal:lit=' "' ' "asdfgh"
'
scan_literal:After drop space:"asdfgh"

scan_literal:while loop:"asdfgh"

  (in if) 'asdfgh"
'
  (in wh) 'asdfgh"
'
  (in wh) 'sdfgh"
'
  (in wh) 'sdfgh"
'
  (in wh) 'dfgh"
'
  (in wh) 'dfgh"
'
  (in wh) 'fgh"
'
  (in wh) 'fgh"
'
  (in wh) 'gh"
'
  (in wh) 'gh"
'
  (in wh) 'h"
'
  (in wh) 'h"
'
  (in wh) '"
'
scan_string: ret1
check_eitem:
check_operator:
check_atom:
check_literal:lit=' "' ' 
'
    dropping space
check_literal:After drop space:'"' ''
  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname '':
check_sub_expr:
check_literal:lit=' ( ' ' '
    dropping space
check_literal:After drop space:'( ' ''
  ret0 Empty test string
scan_command: ret1 =>'PRINT'
check_literal:lit=':' ' '
check_literal:After drop space:':' ''
  ret0 Empty test string
cline scanned OK
=======================cline==========================
==PRINT   "    abc    "
==
scan_cline:
check_line:
check_assignment:
check_vname 'PRINT   "    abc    "
':
check_literal:lit=' = ' ' PRINT   "    abc    "
'
    dropping space
check_literal:After drop space:'= ' 'PRINT   "    abc    "
'
  '=' != 'P'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_cline: Checked len=22, 'PRINT   "    abc    "
'
scan_line:
check_assignment:
check_vname 'PRINT   "    abc    "
':
check_literal:lit=' = ' ' PRINT   "    abc    "
'
    dropping space
check_literal:After drop space:'= ' 'PRINT   "    abc    "
'
  '=' != 'P'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_line:check_command:1 
scan_command:
scan_expression: '   "    abc    "
'
check_eitem:
check_operator:
check_atom:
check_literal:lit=' "' '    "    abc    "
'
    dropping space
check_literal:After drop space:'"' '"    abc    "
'
check_literal:After while():    abc    "

ret1
scan_eitem:
check_operator:
check_atom:
check_literal:lit=' "' '    "    abc    "
'
    dropping space
check_literal:After drop space:'"' '"    abc    "
'
check_literal:After while():    abc    "

ret1
scan_atom:
check_literal:lit=' "' '    "    abc    "
'
    dropping space
check_literal:After drop space:'"' '"    abc    "
'
check_literal:After while():    abc    "

ret1
scan_string:
scan_literal:lit=' "' '   "    abc    "
'
scan_literal:After drop space:"    abc    "

scan_literal:while loop:"    abc    "

  (in if) '    abc    "
'
  (in wh) '    abc    "
'
  (in wh) '   abc    "
'
  (in wh) '   abc    "
'
  (in wh) '  abc    "
'
  (in wh) '  abc    "
'
  (in wh) ' abc    "
'
  (in wh) ' abc    "
'
  (in wh) 'abc    "
'
  (in wh) 'abc    "
'
  (in wh) 'bc    "
'
  (in wh) 'bc    "
'
  (in wh) 'c    "
'
  (in wh) 'c    "
'
  (in wh) '    "
'
  (in wh) '    "
'
  (in wh) '   "
'
  (in wh) '   "
'
  (in wh) '  "
'
  (in wh) '  "
'
  (in wh) ' "
'
  (in wh) ' "
'
  (in wh) '"
'
scan_string: ret1
check_eitem:
check_operator:
check_atom:
check_literal:lit=' "' ' 
'
    dropping space
check_literal:After drop space:'"' ''
  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname '':
check_sub_expr:
check_literal:lit=' ( ' ' '
    dropping space
check_literal:After drop space:'( ' ''
  ret0 Empty test string
scan_command: ret1 =>'PRINT'
check_literal:lit=':' ' '
check_literal:After drop space:':' ''
  ret0 Empty test string
cline scanned OK
=======================cline==========================
==PRINT A%
==
scan_cline:
check_line:
check_assignment:
check_vname 'PRINT A%
':
check_literal:lit=' = ' ' PRINT A%
'
    dropping space
check_literal:After drop space:'= ' 'PRINT A%
'
  '=' != 'P'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_cline: Checked len=9, 'PRINT A%
'
scan_line:
check_assignment:
check_vname 'PRINT A%
':
check_literal:lit=' = ' ' PRINT A%
'
    dropping space
check_literal:After drop space:'= ' 'PRINT A%
'
  '=' != 'P'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_line:check_command:1 
scan_command:
scan_expression: ' A%
'
check_eitem:
check_operator:
check_atom:
check_literal:lit=' "' '  A%
'
    dropping space
check_literal:After drop space:'"' 'A%
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname ' A%
':
scan_eitem:
check_operator:
check_atom:
check_literal:lit=' "' '  A%
'
    dropping space
check_literal:After drop space:'"' 'A%
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname ' A%
':
scan_atom:
check_literal:lit=' "' '  A%
'
    dropping space
check_literal:After drop space:'"' 'A%
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname ' A%
':
scan_variable:
scan_vname:
scan_vname: ret1 'A'
check_literal:lit=' ( ' ' 
'
    dropping space
check_literal:After drop space:'( ' ''
  ret0 Empty test string
check_eitem:
check_operator:
check_atom:
check_literal:lit=' "' ' '
    dropping space
check_literal:After drop space:'"' ''
  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname '':
check_sub_expr:
check_literal:lit=' ( ' ' '
    dropping space
check_literal:After drop space:'( ' ''
  ret0 Empty test string
scan_command: ret1 =>'PRINT'
check_literal:lit=':' ' '
check_literal:After drop space:':' ''
  ret0 Empty test string
cline scanned OK
=======================cline==========================
==PRINT B
==
scan_cline:
check_line:
check_assignment:
check_vname 'PRINT B
':
check_literal:lit=' = ' ' PRINT B
'
    dropping space
check_literal:After drop space:'= ' 'PRINT B
'
  '=' != 'P'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_cline: Checked len=8, 'PRINT B
'
scan_line:
check_assignment:
check_vname 'PRINT B
':
check_literal:lit=' = ' ' PRINT B
'
    dropping space
check_literal:After drop space:'= ' 'PRINT B
'
  '=' != 'P'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_line:check_command:1 
scan_command:
scan_expression: ' B
'
check_eitem:
check_operator:
check_atom:
check_literal:lit=' "' '  B
'
    dropping space
check_literal:After drop space:'"' 'B
'
  '"' != 'B'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname ' B
':
scan_eitem:
check_operator:
check_atom:
check_literal:lit=' "' '  B
'
    dropping space
check_literal:After drop space:'"' 'B
'
  '"' != 'B'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname ' B
':
scan_atom:
check_literal:lit=' "' '  B
'
    dropping space
check_literal:After drop space:'"' 'B
'
  '"' != 'B'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname ' B
':
scan_variable:
scan_vname:
scan_vname: ret1 'B'
check_literal:lit=' ( ' ' '
    dropping space
check_literal:After drop space:'( ' ''
  ret0 Empty test string
check_eitem:
check_operator:
check_atom:
check_literal:lit=' "' ' '
    dropping space
check_literal:After drop space:'"' ''
  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname '':
check_sub_expr:
check_literal:lit=' ( ' ' '
    dropping space
check_literal:After drop space:'( ' ''
  ret0 Empty test string
scan_command: ret1 =>'PRINT'
check_literal:lit=':' ' '
check_literal:After drop space:':' ''
  ret0 Empty test string
cline scanned OK
=======================cline==========================
==PRINT ABC
==
scan_cline:
check_line:
check_assignment:
check_vname 'PRINT ABC
':
check_literal:lit=' = ' ' PRINT ABC
'
    dropping space
check_literal:After drop space:'= ' 'PRINT ABC
'
  '=' != 'P'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_cline: Checked len=10, 'PRINT ABC
'
scan_line:
check_assignment:
check_vname 'PRINT ABC
':
check_literal:lit=' = ' ' PRINT ABC
'
    dropping space
check_literal:After drop space:'= ' 'PRINT ABC
'
  '=' != 'P'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_line:check_command:1 
scan_command:
scan_expression: ' ABC
'
check_eitem:
check_operator:
check_atom:
check_literal:lit=' "' '  ABC
'
    dropping space
check_literal:After drop space:'"' 'ABC
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname ' ABC
':
scan_eitem:
check_operator:
check_atom:
check_literal:lit=' "' '  ABC
'
    dropping space
check_literal:After drop space:'"' 'ABC
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname ' ABC
':
scan_atom:
check_literal:lit=' "' '  ABC
'
    dropping space
check_literal:After drop space:'"' 'ABC
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname ' ABC
':
scan_variable:
scan_vname:
scan_vname: ret1 'ABC'
check_literal:lit=' ( ' ' '
    dropping space
check_literal:After drop space:'( ' ''
  ret0 Empty test string
check_eitem:
check_operator:
check_atom:
check_literal:lit=' "' ' '
    dropping space
check_literal:After drop space:'"' ''
  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname '':
check_sub_expr:
check_literal:lit=' ( ' ' '
    dropping space
check_literal:After drop space:'( ' ''
  ret0 Empty test string
scan_command: ret1 =>'PRINT'
check_literal:lit=':' ' '
check_literal:After drop space:':' ''
  ret0 Empty test string
cline scanned OK
=======================cline==========================
==PRINT ABC%
==
scan_cline:
check_line:
check_assignment:
check_vname 'PRINT ABC%
':
check_literal:lit=' = ' ' PRINT ABC%
'
    dropping space
check_literal:After drop space:'= ' 'PRINT ABC%
'
  '=' != 'P'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_cline: Checked len=11, 'PRINT ABC%
'
scan_line:
check_assignment:
check_vname 'PRINT ABC%
':
check_literal:lit=' = ' ' PRINT ABC%
'
    dropping space
check_literal:After drop space:'= ' 'PRINT ABC%
'
  '=' != 'P'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_line:check_command:1 
scan_command:
scan_expression: ' ABC%
'
check_eitem:
check_operator:
check_atom:
check_literal:lit=' "' '  ABC%
'
    dropping space
check_literal:After drop space:'"' 'ABC%
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname ' ABC%
':
scan_eitem:
check_operator:
check_atom:
check_literal:lit=' "' '  ABC%
'
    dropping space
check_literal:After drop space:'"' 'ABC%
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname ' ABC%
':
scan_atom:
check_literal:lit=' "' '  ABC%
'
    dropping space
check_literal:After drop space:'"' 'ABC%
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname ' ABC%
':
scan_variable:
scan_vname:
scan_vname: ret1 'ABC'
check_literal:lit=' ( ' ' 
'
    dropping space
check_literal:After drop space:'( ' ''
  ret0 Empty test string
check_eitem:
check_operator:
check_atom:
check_literal:lit=' "' ' '
    dropping space
check_literal:After drop space:'"' ''
  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname '':
check_sub_expr:
check_literal:lit=' ( ' ' '
    dropping space
check_literal:After drop space:'( ' ''
  ret0 Empty test string
scan_command: ret1 =>'PRINT'
check_literal:lit=':' ' '
check_literal:After drop space:':' ''
  ret0 Empty test string
cline scanned OK
=======================cline==========================
==PRINT A$
==
scan_cline:
check_line:
check_assignment:
check_vname 'PRINT A$
':
check_literal:lit=' = ' ' PRINT A$
'
    dropping space
check_literal:After drop space:'= ' 'PRINT A$
'
  '=' != 'P'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_cline: Checked len=9, 'PRINT A$
'
scan_line:
check_assignment:
check_vname 'PRINT A$
':
check_literal:lit=' = ' ' PRINT A$
'
    dropping space
check_literal:After drop space:'= ' 'PRINT A$
'
  '=' != 'P'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_line:check_command:1 
scan_command:
scan_expression: ' A$
'
check_eitem:
check_operator:
check_atom:
check_literal:lit=' "' '  A$
'
    dropping space
check_literal:After drop space:'"' 'A$
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname ' A$
':
scan_eitem:
check_operator:
check_atom:
check_literal:lit=' "' '  A$
'
    dropping space
check_literal:After drop space:'"' 'A$
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname ' A$
':
scan_atom:
check_literal:lit=' "' '  A$
'
    dropping space
check_literal:After drop space:'"' 'A$
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname ' A$
':
scan_variable:
scan_vname:
scan_vname: ret1 'A'
check_literal:lit=' ( ' ' 
'
    dropping space
check_literal:After drop space:'( ' ''
  ret0 Empty test string
check_eitem:
check_operator:
check_atom:
check_literal:lit=' "' ' '
    dropping space
check_literal:After drop space:'"' ''
  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname '':
check_sub_expr:
check_literal:lit=' ( ' ' '
    dropping space
check_literal:After drop space:'( ' ''
  ret0 Empty test string
scan_command: ret1 =>'PRINT'
check_literal:lit=':' ' '
check_literal:After drop space:':' ''
  ret0 Empty test string
cline scanned OK
=======================cline==========================
==PRINT DEF$
==
scan_cline:
check_line:
check_assignment:
check_vname 'PRINT DEF$
':
check_literal:lit=' = ' ' PRINT DEF$
'
    dropping space
check_literal:After drop space:'= ' 'PRINT DEF$
'
  '=' != 'P'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_cline: Checked len=11, 'PRINT DEF$
'
scan_line:
check_assignment:
check_vname 'PRINT DEF$
':
check_literal:lit=' = ' ' PRINT DEF$
'
    dropping space
check_literal:After drop space:'= ' 'PRINT DEF$
'
  '=' != 'P'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_line:check_command:1 
scan_command:
scan_expression: ' DEF$
'
check_eitem:
check_operator:
check_atom:
check_literal:lit=' "' '  DEF$
'
    dropping space
check_literal:After drop space:'"' 'DEF$
'
  '"' != 'D'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname ' DEF$
':
scan_eitem:
check_operator:
check_atom:
check_literal:lit=' "' '  DEF$
'
    dropping space
check_literal:After drop space:'"' 'DEF$
'
  '"' != 'D'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname ' DEF$
':
scan_atom:
check_literal:lit=' "' '  DEF$
'
    dropping space
check_literal:After drop space:'"' 'DEF$
'
  '"' != 'D'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname ' DEF$
':
scan_variable:
scan_vname:
scan_vname: ret1 'DEF'
check_literal:lit=' ( ' ' 
'
    dropping space
check_literal:After drop space:'( ' ''
  ret0 Empty test string
check_eitem:
check_operator:
check_atom:
check_literal:lit=' "' ' '
    dropping space
check_literal:After drop space:'"' ''
  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname '':
check_sub_expr:
check_literal:lit=' ( ' ' '
    dropping space
check_literal:After drop space:'( ' ''
  ret0 Empty test string
scan_command: ret1 =>'PRINT'
check_literal:lit=':' ' '
check_literal:After drop space:':' ''
  ret0 Empty test string
cline scanned OK

 9 lines scanned Ok
 0 lines scanned failed
 0 lines blank
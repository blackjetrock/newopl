
=======================cline==========================
==A= A + (2*3+3*Z%-   ABC%*1.1)
==
scan_cline:
check_line:
check_assignment:
check_variable:
check_vname 'A= A + (2*3+3*Z%-   ABC%*1.1)
':
check_vname ret1 '= A + (2*3+3*Z%-   ABC%*1.1)
':
check_variable: '= A + (2*3+3*Z%-   ABC%*1.1)
'
check_variable: Ary test '= A + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:lit='(' ' = A + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:'(' '= A + (2*3+3*Z%-   ABC%*1.1)
'
  '(' != '='
ret0
check_variable:ret1 vname='ªv' is str:0 int:0 flt:1 ary:0
check_literal:lit=' =' ' = A + (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'=' '= A + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After while(): A + (2*3+3*Z%-   ABC%*1.1)

ret1
check_expression: 'A + (2*3+3*Z%-   ABC%*1.1)
'
check_eitem:
check_operator: A + (2*3+3*Z%-   ABC%*1.1)

check_literal:lit=',' ' A + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' 'A + (2*3+3*Z%-   ABC%*1.1)
'
  ',' != 'A'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' A + (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' 'A + (2*3+3*Z%-   ABC%*1.1)
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'A + (2*3+3*Z%-   ABC%*1.1)
':
check_vname ret1 ' + (2*3+3*Z%-   ABC%*1.1)
':
check_variable: ' + (2*3+3*Z%-   ABC%*1.1)
'
check_variable: Ary test ' + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:lit='(' '  + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:'(' ' + (2*3+3*Z%-   ABC%*1.1)
'
  '(' != ' '
ret0
check_variable:ret1 vname=',Ü¸' is str:0 int:0 flt:1 ary:0
check_expression:ret1 'A + (2*3+3*Z%-   ABC%*1.1)
'
scan_cline: Checked len=30, 'A= A + (2*3+3*Z%-   ABC%*1.1)
'
scan_line:
check_assignment:
check_variable:
check_vname 'A= A + (2*3+3*Z%-   ABC%*1.1)
':
check_vname ret1 '= A + (2*3+3*Z%-   ABC%*1.1)
':
check_variable: '= A + (2*3+3*Z%-   ABC%*1.1)
'
check_variable: Ary test '= A + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:lit='(' ' = A + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:'(' '= A + (2*3+3*Z%-   ABC%*1.1)
'
  '(' != '='
ret0
check_variable:ret1 vname='},Ü¸' is str:0 int:0 flt:1 ary:0
check_literal:lit=' =' ' = A + (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'=' '= A + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After while(): A + (2*3+3*Z%-   ABC%*1.1)

ret1
check_expression: 'A + (2*3+3*Z%-   ABC%*1.1)
'
check_eitem:
check_operator: A + (2*3+3*Z%-   ABC%*1.1)

check_literal:lit=',' ' A + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' 'A + (2*3+3*Z%-   ABC%*1.1)
'
  ',' != 'A'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' A + (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' 'A + (2*3+3*Z%-   ABC%*1.1)
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'A + (2*3+3*Z%-   ABC%*1.1)
':
check_vname ret1 ' + (2*3+3*Z%-   ABC%*1.1)
':
check_variable: ' + (2*3+3*Z%-   ABC%*1.1)
'
check_variable: Ary test ' + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:lit='(' '  + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:'(' ' + (2*3+3*Z%-   ABC%*1.1)
'
  '(' != ' '
ret0
check_variable:ret1 vname='‡},Ü¸' is str:0 int:0 flt:1 ary:0
check_expression:ret1 'A + (2*3+3*Z%-   ABC%*1.1)
'
scan_assignment:
scan_variable:
scan_vname: 'A= A + (2*3+3*Z%-   ABC%*1.1)
'
scan_vname: ret1 'A'
scan_variable: '= A + (2*3+3*Z%-   ABC%*1.1)
'
scan_variable: Ary test '= A + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:lit='(' ' = A + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:'(' '= A + (2*3+3*Z%-   ABC%*1.1)
'
  '(' != '='
ret0
scan_variable:ret1 vname='A' is str:0 int:0 flt:1 ary:0
scan_literal:lit=' =' '= A + (2*3+3*Z%-   ABC%*1.1)
'
scan_literal:After drop space:= A + (2*3+3*Z%-   ABC%*1.1)

scan_literal:while loop:= A + (2*3+3*Z%-   ABC%*1.1)

scan_expression: ' A + (2*3+3*Z%-   ABC%*1.1)
'
check_eitem:
check_operator: A + (2*3+3*Z%-   ABC%*1.1)

check_literal:lit=',' ' A + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' 'A + (2*3+3*Z%-   ABC%*1.1)
'
  ',' != 'A'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' A + (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' 'A + (2*3+3*Z%-   ABC%*1.1)
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'A + (2*3+3*Z%-   ABC%*1.1)
':
check_vname ret1 ' + (2*3+3*Z%-   ABC%*1.1)
':
check_variable: ' + (2*3+3*Z%-   ABC%*1.1)
'
check_variable: Ary test ' + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:lit='(' '  + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:'(' ' + (2*3+3*Z%-   ABC%*1.1)
'
  '(' != ' '
ret0
check_variable:ret1 vname='¿|,Ü¸' is str:0 int:0 flt:1 ary:0
scan_eitem:
check_operator: A + (2*3+3*Z%-   ABC%*1.1)

check_literal:lit=',' ' A + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' 'A + (2*3+3*Z%-   ABC%*1.1)
'
  ',' != 'A'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' A + (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' 'A + (2*3+3*Z%-   ABC%*1.1)
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'A + (2*3+3*Z%-   ABC%*1.1)
':
check_vname ret1 ' + (2*3+3*Z%-   ABC%*1.1)
':
check_variable: ' + (2*3+3*Z%-   ABC%*1.1)
'
check_variable: Ary test ' + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:lit='(' '  + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:'(' ' + (2*3+3*Z%-   ABC%*1.1)
'
  '(' != ' '
ret0
check_variable:ret1 vname='ê|,Ü¸' is str:0 int:0 flt:1 ary:0
scan_atom:
check_literal:lit=' "' ' A + (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' 'A + (2*3+3*Z%-   ABC%*1.1)
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'A + (2*3+3*Z%-   ABC%*1.1)
':
check_vname ret1 ' + (2*3+3*Z%-   ABC%*1.1)
':
check_variable: ' + (2*3+3*Z%-   ABC%*1.1)
'
check_variable: Ary test ' + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:lit='(' '  + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:'(' ' + (2*3+3*Z%-   ABC%*1.1)
'
  '(' != ' '
ret0
check_variable:ret1 vname='P{,Ü¸' is str:0 int:0 flt:1 ary:0
scan_variable:
scan_vname: 'A + (2*3+3*Z%-   ABC%*1.1)
'
scan_vname: ret1 'A'
scan_variable: ' + (2*3+3*Z%-   ABC%*1.1)
'
scan_variable: Ary test ' + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:lit='(' '  + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:'(' ' + (2*3+3*Z%-   ABC%*1.1)
'
  '(' != ' '
ret0
scan_variable:ret1 vname='A' is str:0 int:0 flt:1 ary:0
check_eitem:
check_operator:  + (2*3+3*Z%-   ABC%*1.1)

check_literal:lit=',' ' + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' '+ (2*3+3*Z%-   ABC%*1.1)
'
  ',' != '+'
ret0
check_operator: ret1
scan_eitem:
check_operator:  + (2*3+3*Z%-   ABC%*1.1)

check_literal:lit=',' ' + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' '+ (2*3+3*Z%-   ABC%*1.1)
'
  ',' != '+'
ret0
check_operator: ret1
scan_operator: ' + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:lit=',' ' + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' '+ (2*3+3*Z%-   ABC%*1.1)
'
  ',' != '+'
ret0
scan_operator: ret1 ' (2*3+3*Z%-   ABC%*1.1)
'
check_eitem:
check_operator:  (2*3+3*Z%-   ABC%*1.1)

check_literal:lit=',' ' (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' '(2*3+3*Z%-   ABC%*1.1)
'
  ',' != '('
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' '  (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' '(2*3+3*Z%-   ABC%*1.1)
'
  '"' != '('
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname ' (2*3+3*Z%-   ABC%*1.1)
':
check_vname ret0 '(2*3+3*Z%-   ABC%*1.1)
':
check_sub_expr:
check_literal:lit=' (' '  (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'(' '(2*3+3*Z%-   ABC%*1.1)
'
check_literal:After while():2*3+3*Z%-   ABC%*1.1)

ret1
check_sub_expr: ret1
scan_eitem:
check_operator:  (2*3+3*Z%-   ABC%*1.1)

check_literal:lit=',' ' (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' '(2*3+3*Z%-   ABC%*1.1)
'
  ',' != '('
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' '  (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' '(2*3+3*Z%-   ABC%*1.1)
'
  '"' != '('
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname ' (2*3+3*Z%-   ABC%*1.1)
':
check_vname ret0 '(2*3+3*Z%-   ABC%*1.1)
':
check_sub_expr:
check_literal:lit=' (' '  (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'(' '(2*3+3*Z%-   ABC%*1.1)
'
check_literal:After while():2*3+3*Z%-   ABC%*1.1)

ret1
check_sub_expr: ret1
scan_sub_expr:
scan_literal:lit=' (' ' (2*3+3*Z%-   ABC%*1.1)
'
scan_literal:After drop space:(2*3+3*Z%-   ABC%*1.1)

scan_literal:while loop:(2*3+3*Z%-   ABC%*1.1)

scan_expression: '2*3+3*Z%-   ABC%*1.1)
'
check_eitem:
check_operator: 2*3+3*Z%-   ABC%*1.1)

check_literal:lit=',' ' 2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' '2*3+3*Z%-   ABC%*1.1)
'
  ',' != '2'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' '2*3+3*Z%-   ABC%*1.1)
'
  '"' != '2'
ret0
check_number:
check_float:
isfloatdigit:
scan_eitem:
check_operator: 2*3+3*Z%-   ABC%*1.1)

check_literal:lit=',' ' 2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' '2*3+3*Z%-   ABC%*1.1)
'
  ',' != '2'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' '2*3+3*Z%-   ABC%*1.1)
'
  '"' != '2'
ret0
check_number:
check_float:
isfloatdigit:
scan_atom:
check_literal:lit=' "' ' 2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' '2*3+3*Z%-   ABC%*1.1)
'
  '"' != '2'
ret0
check_number:
check_float:
isfloatdigit:
scan_number:
check_float:
isfloatdigit:
scan_float:
isfloatdigit:
isfloatdigit:
check_eitem:
check_operator: *3+3*Z%-   ABC%*1.1)

check_literal:lit=',' ' *3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' '*3+3*Z%-   ABC%*1.1)
'
  ',' != '*'
ret0
check_operator: ret1
scan_eitem:
check_operator: *3+3*Z%-   ABC%*1.1)

check_literal:lit=',' ' *3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' '*3+3*Z%-   ABC%*1.1)
'
  ',' != '*'
ret0
check_operator: ret1
scan_operator: '*3+3*Z%-   ABC%*1.1)
'
check_literal:lit=',' ' *3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' '*3+3*Z%-   ABC%*1.1)
'
  ',' != '*'
ret0
scan_operator: ret1 '3+3*Z%-   ABC%*1.1)
'
check_eitem:
check_operator: 3+3*Z%-   ABC%*1.1)

check_literal:lit=',' ' 3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' '3+3*Z%-   ABC%*1.1)
'
  ',' != '3'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' '3+3*Z%-   ABC%*1.1)
'
  '"' != '3'
ret0
check_number:
check_float:
isfloatdigit:
scan_eitem:
check_operator: 3+3*Z%-   ABC%*1.1)

check_literal:lit=',' ' 3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' '3+3*Z%-   ABC%*1.1)
'
  ',' != '3'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' '3+3*Z%-   ABC%*1.1)
'
  '"' != '3'
ret0
check_number:
check_float:
isfloatdigit:
scan_atom:
check_literal:lit=' "' ' 3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' '3+3*Z%-   ABC%*1.1)
'
  '"' != '3'
ret0
check_number:
check_float:
isfloatdigit:
scan_number:
check_float:
isfloatdigit:
scan_float:
isfloatdigit:
isfloatdigit:
check_eitem:
check_operator: +3*Z%-   ABC%*1.1)

check_literal:lit=',' ' +3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' '+3*Z%-   ABC%*1.1)
'
  ',' != '+'
ret0
check_operator: ret1
scan_eitem:
check_operator: +3*Z%-   ABC%*1.1)

check_literal:lit=',' ' +3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' '+3*Z%-   ABC%*1.1)
'
  ',' != '+'
ret0
check_operator: ret1
scan_operator: '+3*Z%-   ABC%*1.1)
'
check_literal:lit=',' ' +3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' '+3*Z%-   ABC%*1.1)
'
  ',' != '+'
ret0
scan_operator: ret1 '3*Z%-   ABC%*1.1)
'
check_eitem:
check_operator: 3*Z%-   ABC%*1.1)

check_literal:lit=',' ' 3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' '3*Z%-   ABC%*1.1)
'
  ',' != '3'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' '3*Z%-   ABC%*1.1)
'
  '"' != '3'
ret0
check_number:
check_float:
isfloatdigit:
scan_eitem:
check_operator: 3*Z%-   ABC%*1.1)

check_literal:lit=',' ' 3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' '3*Z%-   ABC%*1.1)
'
  ',' != '3'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' '3*Z%-   ABC%*1.1)
'
  '"' != '3'
ret0
check_number:
check_float:
isfloatdigit:
scan_atom:
check_literal:lit=' "' ' 3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' '3*Z%-   ABC%*1.1)
'
  '"' != '3'
ret0
check_number:
check_float:
isfloatdigit:
scan_number:
check_float:
isfloatdigit:
scan_float:
isfloatdigit:
isfloatdigit:
check_eitem:
check_operator: *Z%-   ABC%*1.1)

check_literal:lit=',' ' *Z%-   ABC%*1.1)
'
check_literal:After drop space:',' '*Z%-   ABC%*1.1)
'
  ',' != '*'
ret0
check_operator: ret1
scan_eitem:
check_operator: *Z%-   ABC%*1.1)

check_literal:lit=',' ' *Z%-   ABC%*1.1)
'
check_literal:After drop space:',' '*Z%-   ABC%*1.1)
'
  ',' != '*'
ret0
check_operator: ret1
scan_operator: '*Z%-   ABC%*1.1)
'
check_literal:lit=',' ' *Z%-   ABC%*1.1)
'
check_literal:After drop space:',' '*Z%-   ABC%*1.1)
'
  ',' != '*'
ret0
scan_operator: ret1 'Z%-   ABC%*1.1)
'
check_eitem:
check_operator: Z%-   ABC%*1.1)

check_literal:lit=',' ' Z%-   ABC%*1.1)
'
check_literal:After drop space:',' 'Z%-   ABC%*1.1)
'
  ',' != 'Z'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' 'Z%-   ABC%*1.1)
'
  '"' != 'Z'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'Z%-   ABC%*1.1)
':
check_vname ret1 '%-   ABC%*1.1)
':
check_variable: '%-   ABC%*1.1)
'
check_variable: Ary test '-   ABC%*1.1)
'
check_literal:lit='(' ' -   ABC%*1.1)
'
check_literal:After drop space:'(' '-   ABC%*1.1)
'
  '(' != '-'
ret0
check_variable:ret1 vname='`|,Ü¸%' is str:0 int:1 flt:0 ary:0
scan_eitem:
check_operator: Z%-   ABC%*1.1)

check_literal:lit=',' ' Z%-   ABC%*1.1)
'
check_literal:After drop space:',' 'Z%-   ABC%*1.1)
'
  ',' != 'Z'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' 'Z%-   ABC%*1.1)
'
  '"' != 'Z'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'Z%-   ABC%*1.1)
':
check_vname ret1 '%-   ABC%*1.1)
':
check_variable: '%-   ABC%*1.1)
'
check_variable: Ary test '-   ABC%*1.1)
'
check_literal:lit='(' ' -   ABC%*1.1)
'
check_literal:After drop space:'(' '-   ABC%*1.1)
'
  '(' != '-'
ret0
check_variable:ret1 vname='0|,Ü¸%' is str:0 int:1 flt:0 ary:0
scan_atom:
check_literal:lit=' "' ' Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' 'Z%-   ABC%*1.1)
'
  '"' != 'Z'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'Z%-   ABC%*1.1)
':
check_vname ret1 '%-   ABC%*1.1)
':
check_variable: '%-   ABC%*1.1)
'
check_variable: Ary test '-   ABC%*1.1)
'
check_literal:lit='(' ' -   ABC%*1.1)
'
check_literal:After drop space:'(' '-   ABC%*1.1)
'
  '(' != '-'
ret0
check_variable:ret1 vname='z,Ü¸%' is str:0 int:1 flt:0 ary:0
scan_variable:
scan_vname: 'Z%-   ABC%*1.1)
'
scan_vname: ret1 'Z'
scan_variable: '%-   ABC%*1.1)
'
scan_variable: Ary test '-   ABC%*1.1)
'
check_literal:lit='(' ' -   ABC%*1.1)
'
check_literal:After drop space:'(' '-   ABC%*1.1)
'
  '(' != '-'
ret0
scan_variable:ret1 vname='Z%' is str:0 int:1 flt:0 ary:0
check_eitem:
check_operator: -   ABC%*1.1)

check_literal:lit=',' ' -   ABC%*1.1)
'
check_literal:After drop space:',' '-   ABC%*1.1)
'
  ',' != '-'
ret0
check_operator: ret1
scan_eitem:
check_operator: -   ABC%*1.1)

check_literal:lit=',' ' -   ABC%*1.1)
'
check_literal:After drop space:',' '-   ABC%*1.1)
'
  ',' != '-'
ret0
check_operator: ret1
scan_operator: '-   ABC%*1.1)
'
check_literal:lit=',' ' -   ABC%*1.1)
'
check_literal:After drop space:',' '-   ABC%*1.1)
'
  ',' != '-'
ret0
scan_operator: ret1 '   ABC%*1.1)
'
check_eitem:
check_operator:    ABC%*1.1)

check_literal:lit=',' ' ABC%*1.1)
'
check_literal:After drop space:',' 'ABC%*1.1)
'
  ',' != 'A'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' '    ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' 'ABC%*1.1)
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname '   ABC%*1.1)
':
check_vname ret1 '%*1.1)
':
check_variable: '%*1.1)
'
check_variable: Ary test '*1.1)
'
check_literal:lit='(' ' *1.1)
'
check_literal:After drop space:'(' '*1.1)
'
  '(' != '*'
ret0
check_variable:ret1 vname='`|,Ü¸%' is str:0 int:1 flt:0 ary:0
scan_eitem:
check_operator:    ABC%*1.1)

check_literal:lit=',' ' ABC%*1.1)
'
check_literal:After drop space:',' 'ABC%*1.1)
'
  ',' != 'A'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' '    ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' 'ABC%*1.1)
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname '   ABC%*1.1)
':
check_vname ret1 '%*1.1)
':
check_variable: '%*1.1)
'
check_variable: Ary test '*1.1)
'
check_literal:lit='(' ' *1.1)
'
check_literal:After drop space:'(' '*1.1)
'
  '(' != '*'
ret0
check_variable:ret1 vname='0|,Ü¸%' is str:0 int:1 flt:0 ary:0
scan_atom:
check_literal:lit=' "' '    ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' 'ABC%*1.1)
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname '   ABC%*1.1)
':
check_vname ret1 '%*1.1)
':
check_variable: '%*1.1)
'
check_variable: Ary test '*1.1)
'
check_literal:lit='(' ' *1.1)
'
check_literal:After drop space:'(' '*1.1)
'
  '(' != '*'
ret0
check_variable:ret1 vname='z,Ü¸%' is str:0 int:1 flt:0 ary:0
scan_variable:
scan_vname: '   ABC%*1.1)
'
scan_vname: ret1 'ABC'
scan_variable: '%*1.1)
'
scan_variable: Ary test '*1.1)
'
check_literal:lit='(' ' *1.1)
'
check_literal:After drop space:'(' '*1.1)
'
  '(' != '*'
ret0
scan_variable:ret1 vname='ABC%' is str:0 int:1 flt:0 ary:0
check_eitem:
check_operator: *1.1)

check_literal:lit=',' ' *1.1)
'
check_literal:After drop space:',' '*1.1)
'
  ',' != '*'
ret0
check_operator: ret1
scan_eitem:
check_operator: *1.1)

check_literal:lit=',' ' *1.1)
'
check_literal:After drop space:',' '*1.1)
'
  ',' != '*'
ret0
check_operator: ret1
scan_operator: '*1.1)
'
check_literal:lit=',' ' *1.1)
'
check_literal:After drop space:',' '*1.1)
'
  ',' != '*'
ret0
scan_operator: ret1 '1.1)
'
check_eitem:
check_operator: 1.1)

check_literal:lit=',' ' 1.1)
'
check_literal:After drop space:',' '1.1)
'
  ',' != '1'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 1.1)
'
    dropping space
check_literal:After drop space:'"' '1.1)
'
  '"' != '1'
ret0
check_number:
check_float:
isfloatdigit:
scan_eitem:
check_operator: 1.1)

check_literal:lit=',' ' 1.1)
'
check_literal:After drop space:',' '1.1)
'
  ',' != '1'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 1.1)
'
    dropping space
check_literal:After drop space:'"' '1.1)
'
  '"' != '1'
ret0
check_number:
check_float:
isfloatdigit:
scan_atom:
check_literal:lit=' "' ' 1.1)
'
    dropping space
check_literal:After drop space:'"' '1.1)
'
  '"' != '1'
ret0
check_number:
check_float:
isfloatdigit:
scan_number:
check_float:
isfloatdigit:
scan_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_eitem:
check_operator: )

check_literal:lit=',' ' )
'
check_literal:After drop space:',' ')
'
  ',' != ')'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' )
'
    dropping space
check_literal:After drop space:'"' ')
'
  '"' != ')'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname ')
':
check_vname ret0 ')
':
check_sub_expr:
check_literal:lit=' (' ' )
'
    dropping space
check_literal:After drop space:'(' ')
'
  '(' != ')'
ret0
check_sub_expr: ret0
scan_expression: ret1 ')
'
scan_literal:lit=' )' ')
'
scan_literal:After drop space:)

scan_literal:while loop:)

check_eitem:
check_operator: 

check_literal:lit=',' ' '
check_literal:After drop space:',' ''
  ret0 Empty test string
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 
'
    dropping space
check_literal:After drop space:'"' ''
  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname '
':
check_vname ret0 '':
check_sub_expr:
check_literal:lit=' (' ' 
'
    dropping space
check_literal:After drop space:'(' ''
  ret0 Empty test string
check_sub_expr: ret0
scan_expression: ret1 '
'
scan_assignment: ret1
check_literal:lit=':' ' '
check_literal:After drop space:':' ''
  ret0 Empty test string
cline scanned OK
=======================cline==========================
==X%=2
==
scan_cline:
check_line:
check_assignment:
check_variable:
check_vname 'X%=2
':
check_vname ret1 '%=2
':
check_variable: '%=2
'
check_variable: Ary test '=2
'
check_literal:lit='(' ' =2
'
check_literal:After drop space:'(' '=2
'
  '(' != '='
ret0
check_variable:ret1 vname='@%' is str:0 int:1 flt:0 ary:0
check_literal:lit=' =' ' =2
'
    dropping space
check_literal:After drop space:'=' '=2
'
check_literal:After while():2

ret1
check_expression: '2
'
check_eitem:
check_operator: 2

check_literal:lit=',' ' 2
'
check_literal:After drop space:',' '2
'
  ',' != '2'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 2
'
    dropping space
check_literal:After drop space:'"' '2
'
  '"' != '2'
ret0
check_number:
check_float:
isfloatdigit:
check_expression:ret1 '2
'
scan_cline: Checked len=5, 'X%=2
'
scan_line:
check_assignment:
check_variable:
check_vname 'X%=2
':
check_vname ret1 '%=2
':
check_variable: '%=2
'
check_variable: Ary test '=2
'
check_literal:lit='(' ' =2
'
check_literal:After drop space:'(' '=2
'
  '(' != '='
ret0
check_variable:ret1 vname='Ä≠˚Gu%' is str:0 int:1 flt:0 ary:0
check_literal:lit=' =' ' =2
'
    dropping space
check_literal:After drop space:'=' '=2
'
check_literal:After while():2

ret1
check_expression: '2
'
check_eitem:
check_operator: 2

check_literal:lit=',' ' 2
'
check_literal:After drop space:',' '2
'
  ',' != '2'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 2
'
    dropping space
check_literal:After drop space:'"' '2
'
  '"' != '2'
ret0
check_number:
check_float:
isfloatdigit:
check_expression:ret1 '2
'
scan_assignment:
scan_variable:
scan_vname: 'X%=2
'
scan_vname: ret1 'X'
scan_variable: '%=2
'
scan_variable: Ary test '=2
'
check_literal:lit='(' ' =2
'
check_literal:After drop space:'(' '=2
'
  '(' != '='
ret0
scan_variable:ret1 vname='X%' is str:0 int:1 flt:0 ary:0
scan_literal:lit=' =' '=2
'
scan_literal:After drop space:=2

scan_literal:while loop:=2

scan_expression: '2
'
check_eitem:
check_operator: 2

check_literal:lit=',' ' 2
'
check_literal:After drop space:',' '2
'
  ',' != '2'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 2
'
    dropping space
check_literal:After drop space:'"' '2
'
  '"' != '2'
ret0
check_number:
check_float:
isfloatdigit:
scan_eitem:
check_operator: 2

check_literal:lit=',' ' 2
'
check_literal:After drop space:',' '2
'
  ',' != '2'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 2
'
    dropping space
check_literal:After drop space:'"' '2
'
  '"' != '2'
ret0
check_number:
check_float:
isfloatdigit:
scan_atom:
check_literal:lit=' "' ' 2
'
    dropping space
check_literal:After drop space:'"' '2
'
  '"' != '2'
ret0
check_number:
check_float:
isfloatdigit:
scan_number:
check_float:
isfloatdigit:
scan_float:
isfloatdigit:
isfloatdigit:
check_eitem:
check_operator: 

check_literal:lit=',' ' '
check_literal:After drop space:',' ''
  ret0 Empty test string
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 
'
    dropping space
check_literal:After drop space:'"' ''
  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname '
':
check_vname ret0 '':
check_sub_expr:
check_literal:lit=' (' ' 
'
    dropping space
check_literal:After drop space:'(' ''
  ret0 Empty test string
check_sub_expr: ret0
scan_expression: ret1 '
'
scan_assignment: ret1
check_literal:lit=':' ' '
check_literal:After drop space:':' ''
  ret0 Empty test string
cline scanned OK
=======================cline==========================
==X%=Y%
==
scan_cline:
check_line:
check_assignment:
check_variable:
check_vname 'X%=Y%
':
check_vname ret1 '%=Y%
':
check_variable: '%=Y%
'
check_variable: Ary test '=Y%
'
check_literal:lit='(' ' =Y%
'
check_literal:After drop space:'(' '=Y%
'
  '(' != '='
ret0
check_variable:ret1 vname='@~,Ü¸%' is str:0 int:1 flt:0 ary:0
check_literal:lit=' =' ' =Y%
'
    dropping space
check_literal:After drop space:'=' '=Y%
'
check_literal:After while():Y%

ret1
check_expression: 'Y%
'
check_eitem:
check_operator: Y%

check_literal:lit=',' ' Y%
'
check_literal:After drop space:',' 'Y%
'
  ',' != 'Y'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' Y%
'
    dropping space
check_literal:After drop space:'"' 'Y%
'
  '"' != 'Y'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'Y%
':
check_vname ret1 '%
':
check_variable: '%
'
check_variable: Ary test '
'
check_literal:lit='(' ' 
'
check_literal:After drop space:'(' '
'
  '(' != '
'
ret0
check_variable:ret1 vname=',Ü¸%' is str:0 int:1 flt:0 ary:0
check_expression:ret1 'Y%
'
scan_cline: Checked len=6, 'X%=Y%
'
scan_line:
check_assignment:
check_variable:
check_vname 'X%=Y%
':
check_vname ret1 '%=Y%
':
check_variable: '%=Y%
'
check_variable: Ary test '=Y%
'
check_literal:lit='(' ' =Y%
'
check_literal:After drop space:'(' '=Y%
'
  '(' != '='
ret0
check_variable:ret1 vname='},Ü¸%' is str:0 int:1 flt:0 ary:0
check_literal:lit=' =' ' =Y%
'
    dropping space
check_literal:After drop space:'=' '=Y%
'
check_literal:After while():Y%

ret1
check_expression: 'Y%
'
check_eitem:
check_operator: Y%

check_literal:lit=',' ' Y%
'
check_literal:After drop space:',' 'Y%
'
  ',' != 'Y'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' Y%
'
    dropping space
check_literal:After drop space:'"' 'Y%
'
  '"' != 'Y'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'Y%
':
check_vname ret1 '%
':
check_variable: '%
'
check_variable: Ary test '
'
check_literal:lit='(' ' 
'
check_literal:After drop space:'(' '
'
  '(' != '
'
ret0
check_variable:ret1 vname='‡},Ü¸%' is str:0 int:1 flt:0 ary:0
check_expression:ret1 'Y%
'
scan_assignment:
scan_variable:
scan_vname: 'X%=Y%
'
scan_vname: ret1 'X'
scan_variable: '%=Y%
'
scan_variable: Ary test '=Y%
'
check_literal:lit='(' ' =Y%
'
check_literal:After drop space:'(' '=Y%
'
  '(' != '='
ret0
scan_variable:ret1 vname='X%' is str:0 int:1 flt:0 ary:0
scan_literal:lit=' =' '=Y%
'
scan_literal:After drop space:=Y%

scan_literal:while loop:=Y%

scan_expression: 'Y%
'
check_eitem:
check_operator: Y%

check_literal:lit=',' ' Y%
'
check_literal:After drop space:',' 'Y%
'
  ',' != 'Y'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' Y%
'
    dropping space
check_literal:After drop space:'"' 'Y%
'
  '"' != 'Y'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'Y%
':
check_vname ret1 '%
':
check_variable: '%
'
check_variable: Ary test '
'
check_literal:lit='(' ' 
'
check_literal:After drop space:'(' '
'
  '(' != '
'
ret0
check_variable:ret1 vname='¿|,Ü¸%' is str:0 int:1 flt:0 ary:0
scan_eitem:
check_operator: Y%

check_literal:lit=',' ' Y%
'
check_literal:After drop space:',' 'Y%
'
  ',' != 'Y'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' Y%
'
    dropping space
check_literal:After drop space:'"' 'Y%
'
  '"' != 'Y'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'Y%
':
check_vname ret1 '%
':
check_variable: '%
'
check_variable: Ary test '
'
check_literal:lit='(' ' 
'
check_literal:After drop space:'(' '
'
  '(' != '
'
ret0
check_variable:ret1 vname='ê|,Ü¸%' is str:0 int:1 flt:0 ary:0
scan_atom:
check_literal:lit=' "' ' Y%
'
    dropping space
check_literal:After drop space:'"' 'Y%
'
  '"' != 'Y'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'Y%
':
check_vname ret1 '%
':
check_variable: '%
'
check_variable: Ary test '
'
check_literal:lit='(' ' 
'
check_literal:After drop space:'(' '
'
  '(' != '
'
ret0
check_variable:ret1 vname='P{,Ü¸%' is str:0 int:1 flt:0 ary:0
scan_variable:
scan_vname: 'Y%
'
scan_vname: ret1 'Y'
scan_variable: '%
'
scan_variable: Ary test '
'
check_literal:lit='(' ' 
'
check_literal:After drop space:'(' '
'
  '(' != '
'
ret0
scan_variable:ret1 vname='Y%' is str:0 int:1 flt:0 ary:0
check_eitem:
check_operator: 

check_literal:lit=',' ' '
check_literal:After drop space:',' ''
  ret0 Empty test string
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 
'
    dropping space
check_literal:After drop space:'"' ''
  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname '
':
check_vname ret0 '':
check_sub_expr:
check_literal:lit=' (' ' 
'
    dropping space
check_literal:After drop space:'(' ''
  ret0 Empty test string
check_sub_expr: ret0
scan_expression: ret1 '
'
scan_assignment: ret1
check_literal:lit=':' ' '
check_literal:After drop space:':' ''
  ret0 Empty test string
cline scanned OK
=======================cline==========================
==X%= Z%
==
scan_cline:
check_line:
check_assignment:
check_variable:
check_vname 'X%= Z%
':
check_vname ret1 '%= Z%
':
check_variable: '%= Z%
'
check_variable: Ary test '= Z%
'
check_literal:lit='(' ' = Z%
'
check_literal:After drop space:'(' '= Z%
'
  '(' != '='
ret0
check_variable:ret1 vname='@%' is str:0 int:1 flt:0 ary:0
check_literal:lit=' =' ' = Z%
'
    dropping space
check_literal:After drop space:'=' '= Z%
'
check_literal:After while(): Z%

ret1
check_expression: 'Z%
'
check_eitem:
check_operator: Z%

check_literal:lit=',' ' Z%
'
check_literal:After drop space:',' 'Z%
'
  ',' != 'Z'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' Z%
'
    dropping space
check_literal:After drop space:'"' 'Z%
'
  '"' != 'Z'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'Z%
':
check_vname ret1 '%
':
check_variable: '%
'
check_variable: Ary test '
'
check_literal:lit='(' ' 
'
check_literal:After drop space:'(' '
'
  '(' != '
'
ret0
check_variable:ret1 vname=',Ü¸%' is str:0 int:1 flt:0 ary:0
check_expression:ret1 'Z%
'
scan_cline: Checked len=7, 'X%= Z%
'
scan_line:
check_assignment:
check_variable:
check_vname 'X%= Z%
':
check_vname ret1 '%= Z%
':
check_variable: '%= Z%
'
check_variable: Ary test '= Z%
'
check_literal:lit='(' ' = Z%
'
check_literal:After drop space:'(' '= Z%
'
  '(' != '='
ret0
check_variable:ret1 vname='},Ü¸%' is str:0 int:1 flt:0 ary:0
check_literal:lit=' =' ' = Z%
'
    dropping space
check_literal:After drop space:'=' '= Z%
'
check_literal:After while(): Z%

ret1
check_expression: 'Z%
'
check_eitem:
check_operator: Z%

check_literal:lit=',' ' Z%
'
check_literal:After drop space:',' 'Z%
'
  ',' != 'Z'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' Z%
'
    dropping space
check_literal:After drop space:'"' 'Z%
'
  '"' != 'Z'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'Z%
':
check_vname ret1 '%
':
check_variable: '%
'
check_variable: Ary test '
'
check_literal:lit='(' ' 
'
check_literal:After drop space:'(' '
'
  '(' != '
'
ret0
check_variable:ret1 vname='‡},Ü¸%' is str:0 int:1 flt:0 ary:0
check_expression:ret1 'Z%
'
scan_assignment:
scan_variable:
scan_vname: 'X%= Z%
'
scan_vname: ret1 'X'
scan_variable: '%= Z%
'
scan_variable: Ary test '= Z%
'
check_literal:lit='(' ' = Z%
'
check_literal:After drop space:'(' '= Z%
'
  '(' != '='
ret0
scan_variable:ret1 vname='X%' is str:0 int:1 flt:0 ary:0
scan_literal:lit=' =' '= Z%
'
scan_literal:After drop space:= Z%

scan_literal:while loop:= Z%

scan_expression: ' Z%
'
check_eitem:
check_operator: Z%

check_literal:lit=',' ' Z%
'
check_literal:After drop space:',' 'Z%
'
  ',' != 'Z'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' Z%
'
    dropping space
check_literal:After drop space:'"' 'Z%
'
  '"' != 'Z'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'Z%
':
check_vname ret1 '%
':
check_variable: '%
'
check_variable: Ary test '
'
check_literal:lit='(' ' 
'
check_literal:After drop space:'(' '
'
  '(' != '
'
ret0
check_variable:ret1 vname='¿|,Ü¸%' is str:0 int:1 flt:0 ary:0
scan_eitem:
check_operator: Z%

check_literal:lit=',' ' Z%
'
check_literal:After drop space:',' 'Z%
'
  ',' != 'Z'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' Z%
'
    dropping space
check_literal:After drop space:'"' 'Z%
'
  '"' != 'Z'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'Z%
':
check_vname ret1 '%
':
check_variable: '%
'
check_variable: Ary test '
'
check_literal:lit='(' ' 
'
check_literal:After drop space:'(' '
'
  '(' != '
'
ret0
check_variable:ret1 vname='ê|,Ü¸%' is str:0 int:1 flt:0 ary:0
scan_atom:
check_literal:lit=' "' ' Z%
'
    dropping space
check_literal:After drop space:'"' 'Z%
'
  '"' != 'Z'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'Z%
':
check_vname ret1 '%
':
check_variable: '%
'
check_variable: Ary test '
'
check_literal:lit='(' ' 
'
check_literal:After drop space:'(' '
'
  '(' != '
'
ret0
check_variable:ret1 vname='P{,Ü¸%' is str:0 int:1 flt:0 ary:0
scan_variable:
scan_vname: 'Z%
'
scan_vname: ret1 'Z'
scan_variable: '%
'
scan_variable: Ary test '
'
check_literal:lit='(' ' 
'
check_literal:After drop space:'(' '
'
  '(' != '
'
ret0
scan_variable:ret1 vname='Z%' is str:0 int:1 flt:0 ary:0
check_eitem:
check_operator: 

check_literal:lit=',' ' '
check_literal:After drop space:',' ''
  ret0 Empty test string
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 
'
    dropping space
check_literal:After drop space:'"' ''
  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname '
':
check_vname ret0 '':
check_sub_expr:
check_literal:lit=' (' ' 
'
    dropping space
check_literal:After drop space:'(' ''
  ret0 Empty test string
check_sub_expr: ret0
scan_expression: ret1 '
'
scan_assignment: ret1
check_literal:lit=':' ' '
check_literal:After drop space:':' ''
  ret0 Empty test string
cline scanned OK
=======================cline==========================
==A% = 1+2
==
scan_cline:
check_line:
check_assignment:
check_variable:
check_vname 'A% = 1+2
':
check_vname ret1 '% = 1+2
':
check_variable: '% = 1+2
'
check_variable: Ary test ' = 1+2
'
check_literal:lit='(' '  = 1+2
'
check_literal:After drop space:'(' ' = 1+2
'
  '(' != ' '
ret0
check_variable:ret1 vname='@%' is str:0 int:1 flt:0 ary:0
check_literal:lit=' =' '  = 1+2
'
    dropping space
check_literal:After drop space:'=' '= 1+2
'
check_literal:After while(): 1+2

ret1
check_expression: '1+2
'
check_eitem:
check_operator: 1+2

check_literal:lit=',' ' 1+2
'
check_literal:After drop space:',' '1+2
'
  ',' != '1'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 1+2
'
    dropping space
check_literal:After drop space:'"' '1+2
'
  '"' != '1'
ret0
check_number:
check_float:
isfloatdigit:
check_expression:ret1 '1+2
'
scan_cline: Checked len=9, 'A% = 1+2
'
scan_line:
check_assignment:
check_variable:
check_vname 'A% = 1+2
':
check_vname ret1 '% = 1+2
':
check_variable: '% = 1+2
'
check_variable: Ary test ' = 1+2
'
check_literal:lit='(' '  = 1+2
'
check_literal:After drop space:'(' ' = 1+2
'
  '(' != ' '
ret0
check_variable:ret1 vname='Ä≠˚Gu%' is str:0 int:1 flt:0 ary:0
check_literal:lit=' =' '  = 1+2
'
    dropping space
check_literal:After drop space:'=' '= 1+2
'
check_literal:After while(): 1+2

ret1
check_expression: '1+2
'
check_eitem:
check_operator: 1+2

check_literal:lit=',' ' 1+2
'
check_literal:After drop space:',' '1+2
'
  ',' != '1'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 1+2
'
    dropping space
check_literal:After drop space:'"' '1+2
'
  '"' != '1'
ret0
check_number:
check_float:
isfloatdigit:
check_expression:ret1 '1+2
'
scan_assignment:
scan_variable:
scan_vname: 'A% = 1+2
'
scan_vname: ret1 'A'
scan_variable: '% = 1+2
'
scan_variable: Ary test ' = 1+2
'
check_literal:lit='(' '  = 1+2
'
check_literal:After drop space:'(' ' = 1+2
'
  '(' != ' '
ret0
scan_variable:ret1 vname='A%' is str:0 int:1 flt:0 ary:0
scan_literal:lit=' =' ' = 1+2
'
scan_literal:After drop space:= 1+2

scan_literal:while loop:= 1+2

scan_expression: ' 1+2
'
check_eitem:
check_operator: 1+2

check_literal:lit=',' ' 1+2
'
check_literal:After drop space:',' '1+2
'
  ',' != '1'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 1+2
'
    dropping space
check_literal:After drop space:'"' '1+2
'
  '"' != '1'
ret0
check_number:
check_float:
isfloatdigit:
scan_eitem:
check_operator: 1+2

check_literal:lit=',' ' 1+2
'
check_literal:After drop space:',' '1+2
'
  ',' != '1'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 1+2
'
    dropping space
check_literal:After drop space:'"' '1+2
'
  '"' != '1'
ret0
check_number:
check_float:
isfloatdigit:
scan_atom:
check_literal:lit=' "' ' 1+2
'
    dropping space
check_literal:After drop space:'"' '1+2
'
  '"' != '1'
ret0
check_number:
check_float:
isfloatdigit:
scan_number:
check_float:
isfloatdigit:
scan_float:
isfloatdigit:
isfloatdigit:
check_eitem:
check_operator: +2

check_literal:lit=',' ' +2
'
check_literal:After drop space:',' '+2
'
  ',' != '+'
ret0
check_operator: ret1
scan_eitem:
check_operator: +2

check_literal:lit=',' ' +2
'
check_literal:After drop space:',' '+2
'
  ',' != '+'
ret0
check_operator: ret1
scan_operator: '+2
'
check_literal:lit=',' ' +2
'
check_literal:After drop space:',' '+2
'
  ',' != '+'
ret0
scan_operator: ret1 '2
'
check_eitem:
check_operator: 2

check_literal:lit=',' ' 2
'
check_literal:After drop space:',' '2
'
  ',' != '2'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 2
'
    dropping space
check_literal:After drop space:'"' '2
'
  '"' != '2'
ret0
check_number:
check_float:
isfloatdigit:
scan_eitem:
check_operator: 2

check_literal:lit=',' ' 2
'
check_literal:After drop space:',' '2
'
  ',' != '2'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 2
'
    dropping space
check_literal:After drop space:'"' '2
'
  '"' != '2'
ret0
check_number:
check_float:
isfloatdigit:
scan_atom:
check_literal:lit=' "' ' 2
'
    dropping space
check_literal:After drop space:'"' '2
'
  '"' != '2'
ret0
check_number:
check_float:
isfloatdigit:
scan_number:
check_float:
isfloatdigit:
scan_float:
isfloatdigit:
isfloatdigit:
check_eitem:
check_operator: 

check_literal:lit=',' ' '
check_literal:After drop space:',' ''
  ret0 Empty test string
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 
'
    dropping space
check_literal:After drop space:'"' ''
  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname '
':
check_vname ret0 '':
check_sub_expr:
check_literal:lit=' (' ' 
'
    dropping space
check_literal:After drop space:'(' ''
  ret0 Empty test string
check_sub_expr: ret0
scan_expression: ret1 '
'
scan_assignment: ret1
check_literal:lit=':' ' '
check_literal:After drop space:':' ''
  ret0 Empty test string
cline scanned OK
=======================cline==========================
==A% = B%
==
scan_cline:
check_line:
check_assignment:
check_variable:
check_vname 'A% = B%
':
check_vname ret1 '% = B%
':
check_variable: '% = B%
'
check_variable: Ary test ' = B%
'
check_literal:lit='(' '  = B%
'
check_literal:After drop space:'(' ' = B%
'
  '(' != ' '
ret0
check_variable:ret1 vname='@~,Ü¸%' is str:0 int:1 flt:0 ary:0
check_literal:lit=' =' '  = B%
'
    dropping space
check_literal:After drop space:'=' '= B%
'
check_literal:After while(): B%

ret1
check_expression: 'B%
'
check_eitem:
check_operator: B%

check_literal:lit=',' ' B%
'
check_literal:After drop space:',' 'B%
'
  ',' != 'B'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' B%
'
    dropping space
check_literal:After drop space:'"' 'B%
'
  '"' != 'B'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'B%
':
check_vname ret1 '%
':
check_variable: '%
'
check_variable: Ary test '
'
check_literal:lit='(' ' 
'
check_literal:After drop space:'(' '
'
  '(' != '
'
ret0
check_variable:ret1 vname=',Ü¸%' is str:0 int:1 flt:0 ary:0
check_expression:ret1 'B%
'
scan_cline: Checked len=8, 'A% = B%
'
scan_line:
check_assignment:
check_variable:
check_vname 'A% = B%
':
check_vname ret1 '% = B%
':
check_variable: '% = B%
'
check_variable: Ary test ' = B%
'
check_literal:lit='(' '  = B%
'
check_literal:After drop space:'(' ' = B%
'
  '(' != ' '
ret0
check_variable:ret1 vname='},Ü¸%' is str:0 int:1 flt:0 ary:0
check_literal:lit=' =' '  = B%
'
    dropping space
check_literal:After drop space:'=' '= B%
'
check_literal:After while(): B%

ret1
check_expression: 'B%
'
check_eitem:
check_operator: B%

check_literal:lit=',' ' B%
'
check_literal:After drop space:',' 'B%
'
  ',' != 'B'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' B%
'
    dropping space
check_literal:After drop space:'"' 'B%
'
  '"' != 'B'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'B%
':
check_vname ret1 '%
':
check_variable: '%
'
check_variable: Ary test '
'
check_literal:lit='(' ' 
'
check_literal:After drop space:'(' '
'
  '(' != '
'
ret0
check_variable:ret1 vname='‡},Ü¸%' is str:0 int:1 flt:0 ary:0
check_expression:ret1 'B%
'
scan_assignment:
scan_variable:
scan_vname: 'A% = B%
'
scan_vname: ret1 'A'
scan_variable: '% = B%
'
scan_variable: Ary test ' = B%
'
check_literal:lit='(' '  = B%
'
check_literal:After drop space:'(' ' = B%
'
  '(' != ' '
ret0
scan_variable:ret1 vname='A%' is str:0 int:1 flt:0 ary:0
scan_literal:lit=' =' ' = B%
'
scan_literal:After drop space:= B%

scan_literal:while loop:= B%

scan_expression: ' B%
'
check_eitem:
check_operator: B%

check_literal:lit=',' ' B%
'
check_literal:After drop space:',' 'B%
'
  ',' != 'B'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' B%
'
    dropping space
check_literal:After drop space:'"' 'B%
'
  '"' != 'B'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'B%
':
check_vname ret1 '%
':
check_variable: '%
'
check_variable: Ary test '
'
check_literal:lit='(' ' 
'
check_literal:After drop space:'(' '
'
  '(' != '
'
ret0
check_variable:ret1 vname='¿|,Ü¸%' is str:0 int:1 flt:0 ary:0
scan_eitem:
check_operator: B%

check_literal:lit=',' ' B%
'
check_literal:After drop space:',' 'B%
'
  ',' != 'B'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' B%
'
    dropping space
check_literal:After drop space:'"' 'B%
'
  '"' != 'B'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'B%
':
check_vname ret1 '%
':
check_variable: '%
'
check_variable: Ary test '
'
check_literal:lit='(' ' 
'
check_literal:After drop space:'(' '
'
  '(' != '
'
ret0
check_variable:ret1 vname='ê|,Ü¸%' is str:0 int:1 flt:0 ary:0
scan_atom:
check_literal:lit=' "' ' B%
'
    dropping space
check_literal:After drop space:'"' 'B%
'
  '"' != 'B'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'B%
':
check_vname ret1 '%
':
check_variable: '%
'
check_variable: Ary test '
'
check_literal:lit='(' ' 
'
check_literal:After drop space:'(' '
'
  '(' != '
'
ret0
check_variable:ret1 vname='P{,Ü¸%' is str:0 int:1 flt:0 ary:0
scan_variable:
scan_vname: 'B%
'
scan_vname: ret1 'B'
scan_variable: '%
'
scan_variable: Ary test '
'
check_literal:lit='(' ' 
'
check_literal:After drop space:'(' '
'
  '(' != '
'
ret0
scan_variable:ret1 vname='B%' is str:0 int:1 flt:0 ary:0
check_eitem:
check_operator: 

check_literal:lit=',' ' '
check_literal:After drop space:',' ''
  ret0 Empty test string
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 
'
    dropping space
check_literal:After drop space:'"' ''
  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname '
':
check_vname ret0 '':
check_sub_expr:
check_literal:lit=' (' ' 
'
    dropping space
check_literal:After drop space:'(' ''
  ret0 Empty test string
check_sub_expr: ret0
scan_expression: ret1 '
'
scan_assignment: ret1
check_literal:lit=':' ' '
check_literal:After drop space:':' ''
  ret0 Empty test string
cline scanned OK
=======================cline==========================
==A% = A% + B%
==
scan_cline:
check_line:
check_assignment:
check_variable:
check_vname 'A% = A% + B%
':
check_vname ret1 '% = A% + B%
':
check_variable: '% = A% + B%
'
check_variable: Ary test ' = A% + B%
'
check_literal:lit='(' '  = A% + B%
'
check_literal:After drop space:'(' ' = A% + B%
'
  '(' != ' '
ret0
check_variable:ret1 vname='@%' is str:0 int:1 flt:0 ary:0
check_literal:lit=' =' '  = A% + B%
'
    dropping space
check_literal:After drop space:'=' '= A% + B%
'
check_literal:After while(): A% + B%

ret1
check_expression: 'A% + B%
'
check_eitem:
check_operator: A% + B%

check_literal:lit=',' ' A% + B%
'
check_literal:After drop space:',' 'A% + B%
'
  ',' != 'A'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' A% + B%
'
    dropping space
check_literal:After drop space:'"' 'A% + B%
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'A% + B%
':
check_vname ret1 '% + B%
':
check_variable: '% + B%
'
check_variable: Ary test ' + B%
'
check_literal:lit='(' '  + B%
'
check_literal:After drop space:'(' ' + B%
'
  '(' != ' '
ret0
check_variable:ret1 vname=',Ü¸%' is str:0 int:1 flt:0 ary:0
check_expression:ret1 'A% + B%
'
scan_cline: Checked len=13, 'A% = A% + B%
'
scan_line:
check_assignment:
check_variable:
check_vname 'A% = A% + B%
':
check_vname ret1 '% = A% + B%
':
check_variable: '% = A% + B%
'
check_variable: Ary test ' = A% + B%
'
check_literal:lit='(' '  = A% + B%
'
check_literal:After drop space:'(' ' = A% + B%
'
  '(' != ' '
ret0
check_variable:ret1 vname='},Ü¸%' is str:0 int:1 flt:0 ary:0
check_literal:lit=' =' '  = A% + B%
'
    dropping space
check_literal:After drop space:'=' '= A% + B%
'
check_literal:After while(): A% + B%

ret1
check_expression: 'A% + B%
'
check_eitem:
check_operator: A% + B%

check_literal:lit=',' ' A% + B%
'
check_literal:After drop space:',' 'A% + B%
'
  ',' != 'A'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' A% + B%
'
    dropping space
check_literal:After drop space:'"' 'A% + B%
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'A% + B%
':
check_vname ret1 '% + B%
':
check_variable: '% + B%
'
check_variable: Ary test ' + B%
'
check_literal:lit='(' '  + B%
'
check_literal:After drop space:'(' ' + B%
'
  '(' != ' '
ret0
check_variable:ret1 vname='‡},Ü¸%' is str:0 int:1 flt:0 ary:0
check_expression:ret1 'A% + B%
'
scan_assignment:
scan_variable:
scan_vname: 'A% = A% + B%
'
scan_vname: ret1 'A'
scan_variable: '% = A% + B%
'
scan_variable: Ary test ' = A% + B%
'
check_literal:lit='(' '  = A% + B%
'
check_literal:After drop space:'(' ' = A% + B%
'
  '(' != ' '
ret0
scan_variable:ret1 vname='A%' is str:0 int:1 flt:0 ary:0
scan_literal:lit=' =' ' = A% + B%
'
scan_literal:After drop space:= A% + B%

scan_literal:while loop:= A% + B%

scan_expression: ' A% + B%
'
check_eitem:
check_operator: A% + B%

check_literal:lit=',' ' A% + B%
'
check_literal:After drop space:',' 'A% + B%
'
  ',' != 'A'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' A% + B%
'
    dropping space
check_literal:After drop space:'"' 'A% + B%
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'A% + B%
':
check_vname ret1 '% + B%
':
check_variable: '% + B%
'
check_variable: Ary test ' + B%
'
check_literal:lit='(' '  + B%
'
check_literal:After drop space:'(' ' + B%
'
  '(' != ' '
ret0
check_variable:ret1 vname='¿|,Ü¸%' is str:0 int:1 flt:0 ary:0
scan_eitem:
check_operator: A% + B%

check_literal:lit=',' ' A% + B%
'
check_literal:After drop space:',' 'A% + B%
'
  ',' != 'A'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' A% + B%
'
    dropping space
check_literal:After drop space:'"' 'A% + B%
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'A% + B%
':
check_vname ret1 '% + B%
':
check_variable: '% + B%
'
check_variable: Ary test ' + B%
'
check_literal:lit='(' '  + B%
'
check_literal:After drop space:'(' ' + B%
'
  '(' != ' '
ret0
check_variable:ret1 vname='ê|,Ü¸%' is str:0 int:1 flt:0 ary:0
scan_atom:
check_literal:lit=' "' ' A% + B%
'
    dropping space
check_literal:After drop space:'"' 'A% + B%
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'A% + B%
':
check_vname ret1 '% + B%
':
check_variable: '% + B%
'
check_variable: Ary test ' + B%
'
check_literal:lit='(' '  + B%
'
check_literal:After drop space:'(' ' + B%
'
  '(' != ' '
ret0
check_variable:ret1 vname='P{,Ü¸%' is str:0 int:1 flt:0 ary:0
scan_variable:
scan_vname: 'A% + B%
'
scan_vname: ret1 'A'
scan_variable: '% + B%
'
scan_variable: Ary test ' + B%
'
check_literal:lit='(' '  + B%
'
check_literal:After drop space:'(' ' + B%
'
  '(' != ' '
ret0
scan_variable:ret1 vname='A%' is str:0 int:1 flt:0 ary:0
check_eitem:
check_operator:  + B%

check_literal:lit=',' ' + B%
'
check_literal:After drop space:',' '+ B%
'
  ',' != '+'
ret0
check_operator: ret1
scan_eitem:
check_operator:  + B%

check_literal:lit=',' ' + B%
'
check_literal:After drop space:',' '+ B%
'
  ',' != '+'
ret0
check_operator: ret1
scan_operator: ' + B%
'
check_literal:lit=',' ' + B%
'
check_literal:After drop space:',' '+ B%
'
  ',' != '+'
ret0
scan_operator: ret1 ' B%
'
check_eitem:
check_operator:  B%

check_literal:lit=',' ' B%
'
check_literal:After drop space:',' 'B%
'
  ',' != 'B'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' '  B%
'
    dropping space
check_literal:After drop space:'"' 'B%
'
  '"' != 'B'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname ' B%
':
check_vname ret1 '%
':
check_variable: '%
'
check_variable: Ary test '
'
check_literal:lit='(' ' 
'
check_literal:After drop space:'(' '
'
  '(' != '
'
ret0
check_variable:ret1 vname='¿|,Ü¸%' is str:0 int:1 flt:0 ary:0
scan_eitem:
check_operator:  B%

check_literal:lit=',' ' B%
'
check_literal:After drop space:',' 'B%
'
  ',' != 'B'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' '  B%
'
    dropping space
check_literal:After drop space:'"' 'B%
'
  '"' != 'B'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname ' B%
':
check_vname ret1 '%
':
check_variable: '%
'
check_variable: Ary test '
'
check_literal:lit='(' ' 
'
check_literal:After drop space:'(' '
'
  '(' != '
'
ret0
check_variable:ret1 vname='ê|,Ü¸%' is str:0 int:1 flt:0 ary:0
scan_atom:
check_literal:lit=' "' '  B%
'
    dropping space
check_literal:After drop space:'"' 'B%
'
  '"' != 'B'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname ' B%
':
check_vname ret1 '%
':
check_variable: '%
'
check_variable: Ary test '
'
check_literal:lit='(' ' 
'
check_literal:After drop space:'(' '
'
  '(' != '
'
ret0
check_variable:ret1 vname='P{,Ü¸%' is str:0 int:1 flt:0 ary:0
scan_variable:
scan_vname: ' B%
'
scan_vname: ret1 'B'
scan_variable: '%
'
scan_variable: Ary test '
'
check_literal:lit='(' ' 
'
check_literal:After drop space:'(' '
'
  '(' != '
'
ret0
scan_variable:ret1 vname='B%' is str:0 int:1 flt:0 ary:0
check_eitem:
check_operator: 

check_literal:lit=',' ' '
check_literal:After drop space:',' ''
  ret0 Empty test string
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 
'
    dropping space
check_literal:After drop space:'"' ''
  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname '
':
check_vname ret0 '':
check_sub_expr:
check_literal:lit=' (' ' 
'
    dropping space
check_literal:After drop space:'(' ''
  ret0 Empty test string
check_sub_expr: ret0
scan_expression: ret1 '
'
scan_assignment: ret1
check_literal:lit=':' ' '
check_literal:After drop space:':' ''
  ret0 Empty test string
cline scanned OK
=======================cline==========================
==A% = 2 + (A% * B%)
==
scan_cline:
check_line:
check_assignment:
check_variable:
check_vname 'A% = 2 + (A% * B%)
':
check_vname ret1 '% = 2 + (A% * B%)
':
check_variable: '% = 2 + (A% * B%)
'
check_variable: Ary test ' = 2 + (A% * B%)
'
check_literal:lit='(' '  = 2 + (A% * B%)
'
check_literal:After drop space:'(' ' = 2 + (A% * B%)
'
  '(' != ' '
ret0
check_variable:ret1 vname='@%' is str:0 int:1 flt:0 ary:0
check_literal:lit=' =' '  = 2 + (A% * B%)
'
    dropping space
check_literal:After drop space:'=' '= 2 + (A% * B%)
'
check_literal:After while(): 2 + (A% * B%)

ret1
check_expression: '2 + (A% * B%)
'
check_eitem:
check_operator: 2 + (A% * B%)

check_literal:lit=',' ' 2 + (A% * B%)
'
check_literal:After drop space:',' '2 + (A% * B%)
'
  ',' != '2'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 2 + (A% * B%)
'
    dropping space
check_literal:After drop space:'"' '2 + (A% * B%)
'
  '"' != '2'
ret0
check_number:
check_float:
isfloatdigit:
check_expression:ret1 '2 + (A% * B%)
'
scan_cline: Checked len=19, 'A% = 2 + (A% * B%)
'
scan_line:
check_assignment:
check_variable:
check_vname 'A% = 2 + (A% * B%)
':
check_vname ret1 '% = 2 + (A% * B%)
':
check_variable: '% = 2 + (A% * B%)
'
check_variable: Ary test ' = 2 + (A% * B%)
'
check_literal:lit='(' '  = 2 + (A% * B%)
'
check_literal:After drop space:'(' ' = 2 + (A% * B%)
'
  '(' != ' '
ret0
check_variable:ret1 vname='Ä≠˚Gu%' is str:0 int:1 flt:0 ary:0
check_literal:lit=' =' '  = 2 + (A% * B%)
'
    dropping space
check_literal:After drop space:'=' '= 2 + (A% * B%)
'
check_literal:After while(): 2 + (A% * B%)

ret1
check_expression: '2 + (A% * B%)
'
check_eitem:
check_operator: 2 + (A% * B%)

check_literal:lit=',' ' 2 + (A% * B%)
'
check_literal:After drop space:',' '2 + (A% * B%)
'
  ',' != '2'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 2 + (A% * B%)
'
    dropping space
check_literal:After drop space:'"' '2 + (A% * B%)
'
  '"' != '2'
ret0
check_number:
check_float:
isfloatdigit:
check_expression:ret1 '2 + (A% * B%)
'
scan_assignment:
scan_variable:
scan_vname: 'A% = 2 + (A% * B%)
'
scan_vname: ret1 'A'
scan_variable: '% = 2 + (A% * B%)
'
scan_variable: Ary test ' = 2 + (A% * B%)
'
check_literal:lit='(' '  = 2 + (A% * B%)
'
check_literal:After drop space:'(' ' = 2 + (A% * B%)
'
  '(' != ' '
ret0
scan_variable:ret1 vname='A%' is str:0 int:1 flt:0 ary:0
scan_literal:lit=' =' ' = 2 + (A% * B%)
'
scan_literal:After drop space:= 2 + (A% * B%)

scan_literal:while loop:= 2 + (A% * B%)

scan_expression: ' 2 + (A% * B%)
'
check_eitem:
check_operator: 2 + (A% * B%)

check_literal:lit=',' ' 2 + (A% * B%)
'
check_literal:After drop space:',' '2 + (A% * B%)
'
  ',' != '2'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 2 + (A% * B%)
'
    dropping space
check_literal:After drop space:'"' '2 + (A% * B%)
'
  '"' != '2'
ret0
check_number:
check_float:
isfloatdigit:
scan_eitem:
check_operator: 2 + (A% * B%)

check_literal:lit=',' ' 2 + (A% * B%)
'
check_literal:After drop space:',' '2 + (A% * B%)
'
  ',' != '2'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 2 + (A% * B%)
'
    dropping space
check_literal:After drop space:'"' '2 + (A% * B%)
'
  '"' != '2'
ret0
check_number:
check_float:
isfloatdigit:
scan_atom:
check_literal:lit=' "' ' 2 + (A% * B%)
'
    dropping space
check_literal:After drop space:'"' '2 + (A% * B%)
'
  '"' != '2'
ret0
check_number:
check_float:
isfloatdigit:
scan_number:
check_float:
isfloatdigit:
scan_float:
isfloatdigit:
isfloatdigit:
check_eitem:
check_operator:  + (A% * B%)

check_literal:lit=',' ' + (A% * B%)
'
check_literal:After drop space:',' '+ (A% * B%)
'
  ',' != '+'
ret0
check_operator: ret1
scan_eitem:
check_operator:  + (A% * B%)

check_literal:lit=',' ' + (A% * B%)
'
check_literal:After drop space:',' '+ (A% * B%)
'
  ',' != '+'
ret0
check_operator: ret1
scan_operator: ' + (A% * B%)
'
check_literal:lit=',' ' + (A% * B%)
'
check_literal:After drop space:',' '+ (A% * B%)
'
  ',' != '+'
ret0
scan_operator: ret1 ' (A% * B%)
'
check_eitem:
check_operator:  (A% * B%)

check_literal:lit=',' ' (A% * B%)
'
check_literal:After drop space:',' '(A% * B%)
'
  ',' != '('
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' '  (A% * B%)
'
    dropping space
check_literal:After drop space:'"' '(A% * B%)
'
  '"' != '('
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname ' (A% * B%)
':
check_vname ret0 '(A% * B%)
':
check_sub_expr:
check_literal:lit=' (' '  (A% * B%)
'
    dropping space
check_literal:After drop space:'(' '(A% * B%)
'
check_literal:After while():A% * B%)

ret1
check_sub_expr: ret1
scan_eitem:
check_operator:  (A% * B%)

check_literal:lit=',' ' (A% * B%)
'
check_literal:After drop space:',' '(A% * B%)
'
  ',' != '('
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' '  (A% * B%)
'
    dropping space
check_literal:After drop space:'"' '(A% * B%)
'
  '"' != '('
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname ' (A% * B%)
':
check_vname ret0 '(A% * B%)
':
check_sub_expr:
check_literal:lit=' (' '  (A% * B%)
'
    dropping space
check_literal:After drop space:'(' '(A% * B%)
'
check_literal:After while():A% * B%)

ret1
check_sub_expr: ret1
scan_sub_expr:
scan_literal:lit=' (' ' (A% * B%)
'
scan_literal:After drop space:(A% * B%)

scan_literal:while loop:(A% * B%)

scan_expression: 'A% * B%)
'
check_eitem:
check_operator: A% * B%)

check_literal:lit=',' ' A% * B%)
'
check_literal:After drop space:',' 'A% * B%)
'
  ',' != 'A'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' A% * B%)
'
    dropping space
check_literal:After drop space:'"' 'A% * B%)
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'A% * B%)
':
check_vname ret1 '% * B%)
':
check_variable: '% * B%)
'
check_variable: Ary test ' * B%)
'
check_literal:lit='(' '  * B%)
'
check_literal:After drop space:'(' ' * B%)
'
  '(' != ' '
ret0
check_variable:ret1 vname='`|,Ü¸%' is str:0 int:1 flt:0 ary:0
scan_eitem:
check_operator: A% * B%)

check_literal:lit=',' ' A% * B%)
'
check_literal:After drop space:',' 'A% * B%)
'
  ',' != 'A'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' A% * B%)
'
    dropping space
check_literal:After drop space:'"' 'A% * B%)
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'A% * B%)
':
check_vname ret1 '% * B%)
':
check_variable: '% * B%)
'
check_variable: Ary test ' * B%)
'
check_literal:lit='(' '  * B%)
'
check_literal:After drop space:'(' ' * B%)
'
  '(' != ' '
ret0
check_variable:ret1 vname='0|,Ü¸%' is str:0 int:1 flt:0 ary:0
scan_atom:
check_literal:lit=' "' ' A% * B%)
'
    dropping space
check_literal:After drop space:'"' 'A% * B%)
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'A% * B%)
':
check_vname ret1 '% * B%)
':
check_variable: '% * B%)
'
check_variable: Ary test ' * B%)
'
check_literal:lit='(' '  * B%)
'
check_literal:After drop space:'(' ' * B%)
'
  '(' != ' '
ret0
check_variable:ret1 vname='z,Ü¸%' is str:0 int:1 flt:0 ary:0
scan_variable:
scan_vname: 'A% * B%)
'
scan_vname: ret1 'A'
scan_variable: '% * B%)
'
scan_variable: Ary test ' * B%)
'
check_literal:lit='(' '  * B%)
'
check_literal:After drop space:'(' ' * B%)
'
  '(' != ' '
ret0
scan_variable:ret1 vname='A%' is str:0 int:1 flt:0 ary:0
check_eitem:
check_operator:  * B%)

check_literal:lit=',' ' * B%)
'
check_literal:After drop space:',' '* B%)
'
  ',' != '*'
ret0
check_operator: ret1
scan_eitem:
check_operator:  * B%)

check_literal:lit=',' ' * B%)
'
check_literal:After drop space:',' '* B%)
'
  ',' != '*'
ret0
check_operator: ret1
scan_operator: ' * B%)
'
check_literal:lit=',' ' * B%)
'
check_literal:After drop space:',' '* B%)
'
  ',' != '*'
ret0
scan_operator: ret1 ' B%)
'
check_eitem:
check_operator:  B%)

check_literal:lit=',' ' B%)
'
check_literal:After drop space:',' 'B%)
'
  ',' != 'B'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' '  B%)
'
    dropping space
check_literal:After drop space:'"' 'B%)
'
  '"' != 'B'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname ' B%)
':
check_vname ret1 '%)
':
check_variable: '%)
'
check_variable: Ary test ')
'
check_literal:lit='(' ' )
'
check_literal:After drop space:'(' ')
'
  '(' != ')'
ret0
check_variable:ret1 vname='`|,Ü¸%' is str:0 int:1 flt:0 ary:0
scan_eitem:
check_operator:  B%)

check_literal:lit=',' ' B%)
'
check_literal:After drop space:',' 'B%)
'
  ',' != 'B'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' '  B%)
'
    dropping space
check_literal:After drop space:'"' 'B%)
'
  '"' != 'B'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname ' B%)
':
check_vname ret1 '%)
':
check_variable: '%)
'
check_variable: Ary test ')
'
check_literal:lit='(' ' )
'
check_literal:After drop space:'(' ')
'
  '(' != ')'
ret0
check_variable:ret1 vname='0|,Ü¸%' is str:0 int:1 flt:0 ary:0
scan_atom:
check_literal:lit=' "' '  B%)
'
    dropping space
check_literal:After drop space:'"' 'B%)
'
  '"' != 'B'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname ' B%)
':
check_vname ret1 '%)
':
check_variable: '%)
'
check_variable: Ary test ')
'
check_literal:lit='(' ' )
'
check_literal:After drop space:'(' ')
'
  '(' != ')'
ret0
check_variable:ret1 vname='z,Ü¸%' is str:0 int:1 flt:0 ary:0
scan_variable:
scan_vname: ' B%)
'
scan_vname: ret1 'B'
scan_variable: '%)
'
scan_variable: Ary test ')
'
check_literal:lit='(' ' )
'
check_literal:After drop space:'(' ')
'
  '(' != ')'
ret0
scan_variable:ret1 vname='B%' is str:0 int:1 flt:0 ary:0
check_eitem:
check_operator: )

check_literal:lit=',' ' )
'
check_literal:After drop space:',' ')
'
  ',' != ')'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' )
'
    dropping space
check_literal:After drop space:'"' ')
'
  '"' != ')'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname ')
':
check_vname ret0 ')
':
check_sub_expr:
check_literal:lit=' (' ' )
'
    dropping space
check_literal:After drop space:'(' ')
'
  '(' != ')'
ret0
check_sub_expr: ret0
scan_expression: ret1 ')
'
scan_literal:lit=' )' ')
'
scan_literal:After drop space:)

scan_literal:while loop:)

check_eitem:
check_operator: 

check_literal:lit=',' ' '
check_literal:After drop space:',' ''
  ret0 Empty test string
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 
'
    dropping space
check_literal:After drop space:'"' ''
  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname '
':
check_vname ret0 '':
check_sub_expr:
check_literal:lit=' (' ' 
'
    dropping space
check_literal:After drop space:'(' ''
  ret0 Empty test string
check_sub_expr: ret0
scan_expression: ret1 '
'
scan_assignment: ret1
check_literal:lit=':' ' '
check_literal:After drop space:':' ''
  ret0 Empty test string
cline scanned OK
=======================cline==========================
==A = A% + (2*3+3*Z%-   ABC%*1.1)
==
scan_cline:
check_line:
check_assignment:
check_variable:
check_vname 'A = A% + (2*3+3*Z%-   ABC%*1.1)
':
check_vname ret1 ' = A% + (2*3+3*Z%-   ABC%*1.1)
':
check_variable: ' = A% + (2*3+3*Z%-   ABC%*1.1)
'
check_variable: Ary test ' = A% + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:lit='(' '  = A% + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:'(' ' = A% + (2*3+3*Z%-   ABC%*1.1)
'
  '(' != ' '
ret0
check_variable:ret1 vname='@~,Ü¸' is str:0 int:0 flt:1 ary:0
check_literal:lit=' =' '  = A% + (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'=' '= A% + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After while(): A% + (2*3+3*Z%-   ABC%*1.1)

ret1
check_expression: 'A% + (2*3+3*Z%-   ABC%*1.1)
'
check_eitem:
check_operator: A% + (2*3+3*Z%-   ABC%*1.1)

check_literal:lit=',' ' A% + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' 'A% + (2*3+3*Z%-   ABC%*1.1)
'
  ',' != 'A'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' A% + (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' 'A% + (2*3+3*Z%-   ABC%*1.1)
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'A% + (2*3+3*Z%-   ABC%*1.1)
':
check_vname ret1 '% + (2*3+3*Z%-   ABC%*1.1)
':
check_variable: '% + (2*3+3*Z%-   ABC%*1.1)
'
check_variable: Ary test ' + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:lit='(' '  + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:'(' ' + (2*3+3*Z%-   ABC%*1.1)
'
  '(' != ' '
ret0
check_variable:ret1 vname=',Ü¸%' is str:0 int:1 flt:0 ary:0
check_expression:ret1 'A% + (2*3+3*Z%-   ABC%*1.1)
'
scan_cline: Checked len=32, 'A = A% + (2*3+3*Z%-   ABC%*1.1)
'
scan_line:
check_assignment:
check_variable:
check_vname 'A = A% + (2*3+3*Z%-   ABC%*1.1)
':
check_vname ret1 ' = A% + (2*3+3*Z%-   ABC%*1.1)
':
check_variable: ' = A% + (2*3+3*Z%-   ABC%*1.1)
'
check_variable: Ary test ' = A% + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:lit='(' '  = A% + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:'(' ' = A% + (2*3+3*Z%-   ABC%*1.1)
'
  '(' != ' '
ret0
check_variable:ret1 vname='},Ü¸' is str:0 int:0 flt:1 ary:0
check_literal:lit=' =' '  = A% + (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'=' '= A% + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After while(): A% + (2*3+3*Z%-   ABC%*1.1)

ret1
check_expression: 'A% + (2*3+3*Z%-   ABC%*1.1)
'
check_eitem:
check_operator: A% + (2*3+3*Z%-   ABC%*1.1)

check_literal:lit=',' ' A% + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' 'A% + (2*3+3*Z%-   ABC%*1.1)
'
  ',' != 'A'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' A% + (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' 'A% + (2*3+3*Z%-   ABC%*1.1)
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'A% + (2*3+3*Z%-   ABC%*1.1)
':
check_vname ret1 '% + (2*3+3*Z%-   ABC%*1.1)
':
check_variable: '% + (2*3+3*Z%-   ABC%*1.1)
'
check_variable: Ary test ' + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:lit='(' '  + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:'(' ' + (2*3+3*Z%-   ABC%*1.1)
'
  '(' != ' '
ret0
check_variable:ret1 vname='‡},Ü¸%' is str:0 int:1 flt:0 ary:0
check_expression:ret1 'A% + (2*3+3*Z%-   ABC%*1.1)
'
scan_assignment:
scan_variable:
scan_vname: 'A = A% + (2*3+3*Z%-   ABC%*1.1)
'
scan_vname: ret1 'A'
scan_variable: ' = A% + (2*3+3*Z%-   ABC%*1.1)
'
scan_variable: Ary test ' = A% + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:lit='(' '  = A% + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:'(' ' = A% + (2*3+3*Z%-   ABC%*1.1)
'
  '(' != ' '
ret0
scan_variable:ret1 vname='A' is str:0 int:0 flt:1 ary:0
scan_literal:lit=' =' ' = A% + (2*3+3*Z%-   ABC%*1.1)
'
scan_literal:After drop space:= A% + (2*3+3*Z%-   ABC%*1.1)

scan_literal:while loop:= A% + (2*3+3*Z%-   ABC%*1.1)

scan_expression: ' A% + (2*3+3*Z%-   ABC%*1.1)
'
check_eitem:
check_operator: A% + (2*3+3*Z%-   ABC%*1.1)

check_literal:lit=',' ' A% + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' 'A% + (2*3+3*Z%-   ABC%*1.1)
'
  ',' != 'A'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' A% + (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' 'A% + (2*3+3*Z%-   ABC%*1.1)
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'A% + (2*3+3*Z%-   ABC%*1.1)
':
check_vname ret1 '% + (2*3+3*Z%-   ABC%*1.1)
':
check_variable: '% + (2*3+3*Z%-   ABC%*1.1)
'
check_variable: Ary test ' + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:lit='(' '  + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:'(' ' + (2*3+3*Z%-   ABC%*1.1)
'
  '(' != ' '
ret0
check_variable:ret1 vname='¿|,Ü¸%' is str:0 int:1 flt:0 ary:0
scan_eitem:
check_operator: A% + (2*3+3*Z%-   ABC%*1.1)

check_literal:lit=',' ' A% + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' 'A% + (2*3+3*Z%-   ABC%*1.1)
'
  ',' != 'A'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' A% + (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' 'A% + (2*3+3*Z%-   ABC%*1.1)
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'A% + (2*3+3*Z%-   ABC%*1.1)
':
check_vname ret1 '% + (2*3+3*Z%-   ABC%*1.1)
':
check_variable: '% + (2*3+3*Z%-   ABC%*1.1)
'
check_variable: Ary test ' + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:lit='(' '  + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:'(' ' + (2*3+3*Z%-   ABC%*1.1)
'
  '(' != ' '
ret0
check_variable:ret1 vname='ê|,Ü¸%' is str:0 int:1 flt:0 ary:0
scan_atom:
check_literal:lit=' "' ' A% + (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' 'A% + (2*3+3*Z%-   ABC%*1.1)
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'A% + (2*3+3*Z%-   ABC%*1.1)
':
check_vname ret1 '% + (2*3+3*Z%-   ABC%*1.1)
':
check_variable: '% + (2*3+3*Z%-   ABC%*1.1)
'
check_variable: Ary test ' + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:lit='(' '  + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:'(' ' + (2*3+3*Z%-   ABC%*1.1)
'
  '(' != ' '
ret0
check_variable:ret1 vname='P{,Ü¸%' is str:0 int:1 flt:0 ary:0
scan_variable:
scan_vname: 'A% + (2*3+3*Z%-   ABC%*1.1)
'
scan_vname: ret1 'A'
scan_variable: '% + (2*3+3*Z%-   ABC%*1.1)
'
scan_variable: Ary test ' + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:lit='(' '  + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:'(' ' + (2*3+3*Z%-   ABC%*1.1)
'
  '(' != ' '
ret0
scan_variable:ret1 vname='A%' is str:0 int:1 flt:0 ary:0
check_eitem:
check_operator:  + (2*3+3*Z%-   ABC%*1.1)

check_literal:lit=',' ' + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' '+ (2*3+3*Z%-   ABC%*1.1)
'
  ',' != '+'
ret0
check_operator: ret1
scan_eitem:
check_operator:  + (2*3+3*Z%-   ABC%*1.1)

check_literal:lit=',' ' + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' '+ (2*3+3*Z%-   ABC%*1.1)
'
  ',' != '+'
ret0
check_operator: ret1
scan_operator: ' + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:lit=',' ' + (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' '+ (2*3+3*Z%-   ABC%*1.1)
'
  ',' != '+'
ret0
scan_operator: ret1 ' (2*3+3*Z%-   ABC%*1.1)
'
check_eitem:
check_operator:  (2*3+3*Z%-   ABC%*1.1)

check_literal:lit=',' ' (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' '(2*3+3*Z%-   ABC%*1.1)
'
  ',' != '('
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' '  (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' '(2*3+3*Z%-   ABC%*1.1)
'
  '"' != '('
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname ' (2*3+3*Z%-   ABC%*1.1)
':
check_vname ret0 '(2*3+3*Z%-   ABC%*1.1)
':
check_sub_expr:
check_literal:lit=' (' '  (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'(' '(2*3+3*Z%-   ABC%*1.1)
'
check_literal:After while():2*3+3*Z%-   ABC%*1.1)

ret1
check_sub_expr: ret1
scan_eitem:
check_operator:  (2*3+3*Z%-   ABC%*1.1)

check_literal:lit=',' ' (2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' '(2*3+3*Z%-   ABC%*1.1)
'
  ',' != '('
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' '  (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' '(2*3+3*Z%-   ABC%*1.1)
'
  '"' != '('
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname ' (2*3+3*Z%-   ABC%*1.1)
':
check_vname ret0 '(2*3+3*Z%-   ABC%*1.1)
':
check_sub_expr:
check_literal:lit=' (' '  (2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'(' '(2*3+3*Z%-   ABC%*1.1)
'
check_literal:After while():2*3+3*Z%-   ABC%*1.1)

ret1
check_sub_expr: ret1
scan_sub_expr:
scan_literal:lit=' (' ' (2*3+3*Z%-   ABC%*1.1)
'
scan_literal:After drop space:(2*3+3*Z%-   ABC%*1.1)

scan_literal:while loop:(2*3+3*Z%-   ABC%*1.1)

scan_expression: '2*3+3*Z%-   ABC%*1.1)
'
check_eitem:
check_operator: 2*3+3*Z%-   ABC%*1.1)

check_literal:lit=',' ' 2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' '2*3+3*Z%-   ABC%*1.1)
'
  ',' != '2'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' '2*3+3*Z%-   ABC%*1.1)
'
  '"' != '2'
ret0
check_number:
check_float:
isfloatdigit:
scan_eitem:
check_operator: 2*3+3*Z%-   ABC%*1.1)

check_literal:lit=',' ' 2*3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' '2*3+3*Z%-   ABC%*1.1)
'
  ',' != '2'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' '2*3+3*Z%-   ABC%*1.1)
'
  '"' != '2'
ret0
check_number:
check_float:
isfloatdigit:
scan_atom:
check_literal:lit=' "' ' 2*3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' '2*3+3*Z%-   ABC%*1.1)
'
  '"' != '2'
ret0
check_number:
check_float:
isfloatdigit:
scan_number:
check_float:
isfloatdigit:
scan_float:
isfloatdigit:
isfloatdigit:
check_eitem:
check_operator: *3+3*Z%-   ABC%*1.1)

check_literal:lit=',' ' *3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' '*3+3*Z%-   ABC%*1.1)
'
  ',' != '*'
ret0
check_operator: ret1
scan_eitem:
check_operator: *3+3*Z%-   ABC%*1.1)

check_literal:lit=',' ' *3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' '*3+3*Z%-   ABC%*1.1)
'
  ',' != '*'
ret0
check_operator: ret1
scan_operator: '*3+3*Z%-   ABC%*1.1)
'
check_literal:lit=',' ' *3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' '*3+3*Z%-   ABC%*1.1)
'
  ',' != '*'
ret0
scan_operator: ret1 '3+3*Z%-   ABC%*1.1)
'
check_eitem:
check_operator: 3+3*Z%-   ABC%*1.1)

check_literal:lit=',' ' 3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' '3+3*Z%-   ABC%*1.1)
'
  ',' != '3'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' '3+3*Z%-   ABC%*1.1)
'
  '"' != '3'
ret0
check_number:
check_float:
isfloatdigit:
scan_eitem:
check_operator: 3+3*Z%-   ABC%*1.1)

check_literal:lit=',' ' 3+3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' '3+3*Z%-   ABC%*1.1)
'
  ',' != '3'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' '3+3*Z%-   ABC%*1.1)
'
  '"' != '3'
ret0
check_number:
check_float:
isfloatdigit:
scan_atom:
check_literal:lit=' "' ' 3+3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' '3+3*Z%-   ABC%*1.1)
'
  '"' != '3'
ret0
check_number:
check_float:
isfloatdigit:
scan_number:
check_float:
isfloatdigit:
scan_float:
isfloatdigit:
isfloatdigit:
check_eitem:
check_operator: +3*Z%-   ABC%*1.1)

check_literal:lit=',' ' +3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' '+3*Z%-   ABC%*1.1)
'
  ',' != '+'
ret0
check_operator: ret1
scan_eitem:
check_operator: +3*Z%-   ABC%*1.1)

check_literal:lit=',' ' +3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' '+3*Z%-   ABC%*1.1)
'
  ',' != '+'
ret0
check_operator: ret1
scan_operator: '+3*Z%-   ABC%*1.1)
'
check_literal:lit=',' ' +3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' '+3*Z%-   ABC%*1.1)
'
  ',' != '+'
ret0
scan_operator: ret1 '3*Z%-   ABC%*1.1)
'
check_eitem:
check_operator: 3*Z%-   ABC%*1.1)

check_literal:lit=',' ' 3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' '3*Z%-   ABC%*1.1)
'
  ',' != '3'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' '3*Z%-   ABC%*1.1)
'
  '"' != '3'
ret0
check_number:
check_float:
isfloatdigit:
scan_eitem:
check_operator: 3*Z%-   ABC%*1.1)

check_literal:lit=',' ' 3*Z%-   ABC%*1.1)
'
check_literal:After drop space:',' '3*Z%-   ABC%*1.1)
'
  ',' != '3'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' '3*Z%-   ABC%*1.1)
'
  '"' != '3'
ret0
check_number:
check_float:
isfloatdigit:
scan_atom:
check_literal:lit=' "' ' 3*Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' '3*Z%-   ABC%*1.1)
'
  '"' != '3'
ret0
check_number:
check_float:
isfloatdigit:
scan_number:
check_float:
isfloatdigit:
scan_float:
isfloatdigit:
isfloatdigit:
check_eitem:
check_operator: *Z%-   ABC%*1.1)

check_literal:lit=',' ' *Z%-   ABC%*1.1)
'
check_literal:After drop space:',' '*Z%-   ABC%*1.1)
'
  ',' != '*'
ret0
check_operator: ret1
scan_eitem:
check_operator: *Z%-   ABC%*1.1)

check_literal:lit=',' ' *Z%-   ABC%*1.1)
'
check_literal:After drop space:',' '*Z%-   ABC%*1.1)
'
  ',' != '*'
ret0
check_operator: ret1
scan_operator: '*Z%-   ABC%*1.1)
'
check_literal:lit=',' ' *Z%-   ABC%*1.1)
'
check_literal:After drop space:',' '*Z%-   ABC%*1.1)
'
  ',' != '*'
ret0
scan_operator: ret1 'Z%-   ABC%*1.1)
'
check_eitem:
check_operator: Z%-   ABC%*1.1)

check_literal:lit=',' ' Z%-   ABC%*1.1)
'
check_literal:After drop space:',' 'Z%-   ABC%*1.1)
'
  ',' != 'Z'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' 'Z%-   ABC%*1.1)
'
  '"' != 'Z'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'Z%-   ABC%*1.1)
':
check_vname ret1 '%-   ABC%*1.1)
':
check_variable: '%-   ABC%*1.1)
'
check_variable: Ary test '-   ABC%*1.1)
'
check_literal:lit='(' ' -   ABC%*1.1)
'
check_literal:After drop space:'(' '-   ABC%*1.1)
'
  '(' != '-'
ret0
check_variable:ret1 vname='`|,Ü¸%' is str:0 int:1 flt:0 ary:0
scan_eitem:
check_operator: Z%-   ABC%*1.1)

check_literal:lit=',' ' Z%-   ABC%*1.1)
'
check_literal:After drop space:',' 'Z%-   ABC%*1.1)
'
  ',' != 'Z'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' 'Z%-   ABC%*1.1)
'
  '"' != 'Z'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'Z%-   ABC%*1.1)
':
check_vname ret1 '%-   ABC%*1.1)
':
check_variable: '%-   ABC%*1.1)
'
check_variable: Ary test '-   ABC%*1.1)
'
check_literal:lit='(' ' -   ABC%*1.1)
'
check_literal:After drop space:'(' '-   ABC%*1.1)
'
  '(' != '-'
ret0
check_variable:ret1 vname='0|,Ü¸%' is str:0 int:1 flt:0 ary:0
scan_atom:
check_literal:lit=' "' ' Z%-   ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' 'Z%-   ABC%*1.1)
'
  '"' != 'Z'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'Z%-   ABC%*1.1)
':
check_vname ret1 '%-   ABC%*1.1)
':
check_variable: '%-   ABC%*1.1)
'
check_variable: Ary test '-   ABC%*1.1)
'
check_literal:lit='(' ' -   ABC%*1.1)
'
check_literal:After drop space:'(' '-   ABC%*1.1)
'
  '(' != '-'
ret0
check_variable:ret1 vname='z,Ü¸%' is str:0 int:1 flt:0 ary:0
scan_variable:
scan_vname: 'Z%-   ABC%*1.1)
'
scan_vname: ret1 'Z'
scan_variable: '%-   ABC%*1.1)
'
scan_variable: Ary test '-   ABC%*1.1)
'
check_literal:lit='(' ' -   ABC%*1.1)
'
check_literal:After drop space:'(' '-   ABC%*1.1)
'
  '(' != '-'
ret0
scan_variable:ret1 vname='Z%' is str:0 int:1 flt:0 ary:0
check_eitem:
check_operator: -   ABC%*1.1)

check_literal:lit=',' ' -   ABC%*1.1)
'
check_literal:After drop space:',' '-   ABC%*1.1)
'
  ',' != '-'
ret0
check_operator: ret1
scan_eitem:
check_operator: -   ABC%*1.1)

check_literal:lit=',' ' -   ABC%*1.1)
'
check_literal:After drop space:',' '-   ABC%*1.1)
'
  ',' != '-'
ret0
check_operator: ret1
scan_operator: '-   ABC%*1.1)
'
check_literal:lit=',' ' -   ABC%*1.1)
'
check_literal:After drop space:',' '-   ABC%*1.1)
'
  ',' != '-'
ret0
scan_operator: ret1 '   ABC%*1.1)
'
check_eitem:
check_operator:    ABC%*1.1)

check_literal:lit=',' ' ABC%*1.1)
'
check_literal:After drop space:',' 'ABC%*1.1)
'
  ',' != 'A'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' '    ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' 'ABC%*1.1)
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname '   ABC%*1.1)
':
check_vname ret1 '%*1.1)
':
check_variable: '%*1.1)
'
check_variable: Ary test '*1.1)
'
check_literal:lit='(' ' *1.1)
'
check_literal:After drop space:'(' '*1.1)
'
  '(' != '*'
ret0
check_variable:ret1 vname='`|,Ü¸%' is str:0 int:1 flt:0 ary:0
scan_eitem:
check_operator:    ABC%*1.1)

check_literal:lit=',' ' ABC%*1.1)
'
check_literal:After drop space:',' 'ABC%*1.1)
'
  ',' != 'A'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' '    ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' 'ABC%*1.1)
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname '   ABC%*1.1)
':
check_vname ret1 '%*1.1)
':
check_variable: '%*1.1)
'
check_variable: Ary test '*1.1)
'
check_literal:lit='(' ' *1.1)
'
check_literal:After drop space:'(' '*1.1)
'
  '(' != '*'
ret0
check_variable:ret1 vname='0|,Ü¸%' is str:0 int:1 flt:0 ary:0
scan_atom:
check_literal:lit=' "' '    ABC%*1.1)
'
    dropping space
check_literal:After drop space:'"' 'ABC%*1.1)
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname '   ABC%*1.1)
':
check_vname ret1 '%*1.1)
':
check_variable: '%*1.1)
'
check_variable: Ary test '*1.1)
'
check_literal:lit='(' ' *1.1)
'
check_literal:After drop space:'(' '*1.1)
'
  '(' != '*'
ret0
check_variable:ret1 vname='z,Ü¸%' is str:0 int:1 flt:0 ary:0
scan_variable:
scan_vname: '   ABC%*1.1)
'
scan_vname: ret1 'ABC'
scan_variable: '%*1.1)
'
scan_variable: Ary test '*1.1)
'
check_literal:lit='(' ' *1.1)
'
check_literal:After drop space:'(' '*1.1)
'
  '(' != '*'
ret0
scan_variable:ret1 vname='ABC%' is str:0 int:1 flt:0 ary:0
check_eitem:
check_operator: *1.1)

check_literal:lit=',' ' *1.1)
'
check_literal:After drop space:',' '*1.1)
'
  ',' != '*'
ret0
check_operator: ret1
scan_eitem:
check_operator: *1.1)

check_literal:lit=',' ' *1.1)
'
check_literal:After drop space:',' '*1.1)
'
  ',' != '*'
ret0
check_operator: ret1
scan_operator: '*1.1)
'
check_literal:lit=',' ' *1.1)
'
check_literal:After drop space:',' '*1.1)
'
  ',' != '*'
ret0
scan_operator: ret1 '1.1)
'
check_eitem:
check_operator: 1.1)

check_literal:lit=',' ' 1.1)
'
check_literal:After drop space:',' '1.1)
'
  ',' != '1'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 1.1)
'
    dropping space
check_literal:After drop space:'"' '1.1)
'
  '"' != '1'
ret0
check_number:
check_float:
isfloatdigit:
scan_eitem:
check_operator: 1.1)

check_literal:lit=',' ' 1.1)
'
check_literal:After drop space:',' '1.1)
'
  ',' != '1'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 1.1)
'
    dropping space
check_literal:After drop space:'"' '1.1)
'
  '"' != '1'
ret0
check_number:
check_float:
isfloatdigit:
scan_atom:
check_literal:lit=' "' ' 1.1)
'
    dropping space
check_literal:After drop space:'"' '1.1)
'
  '"' != '1'
ret0
check_number:
check_float:
isfloatdigit:
scan_number:
check_float:
isfloatdigit:
scan_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_eitem:
check_operator: )

check_literal:lit=',' ' )
'
check_literal:After drop space:',' ')
'
  ',' != ')'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' )
'
    dropping space
check_literal:After drop space:'"' ')
'
  '"' != ')'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname ')
':
check_vname ret0 ')
':
check_sub_expr:
check_literal:lit=' (' ' )
'
    dropping space
check_literal:After drop space:'(' ')
'
  '(' != ')'
ret0
check_sub_expr: ret0
scan_expression: ret1 ')
'
scan_literal:lit=' )' ')
'
scan_literal:After drop space:)

scan_literal:while loop:)

check_eitem:
check_operator: 

check_literal:lit=',' ' '
check_literal:After drop space:',' ''
  ret0 Empty test string
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 
'
    dropping space
check_literal:After drop space:'"' ''
  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname '
':
check_vname ret0 '':
check_sub_expr:
check_literal:lit=' (' ' 
'
    dropping space
check_literal:After drop space:'(' ''
  ret0 Empty test string
check_sub_expr: ret0
scan_expression: ret1 '
'
scan_assignment: ret1
check_literal:lit=':' ' '
check_literal:After drop space:':' ''
  ret0 Empty test string
cline scanned OK
=======================cline==========================
==A% = 20
==
scan_cline:
check_line:
check_assignment:
check_variable:
check_vname 'A% = 20
':
check_vname ret1 '% = 20
':
check_variable: '% = 20
'
check_variable: Ary test ' = 20
'
check_literal:lit='(' '  = 20
'
check_literal:After drop space:'(' ' = 20
'
  '(' != ' '
ret0
check_variable:ret1 vname='@%' is str:0 int:1 flt:0 ary:0
check_literal:lit=' =' '  = 20
'
    dropping space
check_literal:After drop space:'=' '= 20
'
check_literal:After while(): 20

ret1
check_expression: '20
'
check_eitem:
check_operator: 20

check_literal:lit=',' ' 20
'
check_literal:After drop space:',' '20
'
  ',' != '2'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 20
'
    dropping space
check_literal:After drop space:'"' '20
'
  '"' != '2'
ret0
check_number:
check_float:
isfloatdigit:
check_expression:ret1 '20
'
scan_cline: Checked len=8, 'A% = 20
'
scan_line:
check_assignment:
check_variable:
check_vname 'A% = 20
':
check_vname ret1 '% = 20
':
check_variable: '% = 20
'
check_variable: Ary test ' = 20
'
check_literal:lit='(' '  = 20
'
check_literal:After drop space:'(' ' = 20
'
  '(' != ' '
ret0
check_variable:ret1 vname='Ä≠˚Gu%' is str:0 int:1 flt:0 ary:0
check_literal:lit=' =' '  = 20
'
    dropping space
check_literal:After drop space:'=' '= 20
'
check_literal:After while(): 20

ret1
check_expression: '20
'
check_eitem:
check_operator: 20

check_literal:lit=',' ' 20
'
check_literal:After drop space:',' '20
'
  ',' != '2'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 20
'
    dropping space
check_literal:After drop space:'"' '20
'
  '"' != '2'
ret0
check_number:
check_float:
isfloatdigit:
check_expression:ret1 '20
'
scan_assignment:
scan_variable:
scan_vname: 'A% = 20
'
scan_vname: ret1 'A'
scan_variable: '% = 20
'
scan_variable: Ary test ' = 20
'
check_literal:lit='(' '  = 20
'
check_literal:After drop space:'(' ' = 20
'
  '(' != ' '
ret0
scan_variable:ret1 vname='A%' is str:0 int:1 flt:0 ary:0
scan_literal:lit=' =' ' = 20
'
scan_literal:After drop space:= 20

scan_literal:while loop:= 20

scan_expression: ' 20
'
check_eitem:
check_operator: 20

check_literal:lit=',' ' 20
'
check_literal:After drop space:',' '20
'
  ',' != '2'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 20
'
    dropping space
check_literal:After drop space:'"' '20
'
  '"' != '2'
ret0
check_number:
check_float:
isfloatdigit:
scan_eitem:
check_operator: 20

check_literal:lit=',' ' 20
'
check_literal:After drop space:',' '20
'
  ',' != '2'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 20
'
    dropping space
check_literal:After drop space:'"' '20
'
  '"' != '2'
ret0
check_number:
check_float:
isfloatdigit:
scan_atom:
check_literal:lit=' "' ' 20
'
    dropping space
check_literal:After drop space:'"' '20
'
  '"' != '2'
ret0
check_number:
check_float:
isfloatdigit:
scan_number:
check_float:
isfloatdigit:
scan_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_eitem:
check_operator: 

check_literal:lit=',' ' '
check_literal:After drop space:',' ''
  ret0 Empty test string
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 
'
    dropping space
check_literal:After drop space:'"' ''
  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname '
':
check_vname ret0 '':
check_sub_expr:
check_literal:lit=' (' ' 
'
    dropping space
check_literal:After drop space:'(' ''
  ret0 Empty test string
check_sub_expr: ret0
scan_expression: ret1 '
'
scan_assignment: ret1
check_literal:lit=':' ' '
check_literal:After drop space:':' ''
  ret0 Empty test string
cline scanned OK
=======================cline==========================
==PRINT "abc"
==
scan_cline:
check_line:
check_assignment:
check_variable:
check_vname 'PRINT "abc"
':
check_vname ret1 ' "abc"
':
check_variable: ' "abc"
'
check_variable: Ary test ' "abc"
'
check_literal:lit='(' '  "abc"
'
check_literal:After drop space:'(' ' "abc"
'
  '(' != ' '
ret0
check_variable:ret1 vname='@~,Ü¸' is str:0 int:0 flt:1 ary:0
check_literal:lit=' =' '  "abc"
'
    dropping space
check_literal:After drop space:'=' '"abc"
'
  '=' != '"'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_cline: Checked len=12, 'PRINT "abc"
'
scan_line:
check_assignment:
check_variable:
check_vname 'PRINT "abc"
':
check_vname ret1 ' "abc"
':
check_variable: ' "abc"
'
check_variable: Ary test ' "abc"
'
check_literal:lit='(' '  "abc"
'
check_literal:After drop space:'(' ' "abc"
'
  '(' != ' '
ret0
check_variable:ret1 vname='@' is str:0 int:0 flt:1 ary:0
check_literal:lit=' =' '  "abc"
'
    dropping space
check_literal:After drop space:'=' '"abc"
'
  '=' != '"'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_line:check_command:1 
scan_command:
scan_expression: ' "abc"
'
check_eitem:
check_operator: "abc"

check_literal:lit=',' ' "abc"
'
check_literal:After drop space:',' '"abc"
'
  ',' != '"'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' "abc"
'
    dropping space
check_literal:After drop space:'"' '"abc"
'
check_literal:After while():abc"

ret1
scan_eitem:
check_operator: "abc"

check_literal:lit=',' ' "abc"
'
check_literal:After drop space:',' '"abc"
'
  ',' != '"'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' "abc"
'
    dropping space
check_literal:After drop space:'"' '"abc"
'
check_literal:After while():abc"

ret1
scan_atom:
check_literal:lit=' "' ' "abc"
'
    dropping space
check_literal:After drop space:'"' '"abc"
'
check_literal:After while():abc"

ret1
scan_string:
scan_literal:lit=' "' '"abc"
'
scan_literal:After drop space:"abc"

scan_literal:while loop:"abc"

  (in if) 'abc"
'
  (in wh) 'abc"
'
  (in wh) 'bc"
'
  (in wh) 'bc"
'
  (in wh) 'c"
'
  (in wh) 'c"
'
  (in wh) '"
'
scan_string: ret1
check_eitem:
check_operator: 

check_literal:lit=',' ' '
check_literal:After drop space:',' ''
  ret0 Empty test string
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 
'
    dropping space
check_literal:After drop space:'"' ''
  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname '
':
check_vname ret0 '':
check_sub_expr:
check_literal:lit=' (' ' 
'
    dropping space
check_literal:After drop space:'(' ''
  ret0 Empty test string
check_sub_expr: ret0
scan_expression: ret1 '
'
scan_command: ret1 =>'PRINT'
check_literal:lit=':' ' '
check_literal:After drop space:':' ''
  ret0 Empty test string
cline scanned OK
=======================cline==========================
==PRINT "asdfgh"
==
scan_cline:
check_line:
check_assignment:
check_variable:
check_vname 'PRINT "asdfgh"
':
check_vname ret1 ' "asdfgh"
':
check_variable: ' "asdfgh"
'
check_variable: Ary test ' "asdfgh"
'
check_literal:lit='(' '  "asdfgh"
'
check_literal:After drop space:'(' ' "asdfgh"
'
  '(' != ' '
ret0
check_variable:ret1 vname='`~,Ü¸' is str:0 int:0 flt:1 ary:0
check_literal:lit=' =' '  "asdfgh"
'
    dropping space
check_literal:After drop space:'=' '"asdfgh"
'
  '=' != '"'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_cline: Checked len=15, 'PRINT "asdfgh"
'
scan_line:
check_assignment:
check_variable:
check_vname 'PRINT "asdfgh"
':
check_vname ret1 ' "asdfgh"
':
check_variable: ' "asdfgh"
'
check_variable: Ary test ' "asdfgh"
'
check_literal:lit='(' '  "asdfgh"
'
check_literal:After drop space:'(' ' "asdfgh"
'
  '(' != ' '
ret0
check_variable:ret1 vname='@' is str:0 int:0 flt:1 ary:0
check_literal:lit=' =' '  "asdfgh"
'
    dropping space
check_literal:After drop space:'=' '"asdfgh"
'
  '=' != '"'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_line:check_command:1 
scan_command:
scan_expression: ' "asdfgh"
'
check_eitem:
check_operator: "asdfgh"

check_literal:lit=',' ' "asdfgh"
'
check_literal:After drop space:',' '"asdfgh"
'
  ',' != '"'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' "asdfgh"
'
    dropping space
check_literal:After drop space:'"' '"asdfgh"
'
check_literal:After while():asdfgh"

ret1
scan_eitem:
check_operator: "asdfgh"

check_literal:lit=',' ' "asdfgh"
'
check_literal:After drop space:',' '"asdfgh"
'
  ',' != '"'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' "asdfgh"
'
    dropping space
check_literal:After drop space:'"' '"asdfgh"
'
check_literal:After while():asdfgh"

ret1
scan_atom:
check_literal:lit=' "' ' "asdfgh"
'
    dropping space
check_literal:After drop space:'"' '"asdfgh"
'
check_literal:After while():asdfgh"

ret1
scan_string:
scan_literal:lit=' "' '"asdfgh"
'
scan_literal:After drop space:"asdfgh"

scan_literal:while loop:"asdfgh"

  (in if) 'asdfgh"
'
  (in wh) 'asdfgh"
'
  (in wh) 'sdfgh"
'
  (in wh) 'sdfgh"
'
  (in wh) 'dfgh"
'
  (in wh) 'dfgh"
'
  (in wh) 'fgh"
'
  (in wh) 'fgh"
'
  (in wh) 'gh"
'
  (in wh) 'gh"
'
  (in wh) 'h"
'
  (in wh) 'h"
'
  (in wh) '"
'
scan_string: ret1
check_eitem:
check_operator: 

check_literal:lit=',' ' '
check_literal:After drop space:',' ''
  ret0 Empty test string
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 
'
    dropping space
check_literal:After drop space:'"' ''
  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname '
':
check_vname ret0 '':
check_sub_expr:
check_literal:lit=' (' ' 
'
    dropping space
check_literal:After drop space:'(' ''
  ret0 Empty test string
check_sub_expr: ret0
scan_expression: ret1 '
'
scan_command: ret1 =>'PRINT'
check_literal:lit=':' ' '
check_literal:After drop space:':' ''
  ret0 Empty test string
cline scanned OK
=======================cline==========================
==PRINT   "    abc    "
==
scan_cline:
check_line:
check_assignment:
check_variable:
check_vname 'PRINT   "    abc    "
':
check_vname ret1 '   "    abc    "
':
check_variable: '   "    abc    "
'
check_variable: Ary test '   "    abc    "
'
check_literal:lit='(' '    "    abc    "
'
check_literal:After drop space:'(' '   "    abc    "
'
  '(' != ' '
ret0
check_variable:ret1 vname='`~,Ü¸' is str:0 int:0 flt:1 ary:0
check_literal:lit=' =' '    "    abc    "
'
    dropping space
check_literal:After drop space:'=' '"    abc    "
'
  '=' != '"'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_cline: Checked len=22, 'PRINT   "    abc    "
'
scan_line:
check_assignment:
check_variable:
check_vname 'PRINT   "    abc    "
':
check_vname ret1 '   "    abc    "
':
check_variable: '   "    abc    "
'
check_variable: Ary test '   "    abc    "
'
check_literal:lit='(' '    "    abc    "
'
check_literal:After drop space:'(' '   "    abc    "
'
  '(' != ' '
ret0
check_variable:ret1 vname='@' is str:0 int:0 flt:1 ary:0
check_literal:lit=' =' '    "    abc    "
'
    dropping space
check_literal:After drop space:'=' '"    abc    "
'
  '=' != '"'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_line:check_command:1 
scan_command:
scan_expression: '   "    abc    "
'
check_eitem:
check_operator: "    abc    "

check_literal:lit=',' ' "    abc    "
'
check_literal:After drop space:',' '"    abc    "
'
  ',' != '"'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' "    abc    "
'
    dropping space
check_literal:After drop space:'"' '"    abc    "
'
check_literal:After while():    abc    "

ret1
scan_eitem:
check_operator: "    abc    "

check_literal:lit=',' ' "    abc    "
'
check_literal:After drop space:',' '"    abc    "
'
  ',' != '"'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' "    abc    "
'
    dropping space
check_literal:After drop space:'"' '"    abc    "
'
check_literal:After while():    abc    "

ret1
scan_atom:
check_literal:lit=' "' ' "    abc    "
'
    dropping space
check_literal:After drop space:'"' '"    abc    "
'
check_literal:After while():    abc    "

ret1
scan_string:
scan_literal:lit=' "' '"    abc    "
'
scan_literal:After drop space:"    abc    "

scan_literal:while loop:"    abc    "

  (in if) '    abc    "
'
  (in wh) '    abc    "
'
  (in wh) '   abc    "
'
  (in wh) '   abc    "
'
  (in wh) '  abc    "
'
  (in wh) '  abc    "
'
  (in wh) ' abc    "
'
  (in wh) ' abc    "
'
  (in wh) 'abc    "
'
  (in wh) 'abc    "
'
  (in wh) 'bc    "
'
  (in wh) 'bc    "
'
  (in wh) 'c    "
'
  (in wh) 'c    "
'
  (in wh) '    "
'
  (in wh) '    "
'
  (in wh) '   "
'
  (in wh) '   "
'
  (in wh) '  "
'
  (in wh) '  "
'
  (in wh) ' "
'
  (in wh) ' "
'
  (in wh) '"
'
scan_string: ret1
check_eitem:
check_operator: 

check_literal:lit=',' ' '
check_literal:After drop space:',' ''
  ret0 Empty test string
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 
'
    dropping space
check_literal:After drop space:'"' ''
  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname '
':
check_vname ret0 '':
check_sub_expr:
check_literal:lit=' (' ' 
'
    dropping space
check_literal:After drop space:'(' ''
  ret0 Empty test string
check_sub_expr: ret0
scan_expression: ret1 '
'
scan_command: ret1 =>'PRINT'
check_literal:lit=':' ' '
check_literal:After drop space:':' ''
  ret0 Empty test string
cline scanned OK
=======================cline==========================
==PRINT A%
==
scan_cline:
check_line:
check_assignment:
check_variable:
check_vname 'PRINT A%
':
check_vname ret1 ' A%
':
check_variable: ' A%
'
check_variable: Ary test ' A%
'
check_literal:lit='(' '  A%
'
check_literal:After drop space:'(' ' A%
'
  '(' != ' '
ret0
check_variable:ret1 vname='`~,Ü¸' is str:0 int:0 flt:1 ary:0
check_literal:lit=' =' '  A%
'
    dropping space
check_literal:After drop space:'=' 'A%
'
  '=' != 'A'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_cline: Checked len=9, 'PRINT A%
'
scan_line:
check_assignment:
check_variable:
check_vname 'PRINT A%
':
check_vname ret1 ' A%
':
check_variable: ' A%
'
check_variable: Ary test ' A%
'
check_literal:lit='(' '  A%
'
check_literal:After drop space:'(' ' A%
'
  '(' != ' '
ret0
check_variable:ret1 vname='@' is str:0 int:0 flt:1 ary:0
check_literal:lit=' =' '  A%
'
    dropping space
check_literal:After drop space:'=' 'A%
'
  '=' != 'A'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_line:check_command:1 
scan_command:
scan_expression: ' A%
'
check_eitem:
check_operator: A%

check_literal:lit=',' ' A%
'
check_literal:After drop space:',' 'A%
'
  ',' != 'A'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' A%
'
    dropping space
check_literal:After drop space:'"' 'A%
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'A%
':
check_vname ret1 '%
':
check_variable: '%
'
check_variable: Ary test '
'
check_literal:lit='(' ' 
'
check_literal:After drop space:'(' '
'
  '(' != '
'
ret0
check_variable:ret1 vname='‡},Ü¸%' is str:0 int:1 flt:0 ary:0
scan_eitem:
check_operator: A%

check_literal:lit=',' ' A%
'
check_literal:After drop space:',' 'A%
'
  ',' != 'A'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' A%
'
    dropping space
check_literal:After drop space:'"' 'A%
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'A%
':
check_vname ret1 '%
':
check_variable: '%
'
check_variable: Ary test '
'
check_literal:lit='(' ' 
'
check_literal:After drop space:'(' '
'
  '(' != '
'
ret0
check_variable:ret1 vname='∞},Ü¸%' is str:0 int:1 flt:0 ary:0
scan_atom:
check_literal:lit=' "' ' A%
'
    dropping space
check_literal:After drop space:'"' 'A%
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'A%
':
check_vname ret1 '%
':
check_variable: '%
'
check_variable: Ary test '
'
check_literal:lit='(' ' 
'
check_literal:After drop space:'(' '
'
  '(' != '
'
ret0
check_variable:ret1 vname='p|,Ü¸%' is str:0 int:1 flt:0 ary:0
scan_variable:
scan_vname: 'A%
'
scan_vname: ret1 'A'
scan_variable: '%
'
scan_variable: Ary test '
'
check_literal:lit='(' ' 
'
check_literal:After drop space:'(' '
'
  '(' != '
'
ret0
scan_variable:ret1 vname='A%' is str:0 int:1 flt:0 ary:0
check_eitem:
check_operator: 

check_literal:lit=',' ' '
check_literal:After drop space:',' ''
  ret0 Empty test string
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 
'
    dropping space
check_literal:After drop space:'"' ''
  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname '
':
check_vname ret0 '':
check_sub_expr:
check_literal:lit=' (' ' 
'
    dropping space
check_literal:After drop space:'(' ''
  ret0 Empty test string
check_sub_expr: ret0
scan_expression: ret1 '
'
scan_command: ret1 =>'PRINT'
check_literal:lit=':' ' '
check_literal:After drop space:':' ''
  ret0 Empty test string
cline scanned OK
=======================cline==========================
==PRINT B
==
scan_cline:
check_line:
check_assignment:
check_variable:
check_vname 'PRINT B
':
check_vname ret1 ' B
':
check_variable: ' B
'
check_variable: Ary test ' B
'
check_literal:lit='(' '  B
'
check_literal:After drop space:'(' ' B
'
  '(' != ' '
ret0
check_variable:ret1 vname='`~,Ü¸' is str:0 int:0 flt:1 ary:0
check_literal:lit=' =' '  B
'
    dropping space
check_literal:After drop space:'=' 'B
'
  '=' != 'B'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_cline: Checked len=8, 'PRINT B
'
scan_line:
check_assignment:
check_variable:
check_vname 'PRINT B
':
check_vname ret1 ' B
':
check_variable: ' B
'
check_variable: Ary test ' B
'
check_literal:lit='(' '  B
'
check_literal:After drop space:'(' ' B
'
  '(' != ' '
ret0
check_variable:ret1 vname='@' is str:0 int:0 flt:1 ary:0
check_literal:lit=' =' '  B
'
    dropping space
check_literal:After drop space:'=' 'B
'
  '=' != 'B'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_line:check_command:1 
scan_command:
scan_expression: ' B
'
check_eitem:
check_operator: B

check_literal:lit=',' ' B
'
check_literal:After drop space:',' 'B
'
  ',' != 'B'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' B
'
    dropping space
check_literal:After drop space:'"' 'B
'
  '"' != 'B'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'B
':
check_vname ret1 '
':
check_variable: '
'
check_variable: Ary test '
'
check_literal:lit='(' ' 
'
check_literal:After drop space:'(' '
'
  '(' != '
'
ret0
check_variable:ret1 vname='‡},Ü¸' is str:0 int:0 flt:1 ary:0
scan_eitem:
check_operator: B

check_literal:lit=',' ' B
'
check_literal:After drop space:',' 'B
'
  ',' != 'B'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' B
'
    dropping space
check_literal:After drop space:'"' 'B
'
  '"' != 'B'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'B
':
check_vname ret1 '
':
check_variable: '
'
check_variable: Ary test '
'
check_literal:lit='(' ' 
'
check_literal:After drop space:'(' '
'
  '(' != '
'
ret0
check_variable:ret1 vname='∞},Ü¸' is str:0 int:0 flt:1 ary:0
scan_atom:
check_literal:lit=' "' ' B
'
    dropping space
check_literal:After drop space:'"' 'B
'
  '"' != 'B'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'B
':
check_vname ret1 '
':
check_variable: '
'
check_variable: Ary test '
'
check_literal:lit='(' ' 
'
check_literal:After drop space:'(' '
'
  '(' != '
'
ret0
check_variable:ret1 vname='p|,Ü¸' is str:0 int:0 flt:1 ary:0
scan_variable:
scan_vname: 'B
'
scan_vname: ret1 'B'
scan_variable: '
'
scan_variable: Ary test '
'
check_literal:lit='(' ' 
'
check_literal:After drop space:'(' '
'
  '(' != '
'
ret0
scan_variable:ret1 vname='B' is str:0 int:0 flt:1 ary:0
check_eitem:
check_operator: 

check_literal:lit=',' ' '
check_literal:After drop space:',' ''
  ret0 Empty test string
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 
'
    dropping space
check_literal:After drop space:'"' ''
  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname '
':
check_vname ret0 '':
check_sub_expr:
check_literal:lit=' (' ' 
'
    dropping space
check_literal:After drop space:'(' ''
  ret0 Empty test string
check_sub_expr: ret0
scan_expression: ret1 '
'
scan_command: ret1 =>'PRINT'
check_literal:lit=':' ' '
check_literal:After drop space:':' ''
  ret0 Empty test string
cline scanned OK
=======================cline==========================
==PRINT ABC
==
scan_cline:
check_line:
check_assignment:
check_variable:
check_vname 'PRINT ABC
':
check_vname ret1 ' ABC
':
check_variable: ' ABC
'
check_variable: Ary test ' ABC
'
check_literal:lit='(' '  ABC
'
check_literal:After drop space:'(' ' ABC
'
  '(' != ' '
ret0
check_variable:ret1 vname='`~,Ü¸' is str:0 int:0 flt:1 ary:0
check_literal:lit=' =' '  ABC
'
    dropping space
check_literal:After drop space:'=' 'ABC
'
  '=' != 'A'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_cline: Checked len=10, 'PRINT ABC
'
scan_line:
check_assignment:
check_variable:
check_vname 'PRINT ABC
':
check_vname ret1 ' ABC
':
check_variable: ' ABC
'
check_variable: Ary test ' ABC
'
check_literal:lit='(' '  ABC
'
check_literal:After drop space:'(' ' ABC
'
  '(' != ' '
ret0
check_variable:ret1 vname='@' is str:0 int:0 flt:1 ary:0
check_literal:lit=' =' '  ABC
'
    dropping space
check_literal:After drop space:'=' 'ABC
'
  '=' != 'A'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_line:check_command:1 
scan_command:
scan_expression: ' ABC
'
check_eitem:
check_operator: ABC

check_literal:lit=',' ' ABC
'
check_literal:After drop space:',' 'ABC
'
  ',' != 'A'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' ABC
'
    dropping space
check_literal:After drop space:'"' 'ABC
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'ABC
':
check_vname ret1 '
':
check_variable: '
'
check_variable: Ary test '
'
check_literal:lit='(' ' 
'
check_literal:After drop space:'(' '
'
  '(' != '
'
ret0
check_variable:ret1 vname='‡},Ü¸' is str:0 int:0 flt:1 ary:0
scan_eitem:
check_operator: ABC

check_literal:lit=',' ' ABC
'
check_literal:After drop space:',' 'ABC
'
  ',' != 'A'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' ABC
'
    dropping space
check_literal:After drop space:'"' 'ABC
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'ABC
':
check_vname ret1 '
':
check_variable: '
'
check_variable: Ary test '
'
check_literal:lit='(' ' 
'
check_literal:After drop space:'(' '
'
  '(' != '
'
ret0
check_variable:ret1 vname='∞},Ü¸' is str:0 int:0 flt:1 ary:0
scan_atom:
check_literal:lit=' "' ' ABC
'
    dropping space
check_literal:After drop space:'"' 'ABC
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'ABC
':
check_vname ret1 '
':
check_variable: '
'
check_variable: Ary test '
'
check_literal:lit='(' ' 
'
check_literal:After drop space:'(' '
'
  '(' != '
'
ret0
check_variable:ret1 vname='p|,Ü¸' is str:0 int:0 flt:1 ary:0
scan_variable:
scan_vname: 'ABC
'
scan_vname: ret1 'ABC'
scan_variable: '
'
scan_variable: Ary test '
'
check_literal:lit='(' ' 
'
check_literal:After drop space:'(' '
'
  '(' != '
'
ret0
scan_variable:ret1 vname='ABC' is str:0 int:0 flt:1 ary:0
check_eitem:
check_operator: 

check_literal:lit=',' ' '
check_literal:After drop space:',' ''
  ret0 Empty test string
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 
'
    dropping space
check_literal:After drop space:'"' ''
  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname '
':
check_vname ret0 '':
check_sub_expr:
check_literal:lit=' (' ' 
'
    dropping space
check_literal:After drop space:'(' ''
  ret0 Empty test string
check_sub_expr: ret0
scan_expression: ret1 '
'
scan_command: ret1 =>'PRINT'
check_literal:lit=':' ' '
check_literal:After drop space:':' ''
  ret0 Empty test string
cline scanned OK
=======================cline==========================
==PRINT ABC%
==
scan_cline:
check_line:
check_assignment:
check_variable:
check_vname 'PRINT ABC%
':
check_vname ret1 ' ABC%
':
check_variable: ' ABC%
'
check_variable: Ary test ' ABC%
'
check_literal:lit='(' '  ABC%
'
check_literal:After drop space:'(' ' ABC%
'
  '(' != ' '
ret0
check_variable:ret1 vname='`~,Ü¸' is str:0 int:0 flt:1 ary:0
check_literal:lit=' =' '  ABC%
'
    dropping space
check_literal:After drop space:'=' 'ABC%
'
  '=' != 'A'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_cline: Checked len=11, 'PRINT ABC%
'
scan_line:
check_assignment:
check_variable:
check_vname 'PRINT ABC%
':
check_vname ret1 ' ABC%
':
check_variable: ' ABC%
'
check_variable: Ary test ' ABC%
'
check_literal:lit='(' '  ABC%
'
check_literal:After drop space:'(' ' ABC%
'
  '(' != ' '
ret0
check_variable:ret1 vname='@' is str:0 int:0 flt:1 ary:0
check_literal:lit=' =' '  ABC%
'
    dropping space
check_literal:After drop space:'=' 'ABC%
'
  '=' != 'A'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_line:check_command:1 
scan_command:
scan_expression: ' ABC%
'
check_eitem:
check_operator: ABC%

check_literal:lit=',' ' ABC%
'
check_literal:After drop space:',' 'ABC%
'
  ',' != 'A'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' ABC%
'
    dropping space
check_literal:After drop space:'"' 'ABC%
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'ABC%
':
check_vname ret1 '%
':
check_variable: '%
'
check_variable: Ary test '
'
check_literal:lit='(' ' 
'
check_literal:After drop space:'(' '
'
  '(' != '
'
ret0
check_variable:ret1 vname='‡},Ü¸%' is str:0 int:1 flt:0 ary:0
scan_eitem:
check_operator: ABC%

check_literal:lit=',' ' ABC%
'
check_literal:After drop space:',' 'ABC%
'
  ',' != 'A'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' ABC%
'
    dropping space
check_literal:After drop space:'"' 'ABC%
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'ABC%
':
check_vname ret1 '%
':
check_variable: '%
'
check_variable: Ary test '
'
check_literal:lit='(' ' 
'
check_literal:After drop space:'(' '
'
  '(' != '
'
ret0
check_variable:ret1 vname='∞},Ü¸%' is str:0 int:1 flt:0 ary:0
scan_atom:
check_literal:lit=' "' ' ABC%
'
    dropping space
check_literal:After drop space:'"' 'ABC%
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'ABC%
':
check_vname ret1 '%
':
check_variable: '%
'
check_variable: Ary test '
'
check_literal:lit='(' ' 
'
check_literal:After drop space:'(' '
'
  '(' != '
'
ret0
check_variable:ret1 vname='p|,Ü¸%' is str:0 int:1 flt:0 ary:0
scan_variable:
scan_vname: 'ABC%
'
scan_vname: ret1 'ABC'
scan_variable: '%
'
scan_variable: Ary test '
'
check_literal:lit='(' ' 
'
check_literal:After drop space:'(' '
'
  '(' != '
'
ret0
scan_variable:ret1 vname='ABC%' is str:0 int:1 flt:0 ary:0
check_eitem:
check_operator: 

check_literal:lit=',' ' '
check_literal:After drop space:',' ''
  ret0 Empty test string
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 
'
    dropping space
check_literal:After drop space:'"' ''
  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname '
':
check_vname ret0 '':
check_sub_expr:
check_literal:lit=' (' ' 
'
    dropping space
check_literal:After drop space:'(' ''
  ret0 Empty test string
check_sub_expr: ret0
scan_expression: ret1 '
'
scan_command: ret1 =>'PRINT'
check_literal:lit=':' ' '
check_literal:After drop space:':' ''
  ret0 Empty test string
cline scanned OK
=======================cline==========================
==PRINT A$
==
scan_cline:
check_line:
check_assignment:
check_variable:
check_vname 'PRINT A$
':
check_vname ret1 ' A$
':
check_variable: ' A$
'
check_variable: Ary test ' A$
'
check_literal:lit='(' '  A$
'
check_literal:After drop space:'(' ' A$
'
  '(' != ' '
ret0
check_variable:ret1 vname='`~,Ü¸' is str:0 int:0 flt:1 ary:0
check_literal:lit=' =' '  A$
'
    dropping space
check_literal:After drop space:'=' 'A$
'
  '=' != 'A'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_cline: Checked len=9, 'PRINT A$
'
scan_line:
check_assignment:
check_variable:
check_vname 'PRINT A$
':
check_vname ret1 ' A$
':
check_variable: ' A$
'
check_variable: Ary test ' A$
'
check_literal:lit='(' '  A$
'
check_literal:After drop space:'(' ' A$
'
  '(' != ' '
ret0
check_variable:ret1 vname='@' is str:0 int:0 flt:1 ary:0
check_literal:lit=' =' '  A$
'
    dropping space
check_literal:After drop space:'=' 'A$
'
  '=' != 'A'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_line:check_command:1 
scan_command:
scan_expression: ' A$
'
check_eitem:
check_operator: A$

check_literal:lit=',' ' A$
'
check_literal:After drop space:',' 'A$
'
  ',' != 'A'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' A$
'
    dropping space
check_literal:After drop space:'"' 'A$
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'A$
':
check_vname ret1 '$
':
check_variable: '$
'
check_variable: Ary test '
'
check_literal:lit='(' ' 
'
check_literal:After drop space:'(' '
'
  '(' != '
'
ret0
check_variable:ret1 vname='‡},Ü¸$' is str:1 int:0 flt:0 ary:0
scan_eitem:
check_operator: A$

check_literal:lit=',' ' A$
'
check_literal:After drop space:',' 'A$
'
  ',' != 'A'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' A$
'
    dropping space
check_literal:After drop space:'"' 'A$
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'A$
':
check_vname ret1 '$
':
check_variable: '$
'
check_variable: Ary test '
'
check_literal:lit='(' ' 
'
check_literal:After drop space:'(' '
'
  '(' != '
'
ret0
check_variable:ret1 vname='∞},Ü¸$' is str:1 int:0 flt:0 ary:0
scan_atom:
check_literal:lit=' "' ' A$
'
    dropping space
check_literal:After drop space:'"' 'A$
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'A$
':
check_vname ret1 '$
':
check_variable: '$
'
check_variable: Ary test '
'
check_literal:lit='(' ' 
'
check_literal:After drop space:'(' '
'
  '(' != '
'
ret0
check_variable:ret1 vname='p|,Ü¸$' is str:1 int:0 flt:0 ary:0
scan_variable:
scan_vname: 'A$
'
scan_vname: ret1 'A'
scan_variable: '$
'
scan_variable: Ary test '
'
check_literal:lit='(' ' 
'
check_literal:After drop space:'(' '
'
  '(' != '
'
ret0
scan_variable:ret1 vname='A$' is str:1 int:0 flt:0 ary:0
check_eitem:
check_operator: 

check_literal:lit=',' ' '
check_literal:After drop space:',' ''
  ret0 Empty test string
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 
'
    dropping space
check_literal:After drop space:'"' ''
  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname '
':
check_vname ret0 '':
check_sub_expr:
check_literal:lit=' (' ' 
'
    dropping space
check_literal:After drop space:'(' ''
  ret0 Empty test string
check_sub_expr: ret0
scan_expression: ret1 '
'
scan_command: ret1 =>'PRINT'
check_literal:lit=':' ' '
check_literal:After drop space:':' ''
  ret0 Empty test string
cline scanned OK
=======================cline==========================
==PRINT DEF$
==
scan_cline:
check_line:
check_assignment:
check_variable:
check_vname 'PRINT DEF$
':
check_vname ret1 ' DEF$
':
check_variable: ' DEF$
'
check_variable: Ary test ' DEF$
'
check_literal:lit='(' '  DEF$
'
check_literal:After drop space:'(' ' DEF$
'
  '(' != ' '
ret0
check_variable:ret1 vname='`~,Ü¸' is str:0 int:0 flt:1 ary:0
check_literal:lit=' =' '  DEF$
'
    dropping space
check_literal:After drop space:'=' 'DEF$
'
  '=' != 'D'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_cline: Checked len=11, 'PRINT DEF$
'
scan_line:
check_assignment:
check_variable:
check_vname 'PRINT DEF$
':
check_vname ret1 ' DEF$
':
check_variable: ' DEF$
'
check_variable: Ary test ' DEF$
'
check_literal:lit='(' '  DEF$
'
check_literal:After drop space:'(' ' DEF$
'
  '(' != ' '
ret0
check_variable:ret1 vname='@' is str:0 int:0 flt:1 ary:0
check_literal:lit=' =' '  DEF$
'
    dropping space
check_literal:After drop space:'=' 'DEF$
'
  '=' != 'D'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_line:check_command:1 
scan_command:
scan_expression: ' DEF$
'
check_eitem:
check_operator: DEF$

check_literal:lit=',' ' DEF$
'
check_literal:After drop space:',' 'DEF$
'
  ',' != 'D'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' DEF$
'
    dropping space
check_literal:After drop space:'"' 'DEF$
'
  '"' != 'D'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'DEF$
':
check_vname ret1 '$
':
check_variable: '$
'
check_variable: Ary test '
'
check_literal:lit='(' ' 
'
check_literal:After drop space:'(' '
'
  '(' != '
'
ret0
check_variable:ret1 vname='‡},Ü¸$' is str:1 int:0 flt:0 ary:0
scan_eitem:
check_operator: DEF$

check_literal:lit=',' ' DEF$
'
check_literal:After drop space:',' 'DEF$
'
  ',' != 'D'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' DEF$
'
    dropping space
check_literal:After drop space:'"' 'DEF$
'
  '"' != 'D'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'DEF$
':
check_vname ret1 '$
':
check_variable: '$
'
check_variable: Ary test '
'
check_literal:lit='(' ' 
'
check_literal:After drop space:'(' '
'
  '(' != '
'
ret0
check_variable:ret1 vname='∞},Ü¸$' is str:1 int:0 flt:0 ary:0
scan_atom:
check_literal:lit=' "' ' DEF$
'
    dropping space
check_literal:After drop space:'"' 'DEF$
'
  '"' != 'D'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'DEF$
':
check_vname ret1 '$
':
check_variable: '$
'
check_variable: Ary test '
'
check_literal:lit='(' ' 
'
check_literal:After drop space:'(' '
'
  '(' != '
'
ret0
check_variable:ret1 vname='p|,Ü¸$' is str:1 int:0 flt:0 ary:0
scan_variable:
scan_vname: 'DEF$
'
scan_vname: ret1 'DEF'
scan_variable: '$
'
scan_variable: Ary test '
'
check_literal:lit='(' ' 
'
check_literal:After drop space:'(' '
'
  '(' != '
'
ret0
scan_variable:ret1 vname='DEF$' is str:1 int:0 flt:0 ary:0
check_eitem:
check_operator: 

check_literal:lit=',' ' '
check_literal:After drop space:',' ''
  ret0 Empty test string
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 
'
    dropping space
check_literal:After drop space:'"' ''
  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname '
':
check_vname ret0 '':
check_sub_expr:
check_literal:lit=' (' ' 
'
    dropping space
check_literal:After drop space:'(' ''
  ret0 Empty test string
check_sub_expr: ret0
scan_expression: ret1 '
'
scan_command: ret1 =>'PRINT'
check_literal:lit=':' ' '
check_literal:After drop space:':' ''
  ret0 Empty test string
cline scanned OK
=======================cline==========================
==PRINT A(2)
==
scan_cline:
check_line:
check_assignment:
check_variable:
check_vname 'PRINT A(2)
':
check_vname ret1 ' A(2)
':
check_variable: ' A(2)
'
check_variable: Ary test ' A(2)
'
check_literal:lit='(' '  A(2)
'
check_literal:After drop space:'(' ' A(2)
'
  '(' != ' '
ret0
check_variable:ret1 vname='`~,Ü¸' is str:0 int:0 flt:1 ary:0
check_literal:lit=' =' '  A(2)
'
    dropping space
check_literal:After drop space:'=' 'A(2)
'
  '=' != 'A'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_cline: Checked len=11, 'PRINT A(2)
'
scan_line:
check_assignment:
check_variable:
check_vname 'PRINT A(2)
':
check_vname ret1 ' A(2)
':
check_variable: ' A(2)
'
check_variable: Ary test ' A(2)
'
check_literal:lit='(' '  A(2)
'
check_literal:After drop space:'(' ' A(2)
'
  '(' != ' '
ret0
check_variable:ret1 vname='@' is str:0 int:0 flt:1 ary:0
check_literal:lit=' =' '  A(2)
'
    dropping space
check_literal:After drop space:'=' 'A(2)
'
  '=' != 'A'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_line:check_command:1 
scan_command:
scan_expression: ' A(2)
'
check_eitem:
check_operator: A(2)

check_literal:lit=',' ' A(2)
'
check_literal:After drop space:',' 'A(2)
'
  ',' != 'A'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' A(2)
'
    dropping space
check_literal:After drop space:'"' 'A(2)
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'A(2)
':
check_vname ret1 '(2)
':
check_variable: '(2)
'
check_variable: Ary test '(2)
'
check_literal:lit='(' ' (2)
'
check_literal:After drop space:'(' '(2)
'
check_literal:After while():2)

ret1
check_variable: is array
check_expression: '2)
'
check_eitem:
check_operator: 2)

check_literal:lit=',' ' 2)
'
check_literal:After drop space:',' '2)
'
  ',' != '2'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 2)
'
    dropping space
check_literal:After drop space:'"' '2)
'
  '"' != '2'
ret0
check_number:
check_float:
isfloatdigit:
check_expression:ret1 '2)
'
check_literal:lit=' , ' ' 2)
'
    dropping space
check_literal:After drop space:', ' '2)
'
  ',' != '2'
ret0
check_literal:lit=' )' ' 2)
'
    dropping space
check_literal:After drop space:')' '2)
'
  ')' != '2'
ret0
check_variable:ret1 vname='‡},Ü¸' is str:0 int:0 flt:1 ary:1
scan_eitem:
check_operator: A(2)

check_literal:lit=',' ' A(2)
'
check_literal:After drop space:',' 'A(2)
'
  ',' != 'A'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' A(2)
'
    dropping space
check_literal:After drop space:'"' 'A(2)
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'A(2)
':
check_vname ret1 '(2)
':
check_variable: '(2)
'
check_variable: Ary test '(2)
'
check_literal:lit='(' ' (2)
'
check_literal:After drop space:'(' '(2)
'
check_literal:After while():2)

ret1
check_variable: is array
check_expression: '2)
'
check_eitem:
check_operator: 2)

check_literal:lit=',' ' 2)
'
check_literal:After drop space:',' '2)
'
  ',' != '2'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 2)
'
    dropping space
check_literal:After drop space:'"' '2)
'
  '"' != '2'
ret0
check_number:
check_float:
isfloatdigit:
check_expression:ret1 '2)
'
check_literal:lit=' , ' ' 2)
'
    dropping space
check_literal:After drop space:', ' '2)
'
  ',' != '2'
ret0
check_literal:lit=' )' ' 2)
'
    dropping space
check_literal:After drop space:')' '2)
'
  ')' != '2'
ret0
check_variable:ret1 vname='∞},Ü¸' is str:0 int:0 flt:1 ary:1
scan_atom:
check_literal:lit=' "' ' A(2)
'
    dropping space
check_literal:After drop space:'"' 'A(2)
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'A(2)
':
check_vname ret1 '(2)
':
check_variable: '(2)
'
check_variable: Ary test '(2)
'
check_literal:lit='(' ' (2)
'
check_literal:After drop space:'(' '(2)
'
check_literal:After while():2)

ret1
check_variable: is array
check_expression: '2)
'
check_eitem:
check_operator: 2)

check_literal:lit=',' ' 2)
'
check_literal:After drop space:',' '2)
'
  ',' != '2'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 2)
'
    dropping space
check_literal:After drop space:'"' '2)
'
  '"' != '2'
ret0
check_number:
check_float:
isfloatdigit:
check_expression:ret1 '2)
'
check_literal:lit=' , ' ' 2)
'
    dropping space
check_literal:After drop space:', ' '2)
'
  ',' != '2'
ret0
check_literal:lit=' )' ' 2)
'
    dropping space
check_literal:After drop space:')' '2)
'
  ')' != '2'
ret0
check_variable:ret1 vname='p|,Ü¸' is str:0 int:0 flt:1 ary:1
scan_variable:
scan_vname: 'A(2)
'
scan_vname: ret1 'A'
scan_variable: '(2)
'
scan_variable: Ary test '(2)
'
check_literal:lit='(' ' (2)
'
check_literal:After drop space:'(' '(2)
'
check_literal:After while():2)

ret1
scan_variable: is array
scan_expression: '(2)
'
check_eitem:
check_operator: (2)

check_literal:lit=',' ' (2)
'
check_literal:After drop space:',' '(2)
'
  ',' != '('
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' (2)
'
    dropping space
check_literal:After drop space:'"' '(2)
'
  '"' != '('
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname '(2)
':
check_vname ret0 '(2)
':
check_sub_expr:
check_literal:lit=' (' ' (2)
'
    dropping space
check_literal:After drop space:'(' '(2)
'
check_literal:After while():2)

ret1
check_sub_expr: ret1
scan_eitem:
check_operator: (2)

check_literal:lit=',' ' (2)
'
check_literal:After drop space:',' '(2)
'
  ',' != '('
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' (2)
'
    dropping space
check_literal:After drop space:'"' '(2)
'
  '"' != '('
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname '(2)
':
check_vname ret0 '(2)
':
check_sub_expr:
check_literal:lit=' (' ' (2)
'
    dropping space
check_literal:After drop space:'(' '(2)
'
check_literal:After while():2)

ret1
check_sub_expr: ret1
scan_sub_expr:
scan_literal:lit=' (' '(2)
'
scan_literal:After drop space:(2)

scan_literal:while loop:(2)

scan_expression: '2)
'
check_eitem:
check_operator: 2)

check_literal:lit=',' ' 2)
'
check_literal:After drop space:',' '2)
'
  ',' != '2'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 2)
'
    dropping space
check_literal:After drop space:'"' '2)
'
  '"' != '2'
ret0
check_number:
check_float:
isfloatdigit:
scan_eitem:
check_operator: 2)

check_literal:lit=',' ' 2)
'
check_literal:After drop space:',' '2)
'
  ',' != '2'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 2)
'
    dropping space
check_literal:After drop space:'"' '2)
'
  '"' != '2'
ret0
check_number:
check_float:
isfloatdigit:
scan_atom:
check_literal:lit=' "' ' 2)
'
    dropping space
check_literal:After drop space:'"' '2)
'
  '"' != '2'
ret0
check_number:
check_float:
isfloatdigit:
scan_number:
check_float:
isfloatdigit:
scan_float:
isfloatdigit:
isfloatdigit:
check_eitem:
check_operator: )

check_literal:lit=',' ' )
'
check_literal:After drop space:',' ')
'
  ',' != ')'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' )
'
    dropping space
check_literal:After drop space:'"' ')
'
  '"' != ')'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname ')
':
check_vname ret0 ')
':
check_sub_expr:
check_literal:lit=' (' ' )
'
    dropping space
check_literal:After drop space:'(' ')
'
  '(' != ')'
ret0
check_sub_expr: ret0
scan_expression: ret1 ')
'
scan_literal:lit=' )' ')
'
scan_literal:After drop space:)

scan_literal:while loop:)

check_eitem:
check_operator: 

check_literal:lit=',' ' '
check_literal:After drop space:',' ''
  ret0 Empty test string
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 
'
    dropping space
check_literal:After drop space:'"' ''
  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname '
':
check_vname ret0 '':
check_sub_expr:
check_literal:lit=' (' ' 
'
    dropping space
check_literal:After drop space:'(' ''
  ret0 Empty test string
check_sub_expr: ret0
scan_expression: ret1 '
'
check_literal:lit=' , ' ' 
'
    dropping space
check_literal:After drop space:', ' ''
  ret0 Empty test string
scan_literal:lit=' )' '
'
scan_literal:After drop space:
scan_literal:while loop:
PRINT A(2)

           ^

   Bad literal ' )'
scan_variable:ret1 vname='A' is str:0 int:0 flt:1 ary:1
check_eitem:
check_operator: 
check_literal:lit=',' ' '
check_literal:After drop space:',' ''
  ret0 Empty test string
check_operator:ret0
check_atom:
check_literal:lit=' "' ' '
    dropping space
check_literal:After drop space:'"' ''
  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname '':
check_vname ret0 '':
check_sub_expr:
check_literal:lit=' (' ' '
    dropping space
check_literal:After drop space:'(' ''
  ret0 Empty test string
check_sub_expr: ret0
scan_expression: ret1 ''
scan_command: ret1 =>'PRINT'
check_literal:lit=':' ' '
check_literal:After drop space:':' ''
  ret0 Empty test string
cline scanned OK
=======================cline==========================
==PRINT B%(10)
==
scan_cline:
check_line:
check_assignment:
check_variable:
check_vname 'PRINT B%(10)
':
check_vname ret1 ' B%(10)
':
check_variable: ' B%(10)
'
check_variable: Ary test ' B%(10)
'
check_literal:lit='(' '  B%(10)
'
check_literal:After drop space:'(' ' B%(10)
'
  '(' != ' '
ret0
check_variable:ret1 vname='`~,Ü¸' is str:0 int:0 flt:1 ary:0
check_literal:lit=' =' '  B%(10)
'
    dropping space
check_literal:After drop space:'=' 'B%(10)
'
  '=' != 'B'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_cline: Checked len=13, 'PRINT B%(10)
'
scan_line:
check_assignment:
check_variable:
check_vname 'PRINT B%(10)
':
check_vname ret1 ' B%(10)
':
check_variable: ' B%(10)
'
check_variable: Ary test ' B%(10)
'
check_literal:lit='(' '  B%(10)
'
check_literal:After drop space:'(' ' B%(10)
'
  '(' != ' '
ret0
check_variable:ret1 vname='@' is str:0 int:0 flt:1 ary:0
check_literal:lit=' =' '  B%(10)
'
    dropping space
check_literal:After drop space:'=' 'B%(10)
'
  '=' != 'B'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_line:check_command:1 
scan_command:
scan_expression: ' B%(10)
'
check_eitem:
check_operator: B%(10)

check_literal:lit=',' ' B%(10)
'
check_literal:After drop space:',' 'B%(10)
'
  ',' != 'B'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' B%(10)
'
    dropping space
check_literal:After drop space:'"' 'B%(10)
'
  '"' != 'B'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'B%(10)
':
check_vname ret1 '%(10)
':
check_variable: '%(10)
'
check_variable: Ary test '(10)
'
check_literal:lit='(' ' (10)
'
check_literal:After drop space:'(' '(10)
'
check_literal:After while():10)

ret1
check_variable: is array
check_expression: '10)
'
check_eitem:
check_operator: 10)

check_literal:lit=',' ' 10)
'
check_literal:After drop space:',' '10)
'
  ',' != '1'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 10)
'
    dropping space
check_literal:After drop space:'"' '10)
'
  '"' != '1'
ret0
check_number:
check_float:
isfloatdigit:
check_expression:ret1 '10)
'
check_literal:lit=' , ' ' 10)
'
    dropping space
check_literal:After drop space:', ' '10)
'
  ',' != '1'
ret0
check_literal:lit=' )' ' 10)
'
    dropping space
check_literal:After drop space:')' '10)
'
  ')' != '1'
ret0
check_variable:ret1 vname='‡},Ü¸%' is str:0 int:1 flt:0 ary:1
scan_eitem:
check_operator: B%(10)

check_literal:lit=',' ' B%(10)
'
check_literal:After drop space:',' 'B%(10)
'
  ',' != 'B'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' B%(10)
'
    dropping space
check_literal:After drop space:'"' 'B%(10)
'
  '"' != 'B'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'B%(10)
':
check_vname ret1 '%(10)
':
check_variable: '%(10)
'
check_variable: Ary test '(10)
'
check_literal:lit='(' ' (10)
'
check_literal:After drop space:'(' '(10)
'
check_literal:After while():10)

ret1
check_variable: is array
check_expression: '10)
'
check_eitem:
check_operator: 10)

check_literal:lit=',' ' 10)
'
check_literal:After drop space:',' '10)
'
  ',' != '1'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 10)
'
    dropping space
check_literal:After drop space:'"' '10)
'
  '"' != '1'
ret0
check_number:
check_float:
isfloatdigit:
check_expression:ret1 '10)
'
check_literal:lit=' , ' ' 10)
'
    dropping space
check_literal:After drop space:', ' '10)
'
  ',' != '1'
ret0
check_literal:lit=' )' ' 10)
'
    dropping space
check_literal:After drop space:')' '10)
'
  ')' != '1'
ret0
check_variable:ret1 vname='∞},Ü¸%' is str:0 int:1 flt:0 ary:1
scan_atom:
check_literal:lit=' "' ' B%(10)
'
    dropping space
check_literal:After drop space:'"' 'B%(10)
'
  '"' != 'B'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'B%(10)
':
check_vname ret1 '%(10)
':
check_variable: '%(10)
'
check_variable: Ary test '(10)
'
check_literal:lit='(' ' (10)
'
check_literal:After drop space:'(' '(10)
'
check_literal:After while():10)

ret1
check_variable: is array
check_expression: '10)
'
check_eitem:
check_operator: 10)

check_literal:lit=',' ' 10)
'
check_literal:After drop space:',' '10)
'
  ',' != '1'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 10)
'
    dropping space
check_literal:After drop space:'"' '10)
'
  '"' != '1'
ret0
check_number:
check_float:
isfloatdigit:
check_expression:ret1 '10)
'
check_literal:lit=' , ' ' 10)
'
    dropping space
check_literal:After drop space:', ' '10)
'
  ',' != '1'
ret0
check_literal:lit=' )' ' 10)
'
    dropping space
check_literal:After drop space:')' '10)
'
  ')' != '1'
ret0
check_variable:ret1 vname='p|,Ü¸%' is str:0 int:1 flt:0 ary:1
scan_variable:
scan_vname: 'B%(10)
'
scan_vname: ret1 'B'
scan_variable: '%(10)
'
scan_variable: Ary test '(10)
'
check_literal:lit='(' ' (10)
'
check_literal:After drop space:'(' '(10)
'
check_literal:After while():10)

ret1
scan_variable: is array
scan_expression: '(10)
'
check_eitem:
check_operator: (10)

check_literal:lit=',' ' (10)
'
check_literal:After drop space:',' '(10)
'
  ',' != '('
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' (10)
'
    dropping space
check_literal:After drop space:'"' '(10)
'
  '"' != '('
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname '(10)
':
check_vname ret0 '(10)
':
check_sub_expr:
check_literal:lit=' (' ' (10)
'
    dropping space
check_literal:After drop space:'(' '(10)
'
check_literal:After while():10)

ret1
check_sub_expr: ret1
scan_eitem:
check_operator: (10)

check_literal:lit=',' ' (10)
'
check_literal:After drop space:',' '(10)
'
  ',' != '('
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' (10)
'
    dropping space
check_literal:After drop space:'"' '(10)
'
  '"' != '('
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname '(10)
':
check_vname ret0 '(10)
':
check_sub_expr:
check_literal:lit=' (' ' (10)
'
    dropping space
check_literal:After drop space:'(' '(10)
'
check_literal:After while():10)

ret1
check_sub_expr: ret1
scan_sub_expr:
scan_literal:lit=' (' '(10)
'
scan_literal:After drop space:(10)

scan_literal:while loop:(10)

scan_expression: '10)
'
check_eitem:
check_operator: 10)

check_literal:lit=',' ' 10)
'
check_literal:After drop space:',' '10)
'
  ',' != '1'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 10)
'
    dropping space
check_literal:After drop space:'"' '10)
'
  '"' != '1'
ret0
check_number:
check_float:
isfloatdigit:
scan_eitem:
check_operator: 10)

check_literal:lit=',' ' 10)
'
check_literal:After drop space:',' '10)
'
  ',' != '1'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 10)
'
    dropping space
check_literal:After drop space:'"' '10)
'
  '"' != '1'
ret0
check_number:
check_float:
isfloatdigit:
scan_atom:
check_literal:lit=' "' ' 10)
'
    dropping space
check_literal:After drop space:'"' '10)
'
  '"' != '1'
ret0
check_number:
check_float:
isfloatdigit:
scan_number:
check_float:
isfloatdigit:
scan_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_eitem:
check_operator: )

check_literal:lit=',' ' )
'
check_literal:After drop space:',' ')
'
  ',' != ')'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' )
'
    dropping space
check_literal:After drop space:'"' ')
'
  '"' != ')'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname ')
':
check_vname ret0 ')
':
check_sub_expr:
check_literal:lit=' (' ' )
'
    dropping space
check_literal:After drop space:'(' ')
'
  '(' != ')'
ret0
check_sub_expr: ret0
scan_expression: ret1 ')
'
scan_literal:lit=' )' ')
'
scan_literal:After drop space:)

scan_literal:while loop:)

check_eitem:
check_operator: 

check_literal:lit=',' ' '
check_literal:After drop space:',' ''
  ret0 Empty test string
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 
'
    dropping space
check_literal:After drop space:'"' ''
  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname '
':
check_vname ret0 '':
check_sub_expr:
check_literal:lit=' (' ' 
'
    dropping space
check_literal:After drop space:'(' ''
  ret0 Empty test string
check_sub_expr: ret0
scan_expression: ret1 '
'
check_literal:lit=' , ' ' 
'
    dropping space
check_literal:After drop space:', ' ''
  ret0 Empty test string
scan_literal:lit=' )' '
'
scan_literal:After drop space:
scan_literal:while loop:
PRINT B%(10)

             ^

   Bad literal ' )'
scan_variable:ret1 vname='B%' is str:0 int:1 flt:0 ary:1
check_eitem:
check_operator: 
check_literal:lit=',' ' '
check_literal:After drop space:',' ''
  ret0 Empty test string
check_operator:ret0
check_atom:
check_literal:lit=' "' ' '
    dropping space
check_literal:After drop space:'"' ''
  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname '':
check_vname ret0 '':
check_sub_expr:
check_literal:lit=' (' ' '
    dropping space
check_literal:After drop space:'(' ''
  ret0 Empty test string
check_sub_expr: ret0
scan_expression: ret1 ''
scan_command: ret1 =>'PRINT'
check_literal:lit=':' ' '
check_literal:After drop space:':' ''
  ret0 Empty test string
cline scanned OK
=======================cline==========================
==PRINT D$(2)
==
scan_cline:
check_line:
check_assignment:
check_variable:
check_vname 'PRINT D$(2)
':
check_vname ret1 ' D$(2)
':
check_variable: ' D$(2)
'
check_variable: Ary test ' D$(2)
'
check_literal:lit='(' '  D$(2)
'
check_literal:After drop space:'(' ' D$(2)
'
  '(' != ' '
ret0
check_variable:ret1 vname='`~,Ü¸' is str:0 int:0 flt:1 ary:0
check_literal:lit=' =' '  D$(2)
'
    dropping space
check_literal:After drop space:'=' 'D$(2)
'
  '=' != 'D'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_cline: Checked len=12, 'PRINT D$(2)
'
scan_line:
check_assignment:
check_variable:
check_vname 'PRINT D$(2)
':
check_vname ret1 ' D$(2)
':
check_variable: ' D$(2)
'
check_variable: Ary test ' D$(2)
'
check_literal:lit='(' '  D$(2)
'
check_literal:After drop space:'(' ' D$(2)
'
  '(' != ' '
ret0
check_variable:ret1 vname='@' is str:0 int:0 flt:1 ary:0
check_literal:lit=' =' '  D$(2)
'
    dropping space
check_literal:After drop space:'=' 'D$(2)
'
  '=' != 'D'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_line:check_command:1 
scan_command:
scan_expression: ' D$(2)
'
check_eitem:
check_operator: D$(2)

check_literal:lit=',' ' D$(2)
'
check_literal:After drop space:',' 'D$(2)
'
  ',' != 'D'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' D$(2)
'
    dropping space
check_literal:After drop space:'"' 'D$(2)
'
  '"' != 'D'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'D$(2)
':
check_vname ret1 '$(2)
':
check_variable: '$(2)
'
check_variable: Ary test '(2)
'
check_literal:lit='(' ' (2)
'
check_literal:After drop space:'(' '(2)
'
check_literal:After while():2)

ret1
check_variable: is array
check_expression: '2)
'
check_eitem:
check_operator: 2)

check_literal:lit=',' ' 2)
'
check_literal:After drop space:',' '2)
'
  ',' != '2'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 2)
'
    dropping space
check_literal:After drop space:'"' '2)
'
  '"' != '2'
ret0
check_number:
check_float:
isfloatdigit:
check_expression:ret1 '2)
'
check_literal:lit=' , ' ' 2)
'
    dropping space
check_literal:After drop space:', ' '2)
'
  ',' != '2'
ret0
check_literal:lit=' )' ' 2)
'
    dropping space
check_literal:After drop space:')' '2)
'
  ')' != '2'
ret0
check_variable:ret1 vname='‡},Ü¸$' is str:1 int:0 flt:0 ary:1
scan_eitem:
check_operator: D$(2)

check_literal:lit=',' ' D$(2)
'
check_literal:After drop space:',' 'D$(2)
'
  ',' != 'D'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' D$(2)
'
    dropping space
check_literal:After drop space:'"' 'D$(2)
'
  '"' != 'D'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'D$(2)
':
check_vname ret1 '$(2)
':
check_variable: '$(2)
'
check_variable: Ary test '(2)
'
check_literal:lit='(' ' (2)
'
check_literal:After drop space:'(' '(2)
'
check_literal:After while():2)

ret1
check_variable: is array
check_expression: '2)
'
check_eitem:
check_operator: 2)

check_literal:lit=',' ' 2)
'
check_literal:After drop space:',' '2)
'
  ',' != '2'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 2)
'
    dropping space
check_literal:After drop space:'"' '2)
'
  '"' != '2'
ret0
check_number:
check_float:
isfloatdigit:
check_expression:ret1 '2)
'
check_literal:lit=' , ' ' 2)
'
    dropping space
check_literal:After drop space:', ' '2)
'
  ',' != '2'
ret0
check_literal:lit=' )' ' 2)
'
    dropping space
check_literal:After drop space:')' '2)
'
  ')' != '2'
ret0
check_variable:ret1 vname='∞},Ü¸$' is str:1 int:0 flt:0 ary:1
scan_atom:
check_literal:lit=' "' ' D$(2)
'
    dropping space
check_literal:After drop space:'"' 'D$(2)
'
  '"' != 'D'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'D$(2)
':
check_vname ret1 '$(2)
':
check_variable: '$(2)
'
check_variable: Ary test '(2)
'
check_literal:lit='(' ' (2)
'
check_literal:After drop space:'(' '(2)
'
check_literal:After while():2)

ret1
check_variable: is array
check_expression: '2)
'
check_eitem:
check_operator: 2)

check_literal:lit=',' ' 2)
'
check_literal:After drop space:',' '2)
'
  ',' != '2'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 2)
'
    dropping space
check_literal:After drop space:'"' '2)
'
  '"' != '2'
ret0
check_number:
check_float:
isfloatdigit:
check_expression:ret1 '2)
'
check_literal:lit=' , ' ' 2)
'
    dropping space
check_literal:After drop space:', ' '2)
'
  ',' != '2'
ret0
check_literal:lit=' )' ' 2)
'
    dropping space
check_literal:After drop space:')' '2)
'
  ')' != '2'
ret0
check_variable:ret1 vname='p|,Ü¸$' is str:1 int:0 flt:0 ary:1
scan_variable:
scan_vname: 'D$(2)
'
scan_vname: ret1 'D'
scan_variable: '$(2)
'
scan_variable: Ary test '(2)
'
check_literal:lit='(' ' (2)
'
check_literal:After drop space:'(' '(2)
'
check_literal:After while():2)

ret1
scan_variable: is array
scan_expression: '(2)
'
check_eitem:
check_operator: (2)

check_literal:lit=',' ' (2)
'
check_literal:After drop space:',' '(2)
'
  ',' != '('
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' (2)
'
    dropping space
check_literal:After drop space:'"' '(2)
'
  '"' != '('
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname '(2)
':
check_vname ret0 '(2)
':
check_sub_expr:
check_literal:lit=' (' ' (2)
'
    dropping space
check_literal:After drop space:'(' '(2)
'
check_literal:After while():2)

ret1
check_sub_expr: ret1
scan_eitem:
check_operator: (2)

check_literal:lit=',' ' (2)
'
check_literal:After drop space:',' '(2)
'
  ',' != '('
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' (2)
'
    dropping space
check_literal:After drop space:'"' '(2)
'
  '"' != '('
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname '(2)
':
check_vname ret0 '(2)
':
check_sub_expr:
check_literal:lit=' (' ' (2)
'
    dropping space
check_literal:After drop space:'(' '(2)
'
check_literal:After while():2)

ret1
check_sub_expr: ret1
scan_sub_expr:
scan_literal:lit=' (' '(2)
'
scan_literal:After drop space:(2)

scan_literal:while loop:(2)

scan_expression: '2)
'
check_eitem:
check_operator: 2)

check_literal:lit=',' ' 2)
'
check_literal:After drop space:',' '2)
'
  ',' != '2'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 2)
'
    dropping space
check_literal:After drop space:'"' '2)
'
  '"' != '2'
ret0
check_number:
check_float:
isfloatdigit:
scan_eitem:
check_operator: 2)

check_literal:lit=',' ' 2)
'
check_literal:After drop space:',' '2)
'
  ',' != '2'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 2)
'
    dropping space
check_literal:After drop space:'"' '2)
'
  '"' != '2'
ret0
check_number:
check_float:
isfloatdigit:
scan_atom:
check_literal:lit=' "' ' 2)
'
    dropping space
check_literal:After drop space:'"' '2)
'
  '"' != '2'
ret0
check_number:
check_float:
isfloatdigit:
scan_number:
check_float:
isfloatdigit:
scan_float:
isfloatdigit:
isfloatdigit:
check_eitem:
check_operator: )

check_literal:lit=',' ' )
'
check_literal:After drop space:',' ')
'
  ',' != ')'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' )
'
    dropping space
check_literal:After drop space:'"' ')
'
  '"' != ')'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname ')
':
check_vname ret0 ')
':
check_sub_expr:
check_literal:lit=' (' ' )
'
    dropping space
check_literal:After drop space:'(' ')
'
  '(' != ')'
ret0
check_sub_expr: ret0
scan_expression: ret1 ')
'
scan_literal:lit=' )' ')
'
scan_literal:After drop space:)

scan_literal:while loop:)

check_eitem:
check_operator: 

check_literal:lit=',' ' '
check_literal:After drop space:',' ''
  ret0 Empty test string
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 
'
    dropping space
check_literal:After drop space:'"' ''
  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname '
':
check_vname ret0 '':
check_sub_expr:
check_literal:lit=' (' ' 
'
    dropping space
check_literal:After drop space:'(' ''
  ret0 Empty test string
check_sub_expr: ret0
scan_expression: ret1 '
'
check_literal:lit=' , ' ' 
'
    dropping space
check_literal:After drop space:', ' ''
  ret0 Empty test string
scan_literal:lit=' )' '
'
scan_literal:After drop space:
scan_literal:while loop:
PRINT D$(2)

            ^

   Bad literal ' )'
scan_variable:ret1 vname='D$' is str:1 int:0 flt:0 ary:1
check_eitem:
check_operator: 
check_literal:lit=',' ' '
check_literal:After drop space:',' ''
  ret0 Empty test string
check_operator:ret0
check_atom:
check_literal:lit=' "' ' '
    dropping space
check_literal:After drop space:'"' ''
  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname '':
check_vname ret0 '':
check_sub_expr:
check_literal:lit=' (' ' '
    dropping space
check_literal:After drop space:'(' ''
  ret0 Empty test string
check_sub_expr: ret0
scan_expression: ret1 ''
scan_command: ret1 =>'PRINT'
check_literal:lit=':' ' '
check_literal:After drop space:':' ''
  ret0 Empty test string
cline scanned OK
=======================cline==========================
==PRINT F$(10,12)
==
scan_cline:
check_line:
check_assignment:
check_variable:
check_vname 'PRINT F$(10,12)
':
check_vname ret1 ' F$(10,12)
':
check_variable: ' F$(10,12)
'
check_variable: Ary test ' F$(10,12)
'
check_literal:lit='(' '  F$(10,12)
'
check_literal:After drop space:'(' ' F$(10,12)
'
  '(' != ' '
ret0
check_variable:ret1 vname='`~,Ü¸' is str:0 int:0 flt:1 ary:0
check_literal:lit=' =' '  F$(10,12)
'
    dropping space
check_literal:After drop space:'=' 'F$(10,12)
'
  '=' != 'F'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_cline: Checked len=16, 'PRINT F$(10,12)
'
scan_line:
check_assignment:
check_variable:
check_vname 'PRINT F$(10,12)
':
check_vname ret1 ' F$(10,12)
':
check_variable: ' F$(10,12)
'
check_variable: Ary test ' F$(10,12)
'
check_literal:lit='(' '  F$(10,12)
'
check_literal:After drop space:'(' ' F$(10,12)
'
  '(' != ' '
ret0
check_variable:ret1 vname='@' is str:0 int:0 flt:1 ary:0
check_literal:lit=' =' '  F$(10,12)
'
    dropping space
check_literal:After drop space:'=' 'F$(10,12)
'
  '=' != 'F'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_line:check_command:1 
scan_command:
scan_expression: ' F$(10,12)
'
check_eitem:
check_operator: F$(10,12)

check_literal:lit=',' ' F$(10,12)
'
check_literal:After drop space:',' 'F$(10,12)
'
  ',' != 'F'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' F$(10,12)
'
    dropping space
check_literal:After drop space:'"' 'F$(10,12)
'
  '"' != 'F'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'F$(10,12)
':
check_vname ret1 '$(10,12)
':
check_variable: '$(10,12)
'
check_variable: Ary test '(10,12)
'
check_literal:lit='(' ' (10,12)
'
check_literal:After drop space:'(' '(10,12)
'
check_literal:After while():10,12)

ret1
check_variable: is array
check_expression: '10,12)
'
check_eitem:
check_operator: 10,12)

check_literal:lit=',' ' 10,12)
'
check_literal:After drop space:',' '10,12)
'
  ',' != '1'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 10,12)
'
    dropping space
check_literal:After drop space:'"' '10,12)
'
  '"' != '1'
ret0
check_number:
check_float:
isfloatdigit:
check_expression:ret1 '10,12)
'
check_literal:lit=' , ' ' 10,12)
'
    dropping space
check_literal:After drop space:', ' '10,12)
'
  ',' != '1'
ret0
check_literal:lit=' )' ' 10,12)
'
    dropping space
check_literal:After drop space:')' '10,12)
'
  ')' != '1'
ret0
check_variable:ret1 vname='‡},Ü¸$' is str:1 int:0 flt:0 ary:1
scan_eitem:
check_operator: F$(10,12)

check_literal:lit=',' ' F$(10,12)
'
check_literal:After drop space:',' 'F$(10,12)
'
  ',' != 'F'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' F$(10,12)
'
    dropping space
check_literal:After drop space:'"' 'F$(10,12)
'
  '"' != 'F'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'F$(10,12)
':
check_vname ret1 '$(10,12)
':
check_variable: '$(10,12)
'
check_variable: Ary test '(10,12)
'
check_literal:lit='(' ' (10,12)
'
check_literal:After drop space:'(' '(10,12)
'
check_literal:After while():10,12)

ret1
check_variable: is array
check_expression: '10,12)
'
check_eitem:
check_operator: 10,12)

check_literal:lit=',' ' 10,12)
'
check_literal:After drop space:',' '10,12)
'
  ',' != '1'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 10,12)
'
    dropping space
check_literal:After drop space:'"' '10,12)
'
  '"' != '1'
ret0
check_number:
check_float:
isfloatdigit:
check_expression:ret1 '10,12)
'
check_literal:lit=' , ' ' 10,12)
'
    dropping space
check_literal:After drop space:', ' '10,12)
'
  ',' != '1'
ret0
check_literal:lit=' )' ' 10,12)
'
    dropping space
check_literal:After drop space:')' '10,12)
'
  ')' != '1'
ret0
check_variable:ret1 vname='∞},Ü¸$' is str:1 int:0 flt:0 ary:1
scan_atom:
check_literal:lit=' "' ' F$(10,12)
'
    dropping space
check_literal:After drop space:'"' 'F$(10,12)
'
  '"' != 'F'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname 'F$(10,12)
':
check_vname ret1 '$(10,12)
':
check_variable: '$(10,12)
'
check_variable: Ary test '(10,12)
'
check_literal:lit='(' ' (10,12)
'
check_literal:After drop space:'(' '(10,12)
'
check_literal:After while():10,12)

ret1
check_variable: is array
check_expression: '10,12)
'
check_eitem:
check_operator: 10,12)

check_literal:lit=',' ' 10,12)
'
check_literal:After drop space:',' '10,12)
'
  ',' != '1'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 10,12)
'
    dropping space
check_literal:After drop space:'"' '10,12)
'
  '"' != '1'
ret0
check_number:
check_float:
isfloatdigit:
check_expression:ret1 '10,12)
'
check_literal:lit=' , ' ' 10,12)
'
    dropping space
check_literal:After drop space:', ' '10,12)
'
  ',' != '1'
ret0
check_literal:lit=' )' ' 10,12)
'
    dropping space
check_literal:After drop space:')' '10,12)
'
  ')' != '1'
ret0
check_variable:ret1 vname='p|,Ü¸$' is str:1 int:0 flt:0 ary:1
scan_variable:
scan_vname: 'F$(10,12)
'
scan_vname: ret1 'F'
scan_variable: '$(10,12)
'
scan_variable: Ary test '(10,12)
'
check_literal:lit='(' ' (10,12)
'
check_literal:After drop space:'(' '(10,12)
'
check_literal:After while():10,12)

ret1
scan_variable: is array
scan_expression: '(10,12)
'
check_eitem:
check_operator: (10,12)

check_literal:lit=',' ' (10,12)
'
check_literal:After drop space:',' '(10,12)
'
  ',' != '('
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' (10,12)
'
    dropping space
check_literal:After drop space:'"' '(10,12)
'
  '"' != '('
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname '(10,12)
':
check_vname ret0 '(10,12)
':
check_sub_expr:
check_literal:lit=' (' ' (10,12)
'
    dropping space
check_literal:After drop space:'(' '(10,12)
'
check_literal:After while():10,12)

ret1
check_sub_expr: ret1
scan_eitem:
check_operator: (10,12)

check_literal:lit=',' ' (10,12)
'
check_literal:After drop space:',' '(10,12)
'
  ',' != '('
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' (10,12)
'
    dropping space
check_literal:After drop space:'"' '(10,12)
'
  '"' != '('
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname '(10,12)
':
check_vname ret0 '(10,12)
':
check_sub_expr:
check_literal:lit=' (' ' (10,12)
'
    dropping space
check_literal:After drop space:'(' '(10,12)
'
check_literal:After while():10,12)

ret1
check_sub_expr: ret1
scan_sub_expr:
scan_literal:lit=' (' '(10,12)
'
scan_literal:After drop space:(10,12)

scan_literal:while loop:(10,12)

scan_expression: '10,12)
'
check_eitem:
check_operator: 10,12)

check_literal:lit=',' ' 10,12)
'
check_literal:After drop space:',' '10,12)
'
  ',' != '1'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 10,12)
'
    dropping space
check_literal:After drop space:'"' '10,12)
'
  '"' != '1'
ret0
check_number:
check_float:
isfloatdigit:
scan_eitem:
check_operator: 10,12)

check_literal:lit=',' ' 10,12)
'
check_literal:After drop space:',' '10,12)
'
  ',' != '1'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 10,12)
'
    dropping space
check_literal:After drop space:'"' '10,12)
'
  '"' != '1'
ret0
check_number:
check_float:
isfloatdigit:
scan_atom:
check_literal:lit=' "' ' 10,12)
'
    dropping space
check_literal:After drop space:'"' '10,12)
'
  '"' != '1'
ret0
check_number:
check_float:
isfloatdigit:
scan_number:
check_float:
isfloatdigit:
scan_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_eitem:
check_operator: ,12)

check_literal:lit=',' ' ,12)
'
check_literal:After drop space:',' ',12)
'
check_literal:After while():12)

ret1
scan_literal:lit=',' ',12)
'
scan_literal:After drop space:,12)

scan_literal:while loop:,12)

scan_eitem:
check_operator: 12)

check_literal:lit=',' ' 12)
'
check_literal:After drop space:',' '12)
'
  ',' != '1'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 12)
'
    dropping space
check_literal:After drop space:'"' '12)
'
  '"' != '1'
ret0
check_number:
check_float:
isfloatdigit:
scan_atom:
check_literal:lit=' "' ' 12)
'
    dropping space
check_literal:After drop space:'"' '12)
'
  '"' != '1'
ret0
check_number:
check_float:
isfloatdigit:
scan_number:
check_float:
isfloatdigit:
scan_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_eitem:
check_operator: )

check_literal:lit=',' ' )
'
check_literal:After drop space:',' ')
'
  ',' != ')'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' )
'
    dropping space
check_literal:After drop space:'"' ')
'
  '"' != ')'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname ')
':
check_vname ret0 ')
':
check_sub_expr:
check_literal:lit=' (' ' )
'
    dropping space
check_literal:After drop space:'(' ')
'
  '(' != ')'
ret0
check_sub_expr: ret0
scan_expression: ret1 ')
'
scan_literal:lit=' )' ')
'
scan_literal:After drop space:)

scan_literal:while loop:)

check_eitem:
check_operator: 

check_literal:lit=',' ' '
check_literal:After drop space:',' ''
  ret0 Empty test string
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 
'
    dropping space
check_literal:After drop space:'"' ''
  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname '
':
check_vname ret0 '':
check_sub_expr:
check_literal:lit=' (' ' 
'
    dropping space
check_literal:After drop space:'(' ''
  ret0 Empty test string
check_sub_expr: ret0
scan_expression: ret1 '
'
check_literal:lit=' , ' ' 
'
    dropping space
check_literal:After drop space:', ' ''
  ret0 Empty test string
scan_literal:lit=' )' '
'
scan_literal:After drop space:
scan_literal:while loop:
PRINT F$(10,12)

                ^

   Bad literal ' )'
scan_variable:ret1 vname='F$' is str:1 int:0 flt:0 ary:1
check_eitem:
check_operator: 
check_literal:lit=',' ' '
check_literal:After drop space:',' ''
  ret0 Empty test string
check_operator:ret0
check_atom:
check_literal:lit=' "' ' '
    dropping space
check_literal:After drop space:'"' ''
  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_integer:
check_variable:
check_vname '':
check_vname ret0 '':
check_sub_expr:
check_literal:lit=' (' ' '
    dropping space
check_literal:After drop space:'(' ''
  ret0 Empty test string
check_sub_expr: ret0
scan_expression: ret1 ''
scan_command: ret1 =>'PRINT'
check_literal:lit=':' ' '
check_literal:After drop space:':' ''
  ret0 Empty test string
cline scanned OK

 23 lines scanned Ok
 0 lines scanned failed
 1 lines blank
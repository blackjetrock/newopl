
=======================cline==========================
==A% = 20
==
scan_cline:
check_line:
check_assignment:
check_vname 'A% = 20
':
check_vname ret1 ' = 20
':
check_literal:lit=' =' '  = 20
'
    dropping space
check_literal:After drop space:'=' '= 20
'
check_literal:After while(): 20

ret1
check_expression: '20
'
check_eitem:
check_operator: 20

check_literal:lit=',' ' 20
'
check_literal:After drop space:',' '20
'
  ',' != '2'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 20
'
    dropping space
check_literal:After drop space:'"' '20
'
  '"' != '2'
ret0
check_number:
check_float:
isfloatdigit:
check_expression:ret1 '20
'
scan_cline: Checked len=8, 'A% = 20
'
scan_line:
check_assignment:
check_vname 'A% = 20
':
check_vname ret1 ' = 20
':
check_literal:lit=' =' '  = 20
'
    dropping space
check_literal:After drop space:'=' '= 20
'
check_literal:After while(): 20

ret1
check_expression: '20
'
check_eitem:
check_operator: 20

check_literal:lit=',' ' 20
'
check_literal:After drop space:',' '20
'
  ',' != '2'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 20
'
    dropping space
check_literal:After drop space:'"' '20
'
  '"' != '2'
ret0
check_number:
check_float:
isfloatdigit:
check_expression:ret1 '20
'
scan_assignment:
scan_variable:
scan_vname: 'A% = 20
'
scan_vname: ret1 'A'
scan_variable: '% = 20
'
scan_variable: Ary test ' = 20
'
check_literal:lit='(' '  = 20
'
check_literal:After drop space:'(' ' = 20
'
  '(' != ' '
ret0
scan_variable:ret1 vname='A%' is str:0 int:1 flt:0 ary:0
scan_literal:lit=' =' ' = 20
'
scan_literal:After drop space:= 20

scan_literal:while loop:= 20

scan_expression: ' 20
'
check_eitem:
check_operator: 20

check_literal:lit=',' ' 20
'
check_literal:After drop space:',' '20
'
  ',' != '2'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 20
'
    dropping space
check_literal:After drop space:'"' '20
'
  '"' != '2'
ret0
check_number:
check_float:
isfloatdigit:
scan_eitem:
check_operator: 20

check_literal:lit=',' ' 20
'
check_literal:After drop space:',' '20
'
  ',' != '2'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 20
'
    dropping space
check_literal:After drop space:'"' '20
'
  '"' != '2'
ret0
check_number:
check_float:
isfloatdigit:
scan_atom:
check_literal:lit=' "' ' 20
'
    dropping space
check_literal:After drop space:'"' '20
'
  '"' != '2'
ret0
check_number:
check_float:
isfloatdigit:
scan_number:
check_float:
isfloatdigit:
scan_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_eitem:
check_operator: 

check_literal:lit=',' ' '
check_literal:After drop space:',' ''
  ret0 Empty test string
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 
'
    dropping space
check_literal:After drop space:'"' ''
  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname '
':
check_vname ret0 '
':
check_sub_expr:
check_literal:lit=' (' ' 
'
    dropping space
check_literal:After drop space:'(' ''
  ret0 Empty test string
check_sub_expr: ret0
scan_expression: ret1 '
'
scan_assignment: ret1
check_literal:lit=':' ' '
check_literal:After drop space:':' ''
  ret0 Empty test string
cline scanned OK
=======================cline==========================
==PRINT "abc"
==
scan_cline:
check_line:
check_assignment:
check_vname 'PRINT "abc"
':
check_vname ret1 '"abc"
':
check_literal:lit=' =' ' "abc"
'
    dropping space
check_literal:After drop space:'=' '"abc"
'
  '=' != '"'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_cline: Checked len=12, 'PRINT "abc"
'
scan_line:
check_assignment:
check_vname 'PRINT "abc"
':
check_vname ret1 '"abc"
':
check_literal:lit=' =' ' "abc"
'
    dropping space
check_literal:After drop space:'=' '"abc"
'
  '=' != '"'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_line:check_command:1 
scan_command:
scan_expression: ' "abc"
'
check_eitem:
check_operator: "abc"

check_literal:lit=',' ' "abc"
'
check_literal:After drop space:',' '"abc"
'
  ',' != '"'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' "abc"
'
    dropping space
check_literal:After drop space:'"' '"abc"
'
check_literal:After while():abc"

ret1
scan_eitem:
check_operator: "abc"

check_literal:lit=',' ' "abc"
'
check_literal:After drop space:',' '"abc"
'
  ',' != '"'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' "abc"
'
    dropping space
check_literal:After drop space:'"' '"abc"
'
check_literal:After while():abc"

ret1
scan_atom:
check_literal:lit=' "' ' "abc"
'
    dropping space
check_literal:After drop space:'"' '"abc"
'
check_literal:After while():abc"

ret1
scan_string:
scan_literal:lit=' "' '"abc"
'
scan_literal:After drop space:"abc"

scan_literal:while loop:"abc"

  (in if) 'abc"
'
  (in wh) 'abc"
'
  (in wh) 'bc"
'
  (in wh) 'bc"
'
  (in wh) 'c"
'
  (in wh) 'c"
'
  (in wh) '"
'
scan_string: ret1
check_eitem:
check_operator: 

check_literal:lit=',' ' '
check_literal:After drop space:',' ''
  ret0 Empty test string
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 
'
    dropping space
check_literal:After drop space:'"' ''
  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname '
':
check_vname ret0 '
':
check_sub_expr:
check_literal:lit=' (' ' 
'
    dropping space
check_literal:After drop space:'(' ''
  ret0 Empty test string
check_sub_expr: ret0
scan_expression: ret1 '
'
scan_command: ret1 =>'PRINT'
check_literal:lit=':' ' '
check_literal:After drop space:':' ''
  ret0 Empty test string
cline scanned OK
=======================cline==========================
==PRINT "asdfgh"
==
scan_cline:
check_line:
check_assignment:
check_vname 'PRINT "asdfgh"
':
check_vname ret1 '"asdfgh"
':
check_literal:lit=' =' ' "asdfgh"
'
    dropping space
check_literal:After drop space:'=' '"asdfgh"
'
  '=' != '"'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_cline: Checked len=15, 'PRINT "asdfgh"
'
scan_line:
check_assignment:
check_vname 'PRINT "asdfgh"
':
check_vname ret1 '"asdfgh"
':
check_literal:lit=' =' ' "asdfgh"
'
    dropping space
check_literal:After drop space:'=' '"asdfgh"
'
  '=' != '"'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_line:check_command:1 
scan_command:
scan_expression: ' "asdfgh"
'
check_eitem:
check_operator: "asdfgh"

check_literal:lit=',' ' "asdfgh"
'
check_literal:After drop space:',' '"asdfgh"
'
  ',' != '"'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' "asdfgh"
'
    dropping space
check_literal:After drop space:'"' '"asdfgh"
'
check_literal:After while():asdfgh"

ret1
scan_eitem:
check_operator: "asdfgh"

check_literal:lit=',' ' "asdfgh"
'
check_literal:After drop space:',' '"asdfgh"
'
  ',' != '"'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' "asdfgh"
'
    dropping space
check_literal:After drop space:'"' '"asdfgh"
'
check_literal:After while():asdfgh"

ret1
scan_atom:
check_literal:lit=' "' ' "asdfgh"
'
    dropping space
check_literal:After drop space:'"' '"asdfgh"
'
check_literal:After while():asdfgh"

ret1
scan_string:
scan_literal:lit=' "' '"asdfgh"
'
scan_literal:After drop space:"asdfgh"

scan_literal:while loop:"asdfgh"

  (in if) 'asdfgh"
'
  (in wh) 'asdfgh"
'
  (in wh) 'sdfgh"
'
  (in wh) 'sdfgh"
'
  (in wh) 'dfgh"
'
  (in wh) 'dfgh"
'
  (in wh) 'fgh"
'
  (in wh) 'fgh"
'
  (in wh) 'gh"
'
  (in wh) 'gh"
'
  (in wh) 'h"
'
  (in wh) 'h"
'
  (in wh) '"
'
scan_string: ret1
check_eitem:
check_operator: 

check_literal:lit=',' ' '
check_literal:After drop space:',' ''
  ret0 Empty test string
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 
'
    dropping space
check_literal:After drop space:'"' ''
  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname '
':
check_vname ret0 '
':
check_sub_expr:
check_literal:lit=' (' ' 
'
    dropping space
check_literal:After drop space:'(' ''
  ret0 Empty test string
check_sub_expr: ret0
scan_expression: ret1 '
'
scan_command: ret1 =>'PRINT'
check_literal:lit=':' ' '
check_literal:After drop space:':' ''
  ret0 Empty test string
cline scanned OK
=======================cline==========================
==PRINT   "    abc    "
==
scan_cline:
check_line:
check_assignment:
check_vname 'PRINT   "    abc    "
':
check_vname ret1 '  "    abc    "
':
check_literal:lit=' =' '   "    abc    "
'
    dropping space
check_literal:After drop space:'=' '"    abc    "
'
  '=' != '"'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_cline: Checked len=22, 'PRINT   "    abc    "
'
scan_line:
check_assignment:
check_vname 'PRINT   "    abc    "
':
check_vname ret1 '  "    abc    "
':
check_literal:lit=' =' '   "    abc    "
'
    dropping space
check_literal:After drop space:'=' '"    abc    "
'
  '=' != '"'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_line:check_command:1 
scan_command:
scan_expression: '   "    abc    "
'
check_eitem:
check_operator: "    abc    "

check_literal:lit=',' ' "    abc    "
'
check_literal:After drop space:',' '"    abc    "
'
  ',' != '"'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' "    abc    "
'
    dropping space
check_literal:After drop space:'"' '"    abc    "
'
check_literal:After while():    abc    "

ret1
scan_eitem:
check_operator: "    abc    "

check_literal:lit=',' ' "    abc    "
'
check_literal:After drop space:',' '"    abc    "
'
  ',' != '"'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' "    abc    "
'
    dropping space
check_literal:After drop space:'"' '"    abc    "
'
check_literal:After while():    abc    "

ret1
scan_atom:
check_literal:lit=' "' ' "    abc    "
'
    dropping space
check_literal:After drop space:'"' '"    abc    "
'
check_literal:After while():    abc    "

ret1
scan_string:
scan_literal:lit=' "' '"    abc    "
'
scan_literal:After drop space:"    abc    "

scan_literal:while loop:"    abc    "

  (in if) '    abc    "
'
  (in wh) '    abc    "
'
  (in wh) '   abc    "
'
  (in wh) '   abc    "
'
  (in wh) '  abc    "
'
  (in wh) '  abc    "
'
  (in wh) ' abc    "
'
  (in wh) ' abc    "
'
  (in wh) 'abc    "
'
  (in wh) 'abc    "
'
  (in wh) 'bc    "
'
  (in wh) 'bc    "
'
  (in wh) 'c    "
'
  (in wh) 'c    "
'
  (in wh) '    "
'
  (in wh) '    "
'
  (in wh) '   "
'
  (in wh) '   "
'
  (in wh) '  "
'
  (in wh) '  "
'
  (in wh) ' "
'
  (in wh) ' "
'
  (in wh) '"
'
scan_string: ret1
check_eitem:
check_operator: 

check_literal:lit=',' ' '
check_literal:After drop space:',' ''
  ret0 Empty test string
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 
'
    dropping space
check_literal:After drop space:'"' ''
  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname '
':
check_vname ret0 '
':
check_sub_expr:
check_literal:lit=' (' ' 
'
    dropping space
check_literal:After drop space:'(' ''
  ret0 Empty test string
check_sub_expr: ret0
scan_expression: ret1 '
'
scan_command: ret1 =>'PRINT'
check_literal:lit=':' ' '
check_literal:After drop space:':' ''
  ret0 Empty test string
cline scanned OK
=======================cline==========================
==PRINT A%
==
scan_cline:
check_line:
check_assignment:
check_vname 'PRINT A%
':
check_vname ret1 'A%
':
check_literal:lit=' =' ' A%
'
    dropping space
check_literal:After drop space:'=' 'A%
'
  '=' != 'A'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_cline: Checked len=9, 'PRINT A%
'
scan_line:
check_assignment:
check_vname 'PRINT A%
':
check_vname ret1 'A%
':
check_literal:lit=' =' ' A%
'
    dropping space
check_literal:After drop space:'=' 'A%
'
  '=' != 'A'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_line:check_command:1 
scan_command:
scan_expression: ' A%
'
check_eitem:
check_operator: A%

check_literal:lit=',' ' A%
'
check_literal:After drop space:',' 'A%
'
  ',' != 'A'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' A%
'
    dropping space
check_literal:After drop space:'"' 'A%
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname 'A%
':
check_vname ret1 'A%
':
scan_eitem:
check_operator: A%

check_literal:lit=',' ' A%
'
check_literal:After drop space:',' 'A%
'
  ',' != 'A'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' A%
'
    dropping space
check_literal:After drop space:'"' 'A%
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname 'A%
':
check_vname ret1 'A%
':
scan_atom:
check_literal:lit=' "' ' A%
'
    dropping space
check_literal:After drop space:'"' 'A%
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname 'A%
':
check_vname ret1 'A%
':
scan_variable:
scan_vname: 'A%
'
scan_vname: ret1 'A'
scan_variable: '%
'
scan_variable: Ary test '
'
check_literal:lit='(' ' 
'
check_literal:After drop space:'(' '
'
  '(' != '
'
ret0
scan_variable:ret1 vname='A%' is str:0 int:1 flt:0 ary:0
check_eitem:
check_operator: 

check_literal:lit=',' ' '
check_literal:After drop space:',' ''
  ret0 Empty test string
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 
'
    dropping space
check_literal:After drop space:'"' ''
  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname '
':
check_vname ret0 '
':
check_sub_expr:
check_literal:lit=' (' ' 
'
    dropping space
check_literal:After drop space:'(' ''
  ret0 Empty test string
check_sub_expr: ret0
scan_expression: ret1 '
'
scan_command: ret1 =>'PRINT'
check_literal:lit=':' ' '
check_literal:After drop space:':' ''
  ret0 Empty test string
cline scanned OK
=======================cline==========================
==PRINT B
==
scan_cline:
check_line:
check_assignment:
check_vname 'PRINT B
':
check_vname ret1 'B
':
check_literal:lit=' =' ' B
'
    dropping space
check_literal:After drop space:'=' 'B
'
  '=' != 'B'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_cline: Checked len=8, 'PRINT B
'
scan_line:
check_assignment:
check_vname 'PRINT B
':
check_vname ret1 'B
':
check_literal:lit=' =' ' B
'
    dropping space
check_literal:After drop space:'=' 'B
'
  '=' != 'B'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_line:check_command:1 
scan_command:
scan_expression: ' B
'
check_eitem:
check_operator: B

check_literal:lit=',' ' B
'
check_literal:After drop space:',' 'B
'
  ',' != 'B'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' B
'
    dropping space
check_literal:After drop space:'"' 'B
'
  '"' != 'B'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname 'B
':
check_vname ret1 'B
':
scan_eitem:
check_operator: B

check_literal:lit=',' ' B
'
check_literal:After drop space:',' 'B
'
  ',' != 'B'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' B
'
    dropping space
check_literal:After drop space:'"' 'B
'
  '"' != 'B'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname 'B
':
check_vname ret1 'B
':
scan_atom:
check_literal:lit=' "' ' B
'
    dropping space
check_literal:After drop space:'"' 'B
'
  '"' != 'B'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname 'B
':
check_vname ret1 'B
':
scan_variable:
scan_vname: 'B
'
scan_vname: ret1 'B'
scan_variable: '
'
scan_variable: Ary test '
'
check_literal:lit='(' ' 
'
check_literal:After drop space:'(' '
'
  '(' != '
'
ret0
scan_variable:ret1 vname='B' is str:0 int:0 flt:1 ary:0
check_eitem:
check_operator: 

check_literal:lit=',' ' '
check_literal:After drop space:',' ''
  ret0 Empty test string
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 
'
    dropping space
check_literal:After drop space:'"' ''
  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname '
':
check_vname ret0 '
':
check_sub_expr:
check_literal:lit=' (' ' 
'
    dropping space
check_literal:After drop space:'(' ''
  ret0 Empty test string
check_sub_expr: ret0
scan_expression: ret1 '
'
scan_command: ret1 =>'PRINT'
check_literal:lit=':' ' '
check_literal:After drop space:':' ''
  ret0 Empty test string
cline scanned OK
=======================cline==========================
==PRINT ABC
==
scan_cline:
check_line:
check_assignment:
check_vname 'PRINT ABC
':
check_vname ret1 'ABC
':
check_literal:lit=' =' ' ABC
'
    dropping space
check_literal:After drop space:'=' 'ABC
'
  '=' != 'A'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_cline: Checked len=10, 'PRINT ABC
'
scan_line:
check_assignment:
check_vname 'PRINT ABC
':
check_vname ret1 'ABC
':
check_literal:lit=' =' ' ABC
'
    dropping space
check_literal:After drop space:'=' 'ABC
'
  '=' != 'A'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_line:check_command:1 
scan_command:
scan_expression: ' ABC
'
check_eitem:
check_operator: ABC

check_literal:lit=',' ' ABC
'
check_literal:After drop space:',' 'ABC
'
  ',' != 'A'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' ABC
'
    dropping space
check_literal:After drop space:'"' 'ABC
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname 'ABC
':
check_vname ret1 'ABC
':
scan_eitem:
check_operator: ABC

check_literal:lit=',' ' ABC
'
check_literal:After drop space:',' 'ABC
'
  ',' != 'A'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' ABC
'
    dropping space
check_literal:After drop space:'"' 'ABC
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname 'ABC
':
check_vname ret1 'ABC
':
scan_atom:
check_literal:lit=' "' ' ABC
'
    dropping space
check_literal:After drop space:'"' 'ABC
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname 'ABC
':
check_vname ret1 'ABC
':
scan_variable:
scan_vname: 'ABC
'
scan_vname: ret1 'ABC'
scan_variable: '
'
scan_variable: Ary test '
'
check_literal:lit='(' ' 
'
check_literal:After drop space:'(' '
'
  '(' != '
'
ret0
scan_variable:ret1 vname='ABC' is str:0 int:0 flt:1 ary:0
check_eitem:
check_operator: 

check_literal:lit=',' ' '
check_literal:After drop space:',' ''
  ret0 Empty test string
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 
'
    dropping space
check_literal:After drop space:'"' ''
  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname '
':
check_vname ret0 '
':
check_sub_expr:
check_literal:lit=' (' ' 
'
    dropping space
check_literal:After drop space:'(' ''
  ret0 Empty test string
check_sub_expr: ret0
scan_expression: ret1 '
'
scan_command: ret1 =>'PRINT'
check_literal:lit=':' ' '
check_literal:After drop space:':' ''
  ret0 Empty test string
cline scanned OK
=======================cline==========================
==PRINT ABC%
==
scan_cline:
check_line:
check_assignment:
check_vname 'PRINT ABC%
':
check_vname ret1 'ABC%
':
check_literal:lit=' =' ' ABC%
'
    dropping space
check_literal:After drop space:'=' 'ABC%
'
  '=' != 'A'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_cline: Checked len=11, 'PRINT ABC%
'
scan_line:
check_assignment:
check_vname 'PRINT ABC%
':
check_vname ret1 'ABC%
':
check_literal:lit=' =' ' ABC%
'
    dropping space
check_literal:After drop space:'=' 'ABC%
'
  '=' != 'A'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_line:check_command:1 
scan_command:
scan_expression: ' ABC%
'
check_eitem:
check_operator: ABC%

check_literal:lit=',' ' ABC%
'
check_literal:After drop space:',' 'ABC%
'
  ',' != 'A'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' ABC%
'
    dropping space
check_literal:After drop space:'"' 'ABC%
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname 'ABC%
':
check_vname ret1 'ABC%
':
scan_eitem:
check_operator: ABC%

check_literal:lit=',' ' ABC%
'
check_literal:After drop space:',' 'ABC%
'
  ',' != 'A'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' ABC%
'
    dropping space
check_literal:After drop space:'"' 'ABC%
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname 'ABC%
':
check_vname ret1 'ABC%
':
scan_atom:
check_literal:lit=' "' ' ABC%
'
    dropping space
check_literal:After drop space:'"' 'ABC%
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname 'ABC%
':
check_vname ret1 'ABC%
':
scan_variable:
scan_vname: 'ABC%
'
scan_vname: ret1 'ABC'
scan_variable: '%
'
scan_variable: Ary test '
'
check_literal:lit='(' ' 
'
check_literal:After drop space:'(' '
'
  '(' != '
'
ret0
scan_variable:ret1 vname='ABC%' is str:0 int:1 flt:0 ary:0
check_eitem:
check_operator: 

check_literal:lit=',' ' '
check_literal:After drop space:',' ''
  ret0 Empty test string
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 
'
    dropping space
check_literal:After drop space:'"' ''
  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname '
':
check_vname ret0 '
':
check_sub_expr:
check_literal:lit=' (' ' 
'
    dropping space
check_literal:After drop space:'(' ''
  ret0 Empty test string
check_sub_expr: ret0
scan_expression: ret1 '
'
scan_command: ret1 =>'PRINT'
check_literal:lit=':' ' '
check_literal:After drop space:':' ''
  ret0 Empty test string
cline scanned OK
=======================cline==========================
==PRINT A$
==
scan_cline:
check_line:
check_assignment:
check_vname 'PRINT A$
':
check_vname ret1 'A$
':
check_literal:lit=' =' ' A$
'
    dropping space
check_literal:After drop space:'=' 'A$
'
  '=' != 'A'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_cline: Checked len=9, 'PRINT A$
'
scan_line:
check_assignment:
check_vname 'PRINT A$
':
check_vname ret1 'A$
':
check_literal:lit=' =' ' A$
'
    dropping space
check_literal:After drop space:'=' 'A$
'
  '=' != 'A'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_line:check_command:1 
scan_command:
scan_expression: ' A$
'
check_eitem:
check_operator: A$

check_literal:lit=',' ' A$
'
check_literal:After drop space:',' 'A$
'
  ',' != 'A'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' A$
'
    dropping space
check_literal:After drop space:'"' 'A$
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname 'A$
':
check_vname ret1 'A$
':
scan_eitem:
check_operator: A$

check_literal:lit=',' ' A$
'
check_literal:After drop space:',' 'A$
'
  ',' != 'A'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' A$
'
    dropping space
check_literal:After drop space:'"' 'A$
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname 'A$
':
check_vname ret1 'A$
':
scan_atom:
check_literal:lit=' "' ' A$
'
    dropping space
check_literal:After drop space:'"' 'A$
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname 'A$
':
check_vname ret1 'A$
':
scan_variable:
scan_vname: 'A$
'
scan_vname: ret1 'A'
scan_variable: '$
'
scan_variable: Ary test '
'
check_literal:lit='(' ' 
'
check_literal:After drop space:'(' '
'
  '(' != '
'
ret0
scan_variable:ret1 vname='A$' is str:1 int:0 flt:0 ary:0
check_eitem:
check_operator: 

check_literal:lit=',' ' '
check_literal:After drop space:',' ''
  ret0 Empty test string
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 
'
    dropping space
check_literal:After drop space:'"' ''
  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname '
':
check_vname ret0 '
':
check_sub_expr:
check_literal:lit=' (' ' 
'
    dropping space
check_literal:After drop space:'(' ''
  ret0 Empty test string
check_sub_expr: ret0
scan_expression: ret1 '
'
scan_command: ret1 =>'PRINT'
check_literal:lit=':' ' '
check_literal:After drop space:':' ''
  ret0 Empty test string
cline scanned OK
=======================cline==========================
==PRINT DEF$
==
scan_cline:
check_line:
check_assignment:
check_vname 'PRINT DEF$
':
check_vname ret1 'DEF$
':
check_literal:lit=' =' ' DEF$
'
    dropping space
check_literal:After drop space:'=' 'DEF$
'
  '=' != 'D'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_cline: Checked len=11, 'PRINT DEF$
'
scan_line:
check_assignment:
check_vname 'PRINT DEF$
':
check_vname ret1 'DEF$
':
check_literal:lit=' =' ' DEF$
'
    dropping space
check_literal:After drop space:'=' 'DEF$
'
  '=' != 'D'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_line:check_command:1 
scan_command:
scan_expression: ' DEF$
'
check_eitem:
check_operator: DEF$

check_literal:lit=',' ' DEF$
'
check_literal:After drop space:',' 'DEF$
'
  ',' != 'D'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' DEF$
'
    dropping space
check_literal:After drop space:'"' 'DEF$
'
  '"' != 'D'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname 'DEF$
':
check_vname ret1 'DEF$
':
scan_eitem:
check_operator: DEF$

check_literal:lit=',' ' DEF$
'
check_literal:After drop space:',' 'DEF$
'
  ',' != 'D'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' DEF$
'
    dropping space
check_literal:After drop space:'"' 'DEF$
'
  '"' != 'D'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname 'DEF$
':
check_vname ret1 'DEF$
':
scan_atom:
check_literal:lit=' "' ' DEF$
'
    dropping space
check_literal:After drop space:'"' 'DEF$
'
  '"' != 'D'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname 'DEF$
':
check_vname ret1 'DEF$
':
scan_variable:
scan_vname: 'DEF$
'
scan_vname: ret1 'DEF'
scan_variable: '$
'
scan_variable: Ary test '
'
check_literal:lit='(' ' 
'
check_literal:After drop space:'(' '
'
  '(' != '
'
ret0
scan_variable:ret1 vname='DEF$' is str:1 int:0 flt:0 ary:0
check_eitem:
check_operator: 

check_literal:lit=',' ' '
check_literal:After drop space:',' ''
  ret0 Empty test string
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 
'
    dropping space
check_literal:After drop space:'"' ''
  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname '
':
check_vname ret0 '
':
check_sub_expr:
check_literal:lit=' (' ' 
'
    dropping space
check_literal:After drop space:'(' ''
  ret0 Empty test string
check_sub_expr: ret0
scan_expression: ret1 '
'
scan_command: ret1 =>'PRINT'
check_literal:lit=':' ' '
check_literal:After drop space:':' ''
  ret0 Empty test string
cline scanned OK
=======================cline==========================
==PRINT A(2)
==
scan_cline:
check_line:
check_assignment:
check_vname 'PRINT A(2)
':
check_vname ret1 'A(2)
':
check_literal:lit=' =' ' A(2)
'
    dropping space
check_literal:After drop space:'=' 'A(2)
'
  '=' != 'A'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_cline: Checked len=11, 'PRINT A(2)
'
scan_line:
check_assignment:
check_vname 'PRINT A(2)
':
check_vname ret1 'A(2)
':
check_literal:lit=' =' ' A(2)
'
    dropping space
check_literal:After drop space:'=' 'A(2)
'
  '=' != 'A'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_line:check_command:1 
scan_command:
scan_expression: ' A(2)
'
check_eitem:
check_operator: A(2)

check_literal:lit=',' ' A(2)
'
check_literal:After drop space:',' 'A(2)
'
  ',' != 'A'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' A(2)
'
    dropping space
check_literal:After drop space:'"' 'A(2)
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname 'A(2)
':
check_vname ret1 'A(2)
':
scan_eitem:
check_operator: A(2)

check_literal:lit=',' ' A(2)
'
check_literal:After drop space:',' 'A(2)
'
  ',' != 'A'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' A(2)
'
    dropping space
check_literal:After drop space:'"' 'A(2)
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname 'A(2)
':
check_vname ret1 'A(2)
':
scan_atom:
check_literal:lit=' "' ' A(2)
'
    dropping space
check_literal:After drop space:'"' 'A(2)
'
  '"' != 'A'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname 'A(2)
':
check_vname ret1 'A(2)
':
scan_variable:
scan_vname: 'A(2)
'
scan_vname: ret1 'A'
scan_variable: '(2)
'
scan_variable: Ary test '(2)
'
check_literal:lit='(' ' (2)
'
check_literal:After drop space:'(' '(2)
'
check_literal:After while():2)

ret1
scan_variable: is array
scan_expression: '(2)
'
check_eitem:
check_operator: (2)

check_literal:lit=',' ' (2)
'
check_literal:After drop space:',' '(2)
'
  ',' != '('
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' (2)
'
    dropping space
check_literal:After drop space:'"' '(2)
'
  '"' != '('
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname '(2)
':
check_vname ret0 '(2)
':
check_sub_expr:
check_literal:lit=' (' ' (2)
'
    dropping space
check_literal:After drop space:'(' '(2)
'
check_literal:After while():2)

ret1
check_sub_expr: ret1
scan_eitem:
check_operator: (2)

check_literal:lit=',' ' (2)
'
check_literal:After drop space:',' '(2)
'
  ',' != '('
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' (2)
'
    dropping space
check_literal:After drop space:'"' '(2)
'
  '"' != '('
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname '(2)
':
check_vname ret0 '(2)
':
check_sub_expr:
check_literal:lit=' (' ' (2)
'
    dropping space
check_literal:After drop space:'(' '(2)
'
check_literal:After while():2)

ret1
check_sub_expr: ret1
scan_sub_expr:
scan_literal:lit=' (' '(2)
'
scan_literal:After drop space:(2)

scan_literal:while loop:(2)

scan_expression: '2)
'
check_eitem:
check_operator: 2)

check_literal:lit=',' ' 2)
'
check_literal:After drop space:',' '2)
'
  ',' != '2'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 2)
'
    dropping space
check_literal:After drop space:'"' '2)
'
  '"' != '2'
ret0
check_number:
check_float:
isfloatdigit:
scan_eitem:
check_operator: 2)

check_literal:lit=',' ' 2)
'
check_literal:After drop space:',' '2)
'
  ',' != '2'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 2)
'
    dropping space
check_literal:After drop space:'"' '2)
'
  '"' != '2'
ret0
check_number:
check_float:
isfloatdigit:
scan_atom:
check_literal:lit=' "' ' 2)
'
    dropping space
check_literal:After drop space:'"' '2)
'
  '"' != '2'
ret0
check_number:
check_float:
isfloatdigit:
scan_number:
check_float:
isfloatdigit:
scan_float:
isfloatdigit:
isfloatdigit:
check_eitem:
check_operator: )

check_literal:lit=',' ' )
'
check_literal:After drop space:',' ')
'
  ',' != ')'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' )
'
    dropping space
check_literal:After drop space:'"' ')
'
  '"' != ')'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname ')
':
check_vname ret0 ')
':
check_sub_expr:
check_literal:lit=' (' ' )
'
    dropping space
check_literal:After drop space:'(' ')
'
  '(' != ')'
ret0
check_sub_expr: ret0
scan_expression: ret1 ')
'
scan_literal:lit=' )' ')
'
scan_literal:After drop space:)

scan_literal:while loop:)

check_eitem:
check_operator: 

check_literal:lit=',' ' '
check_literal:After drop space:',' ''
  ret0 Empty test string
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 
'
    dropping space
check_literal:After drop space:'"' ''
  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname '
':
check_vname ret0 '
':
check_sub_expr:
check_literal:lit=' (' ' 
'
    dropping space
check_literal:After drop space:'(' ''
  ret0 Empty test string
check_sub_expr: ret0
scan_expression: ret1 '
'
check_literal:lit=' , ' ' 
'
    dropping space
check_literal:After drop space:', ' ''
  ret0 Empty test string
scan_literal:lit=' )' '
'
scan_literal:After drop space:
scan_literal:while loop:
PRINT A(2)

           ^

   Bad literal ' )'
scan_variable:ret1 vname='A' is str:0 int:0 flt:1 ary:1
check_eitem:
check_operator: 
check_literal:lit=',' ' '
check_literal:After drop space:',' ''
  ret0 Empty test string
check_operator:ret0
check_atom:
check_literal:lit=' "' ' '
    dropping space
check_literal:After drop space:'"' ''
  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname '':
check_vname ret0 '':
check_sub_expr:
check_literal:lit=' (' ' '
    dropping space
check_literal:After drop space:'(' ''
  ret0 Empty test string
check_sub_expr: ret0
scan_expression: ret1 ''
scan_command: ret1 =>'PRINT'
check_literal:lit=':' ' '
check_literal:After drop space:':' ''
  ret0 Empty test string
cline scanned OK
=======================cline==========================
==PRINT B%(10)
==
scan_cline:
check_line:
check_assignment:
check_vname 'PRINT B%(10)
':
check_vname ret1 'B%(10)
':
check_literal:lit=' =' ' B%(10)
'
    dropping space
check_literal:After drop space:'=' 'B%(10)
'
  '=' != 'B'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_cline: Checked len=13, 'PRINT B%(10)
'
scan_line:
check_assignment:
check_vname 'PRINT B%(10)
':
check_vname ret1 'B%(10)
':
check_literal:lit=' =' ' B%(10)
'
    dropping space
check_literal:After drop space:'=' 'B%(10)
'
  '=' != 'B'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_line:check_command:1 
scan_command:
scan_expression: ' B%(10)
'
check_eitem:
check_operator: B%(10)

check_literal:lit=',' ' B%(10)
'
check_literal:After drop space:',' 'B%(10)
'
  ',' != 'B'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' B%(10)
'
    dropping space
check_literal:After drop space:'"' 'B%(10)
'
  '"' != 'B'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname 'B%(10)
':
check_vname ret1 'B%(10)
':
scan_eitem:
check_operator: B%(10)

check_literal:lit=',' ' B%(10)
'
check_literal:After drop space:',' 'B%(10)
'
  ',' != 'B'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' B%(10)
'
    dropping space
check_literal:After drop space:'"' 'B%(10)
'
  '"' != 'B'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname 'B%(10)
':
check_vname ret1 'B%(10)
':
scan_atom:
check_literal:lit=' "' ' B%(10)
'
    dropping space
check_literal:After drop space:'"' 'B%(10)
'
  '"' != 'B'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname 'B%(10)
':
check_vname ret1 'B%(10)
':
scan_variable:
scan_vname: 'B%(10)
'
scan_vname: ret1 'B'
scan_variable: '%(10)
'
scan_variable: Ary test '(10)
'
check_literal:lit='(' ' (10)
'
check_literal:After drop space:'(' '(10)
'
check_literal:After while():10)

ret1
scan_variable: is array
scan_expression: '(10)
'
check_eitem:
check_operator: (10)

check_literal:lit=',' ' (10)
'
check_literal:After drop space:',' '(10)
'
  ',' != '('
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' (10)
'
    dropping space
check_literal:After drop space:'"' '(10)
'
  '"' != '('
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname '(10)
':
check_vname ret0 '(10)
':
check_sub_expr:
check_literal:lit=' (' ' (10)
'
    dropping space
check_literal:After drop space:'(' '(10)
'
check_literal:After while():10)

ret1
check_sub_expr: ret1
scan_eitem:
check_operator: (10)

check_literal:lit=',' ' (10)
'
check_literal:After drop space:',' '(10)
'
  ',' != '('
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' (10)
'
    dropping space
check_literal:After drop space:'"' '(10)
'
  '"' != '('
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname '(10)
':
check_vname ret0 '(10)
':
check_sub_expr:
check_literal:lit=' (' ' (10)
'
    dropping space
check_literal:After drop space:'(' '(10)
'
check_literal:After while():10)

ret1
check_sub_expr: ret1
scan_sub_expr:
scan_literal:lit=' (' '(10)
'
scan_literal:After drop space:(10)

scan_literal:while loop:(10)

scan_expression: '10)
'
check_eitem:
check_operator: 10)

check_literal:lit=',' ' 10)
'
check_literal:After drop space:',' '10)
'
  ',' != '1'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 10)
'
    dropping space
check_literal:After drop space:'"' '10)
'
  '"' != '1'
ret0
check_number:
check_float:
isfloatdigit:
scan_eitem:
check_operator: 10)

check_literal:lit=',' ' 10)
'
check_literal:After drop space:',' '10)
'
  ',' != '1'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 10)
'
    dropping space
check_literal:After drop space:'"' '10)
'
  '"' != '1'
ret0
check_number:
check_float:
isfloatdigit:
scan_atom:
check_literal:lit=' "' ' 10)
'
    dropping space
check_literal:After drop space:'"' '10)
'
  '"' != '1'
ret0
check_number:
check_float:
isfloatdigit:
scan_number:
check_float:
isfloatdigit:
scan_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_eitem:
check_operator: )

check_literal:lit=',' ' )
'
check_literal:After drop space:',' ')
'
  ',' != ')'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' )
'
    dropping space
check_literal:After drop space:'"' ')
'
  '"' != ')'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname ')
':
check_vname ret0 ')
':
check_sub_expr:
check_literal:lit=' (' ' )
'
    dropping space
check_literal:After drop space:'(' ')
'
  '(' != ')'
ret0
check_sub_expr: ret0
scan_expression: ret1 ')
'
scan_literal:lit=' )' ')
'
scan_literal:After drop space:)

scan_literal:while loop:)

check_eitem:
check_operator: 

check_literal:lit=',' ' '
check_literal:After drop space:',' ''
  ret0 Empty test string
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 
'
    dropping space
check_literal:After drop space:'"' ''
  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname '
':
check_vname ret0 '
':
check_sub_expr:
check_literal:lit=' (' ' 
'
    dropping space
check_literal:After drop space:'(' ''
  ret0 Empty test string
check_sub_expr: ret0
scan_expression: ret1 '
'
check_literal:lit=' , ' ' 
'
    dropping space
check_literal:After drop space:', ' ''
  ret0 Empty test string
scan_literal:lit=' )' '
'
scan_literal:After drop space:
scan_literal:while loop:
PRINT B%(10)

             ^

   Bad literal ' )'
scan_variable:ret1 vname='B%' is str:0 int:1 flt:0 ary:1
check_eitem:
check_operator: 
check_literal:lit=',' ' '
check_literal:After drop space:',' ''
  ret0 Empty test string
check_operator:ret0
check_atom:
check_literal:lit=' "' ' '
    dropping space
check_literal:After drop space:'"' ''
  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname '':
check_vname ret0 '':
check_sub_expr:
check_literal:lit=' (' ' '
    dropping space
check_literal:After drop space:'(' ''
  ret0 Empty test string
check_sub_expr: ret0
scan_expression: ret1 ''
scan_command: ret1 =>'PRINT'
check_literal:lit=':' ' '
check_literal:After drop space:':' ''
  ret0 Empty test string
cline scanned OK
=======================cline==========================
==PRINT D$(2)
==
scan_cline:
check_line:
check_assignment:
check_vname 'PRINT D$(2)
':
check_vname ret1 'D$(2)
':
check_literal:lit=' =' ' D$(2)
'
    dropping space
check_literal:After drop space:'=' 'D$(2)
'
  '=' != 'D'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_cline: Checked len=12, 'PRINT D$(2)
'
scan_line:
check_assignment:
check_vname 'PRINT D$(2)
':
check_vname ret1 'D$(2)
':
check_literal:lit=' =' ' D$(2)
'
    dropping space
check_literal:After drop space:'=' 'D$(2)
'
  '=' != 'D'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_line:check_command:1 
scan_command:
scan_expression: ' D$(2)
'
check_eitem:
check_operator: D$(2)

check_literal:lit=',' ' D$(2)
'
check_literal:After drop space:',' 'D$(2)
'
  ',' != 'D'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' D$(2)
'
    dropping space
check_literal:After drop space:'"' 'D$(2)
'
  '"' != 'D'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname 'D$(2)
':
check_vname ret1 'D$(2)
':
scan_eitem:
check_operator: D$(2)

check_literal:lit=',' ' D$(2)
'
check_literal:After drop space:',' 'D$(2)
'
  ',' != 'D'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' D$(2)
'
    dropping space
check_literal:After drop space:'"' 'D$(2)
'
  '"' != 'D'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname 'D$(2)
':
check_vname ret1 'D$(2)
':
scan_atom:
check_literal:lit=' "' ' D$(2)
'
    dropping space
check_literal:After drop space:'"' 'D$(2)
'
  '"' != 'D'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname 'D$(2)
':
check_vname ret1 'D$(2)
':
scan_variable:
scan_vname: 'D$(2)
'
scan_vname: ret1 'D'
scan_variable: '$(2)
'
scan_variable: Ary test '(2)
'
check_literal:lit='(' ' (2)
'
check_literal:After drop space:'(' '(2)
'
check_literal:After while():2)

ret1
scan_variable: is array
scan_expression: '(2)
'
check_eitem:
check_operator: (2)

check_literal:lit=',' ' (2)
'
check_literal:After drop space:',' '(2)
'
  ',' != '('
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' (2)
'
    dropping space
check_literal:After drop space:'"' '(2)
'
  '"' != '('
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname '(2)
':
check_vname ret0 '(2)
':
check_sub_expr:
check_literal:lit=' (' ' (2)
'
    dropping space
check_literal:After drop space:'(' '(2)
'
check_literal:After while():2)

ret1
check_sub_expr: ret1
scan_eitem:
check_operator: (2)

check_literal:lit=',' ' (2)
'
check_literal:After drop space:',' '(2)
'
  ',' != '('
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' (2)
'
    dropping space
check_literal:After drop space:'"' '(2)
'
  '"' != '('
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname '(2)
':
check_vname ret0 '(2)
':
check_sub_expr:
check_literal:lit=' (' ' (2)
'
    dropping space
check_literal:After drop space:'(' '(2)
'
check_literal:After while():2)

ret1
check_sub_expr: ret1
scan_sub_expr:
scan_literal:lit=' (' '(2)
'
scan_literal:After drop space:(2)

scan_literal:while loop:(2)

scan_expression: '2)
'
check_eitem:
check_operator: 2)

check_literal:lit=',' ' 2)
'
check_literal:After drop space:',' '2)
'
  ',' != '2'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 2)
'
    dropping space
check_literal:After drop space:'"' '2)
'
  '"' != '2'
ret0
check_number:
check_float:
isfloatdigit:
scan_eitem:
check_operator: 2)

check_literal:lit=',' ' 2)
'
check_literal:After drop space:',' '2)
'
  ',' != '2'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 2)
'
    dropping space
check_literal:After drop space:'"' '2)
'
  '"' != '2'
ret0
check_number:
check_float:
isfloatdigit:
scan_atom:
check_literal:lit=' "' ' 2)
'
    dropping space
check_literal:After drop space:'"' '2)
'
  '"' != '2'
ret0
check_number:
check_float:
isfloatdigit:
scan_number:
check_float:
isfloatdigit:
scan_float:
isfloatdigit:
isfloatdigit:
check_eitem:
check_operator: )

check_literal:lit=',' ' )
'
check_literal:After drop space:',' ')
'
  ',' != ')'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' )
'
    dropping space
check_literal:After drop space:'"' ')
'
  '"' != ')'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname ')
':
check_vname ret0 ')
':
check_sub_expr:
check_literal:lit=' (' ' )
'
    dropping space
check_literal:After drop space:'(' ')
'
  '(' != ')'
ret0
check_sub_expr: ret0
scan_expression: ret1 ')
'
scan_literal:lit=' )' ')
'
scan_literal:After drop space:)

scan_literal:while loop:)

check_eitem:
check_operator: 

check_literal:lit=',' ' '
check_literal:After drop space:',' ''
  ret0 Empty test string
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 
'
    dropping space
check_literal:After drop space:'"' ''
  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname '
':
check_vname ret0 '
':
check_sub_expr:
check_literal:lit=' (' ' 
'
    dropping space
check_literal:After drop space:'(' ''
  ret0 Empty test string
check_sub_expr: ret0
scan_expression: ret1 '
'
check_literal:lit=' , ' ' 
'
    dropping space
check_literal:After drop space:', ' ''
  ret0 Empty test string
scan_literal:lit=' )' '
'
scan_literal:After drop space:
scan_literal:while loop:
PRINT D$(2)

            ^

   Bad literal ' )'
scan_variable:ret1 vname='D$' is str:1 int:0 flt:0 ary:1
check_eitem:
check_operator: 
check_literal:lit=',' ' '
check_literal:After drop space:',' ''
  ret0 Empty test string
check_operator:ret0
check_atom:
check_literal:lit=' "' ' '
    dropping space
check_literal:After drop space:'"' ''
  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname '':
check_vname ret0 '':
check_sub_expr:
check_literal:lit=' (' ' '
    dropping space
check_literal:After drop space:'(' ''
  ret0 Empty test string
check_sub_expr: ret0
scan_expression: ret1 ''
scan_command: ret1 =>'PRINT'
check_literal:lit=':' ' '
check_literal:After drop space:':' ''
  ret0 Empty test string
cline scanned OK
=======================cline==========================
==PRINT F$(10,12)
==
scan_cline:
check_line:
check_assignment:
check_vname 'PRINT F$(10,12)
':
check_vname ret1 'F$(10,12)
':
check_literal:lit=' =' ' F$(10,12)
'
    dropping space
check_literal:After drop space:'=' 'F$(10,12)
'
  '=' != 'F'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_cline: Checked len=16, 'PRINT F$(10,12)
'
scan_line:
check_assignment:
check_vname 'PRINT F$(10,12)
':
check_vname ret1 'F$(10,12)
':
check_literal:lit=' =' ' F$(10,12)
'
    dropping space
check_literal:After drop space:'=' 'F$(10,12)
'
  '=' != 'F'
ret0
check_command:
check_command: ret1=> 'PRINT'
scan_line:check_command:1 
scan_command:
scan_expression: ' F$(10,12)
'
check_eitem:
check_operator: F$(10,12)

check_literal:lit=',' ' F$(10,12)
'
check_literal:After drop space:',' 'F$(10,12)
'
  ',' != 'F'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' F$(10,12)
'
    dropping space
check_literal:After drop space:'"' 'F$(10,12)
'
  '"' != 'F'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname 'F$(10,12)
':
check_vname ret1 'F$(10,12)
':
scan_eitem:
check_operator: F$(10,12)

check_literal:lit=',' ' F$(10,12)
'
check_literal:After drop space:',' 'F$(10,12)
'
  ',' != 'F'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' F$(10,12)
'
    dropping space
check_literal:After drop space:'"' 'F$(10,12)
'
  '"' != 'F'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname 'F$(10,12)
':
check_vname ret1 'F$(10,12)
':
scan_atom:
check_literal:lit=' "' ' F$(10,12)
'
    dropping space
check_literal:After drop space:'"' 'F$(10,12)
'
  '"' != 'F'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname 'F$(10,12)
':
check_vname ret1 'F$(10,12)
':
scan_variable:
scan_vname: 'F$(10,12)
'
scan_vname: ret1 'F'
scan_variable: '$(10,12)
'
scan_variable: Ary test '(10,12)
'
check_literal:lit='(' ' (10,12)
'
check_literal:After drop space:'(' '(10,12)
'
check_literal:After while():10,12)

ret1
scan_variable: is array
scan_expression: '(10,12)
'
check_eitem:
check_operator: (10,12)

check_literal:lit=',' ' (10,12)
'
check_literal:After drop space:',' '(10,12)
'
  ',' != '('
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' (10,12)
'
    dropping space
check_literal:After drop space:'"' '(10,12)
'
  '"' != '('
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname '(10,12)
':
check_vname ret0 '(10,12)
':
check_sub_expr:
check_literal:lit=' (' ' (10,12)
'
    dropping space
check_literal:After drop space:'(' '(10,12)
'
check_literal:After while():10,12)

ret1
check_sub_expr: ret1
scan_eitem:
check_operator: (10,12)

check_literal:lit=',' ' (10,12)
'
check_literal:After drop space:',' '(10,12)
'
  ',' != '('
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' (10,12)
'
    dropping space
check_literal:After drop space:'"' '(10,12)
'
  '"' != '('
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname '(10,12)
':
check_vname ret0 '(10,12)
':
check_sub_expr:
check_literal:lit=' (' ' (10,12)
'
    dropping space
check_literal:After drop space:'(' '(10,12)
'
check_literal:After while():10,12)

ret1
check_sub_expr: ret1
scan_sub_expr:
scan_literal:lit=' (' '(10,12)
'
scan_literal:After drop space:(10,12)

scan_literal:while loop:(10,12)

scan_expression: '10,12)
'
check_eitem:
check_operator: 10,12)

check_literal:lit=',' ' 10,12)
'
check_literal:After drop space:',' '10,12)
'
  ',' != '1'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 10,12)
'
    dropping space
check_literal:After drop space:'"' '10,12)
'
  '"' != '1'
ret0
check_number:
check_float:
isfloatdigit:
scan_eitem:
check_operator: 10,12)

check_literal:lit=',' ' 10,12)
'
check_literal:After drop space:',' '10,12)
'
  ',' != '1'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 10,12)
'
    dropping space
check_literal:After drop space:'"' '10,12)
'
  '"' != '1'
ret0
check_number:
check_float:
isfloatdigit:
scan_atom:
check_literal:lit=' "' ' 10,12)
'
    dropping space
check_literal:After drop space:'"' '10,12)
'
  '"' != '1'
ret0
check_number:
check_float:
isfloatdigit:
scan_number:
check_float:
isfloatdigit:
scan_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_eitem:
check_operator: ,12)

check_literal:lit=',' ' ,12)
'
check_literal:After drop space:',' ',12)
'
check_literal:After while():12)

ret1
scan_literal:lit=',' ',12)
'
scan_literal:After drop space:,12)

scan_literal:while loop:,12)

scan_eitem:
check_operator: 12)

check_literal:lit=',' ' 12)
'
check_literal:After drop space:',' '12)
'
  ',' != '1'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 12)
'
    dropping space
check_literal:After drop space:'"' '12)
'
  '"' != '1'
ret0
check_number:
check_float:
isfloatdigit:
scan_atom:
check_literal:lit=' "' ' 12)
'
    dropping space
check_literal:After drop space:'"' '12)
'
  '"' != '1'
ret0
check_number:
check_float:
isfloatdigit:
scan_number:
check_float:
isfloatdigit:
scan_float:
isfloatdigit:
isfloatdigit:
isfloatdigit:
check_eitem:
check_operator: )

check_literal:lit=',' ' )
'
check_literal:After drop space:',' ')
'
  ',' != ')'
ret0
check_operator:ret0
check_atom:
check_literal:lit=' "' ' )
'
    dropping space
check_literal:After drop space:'"' ')
'
  '"' != ')'
ret0
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname ')
':
check_vname ret0 ')
':
check_sub_expr:
check_literal:lit=' (' ' )
'
    dropping space
check_literal:After drop space:'(' ')
'
  '(' != ')'
ret0
check_sub_expr: ret0
scan_expression: ret1 ')
'
scan_literal:lit=' )' ')
'
scan_literal:After drop space:)

scan_literal:while loop:)

check_eitem:
check_operator: 

check_literal:lit=',' ' '
check_literal:After drop space:',' ''
  ret0 Empty test string
check_operator:ret0
check_atom:
check_literal:lit=' "' ' 
'
    dropping space
check_literal:After drop space:'"' ''
  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname '
':
check_vname ret0 '
':
check_sub_expr:
check_literal:lit=' (' ' 
'
    dropping space
check_literal:After drop space:'(' ''
  ret0 Empty test string
check_sub_expr: ret0
scan_expression: ret1 '
'
check_literal:lit=' , ' ' 
'
    dropping space
check_literal:After drop space:', ' ''
  ret0 Empty test string
scan_literal:lit=' )' '
'
scan_literal:After drop space:
scan_literal:while loop:
PRINT F$(10,12)

                ^

   Bad literal ' )'
scan_variable:ret1 vname='F$' is str:1 int:0 flt:0 ary:1
check_eitem:
check_operator: 
check_literal:lit=',' ' '
check_literal:After drop space:',' ''
  ret0 Empty test string
check_operator:ret0
check_atom:
check_literal:lit=' "' ' '
    dropping space
check_literal:After drop space:'"' ''
  ret0 Empty test string
check_number:
check_float:
isfloatdigit:
check_integer:
check_vname '':
check_vname ret0 '':
check_sub_expr:
check_literal:lit=' (' ' '
    dropping space
check_literal:After drop space:'(' ''
  ret0 Empty test string
check_sub_expr: ret0
scan_expression: ret1 ''
scan_command: ret1 =>'PRINT'
check_literal:lit=':' ' '
check_literal:After drop space:':' ''
  ret0 Empty test string
cline scanned OK

 14 lines scanned Ok
 0 lines scanned failed
 1 lines blank
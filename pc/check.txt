


IF CP%=1 


A$="1317B01.B01E03L." 


ELSEIF CP%=2 


A$="1317A17C01C02.I02B02D03K18E10O." 


ELSEIF CP%=3 


A$="3218B03.D05N." 


ELSEIF CP%=4 


A$="1319B05.B05L." 


ELSEIF CP%=5 


A$="1320B06.B06L." 


ELSEIF CP%=6 


A$="2900A14E07.D04N." 


ELSEIF CP%=7 


A$="2900A14.E07M." 


ELSEIF CP%=8 


A$="1322B08.B08L." 


ELSEIF CP%=9 


A$="1323B09.B09L." 


ELSEIF CP%=10 


A$="1417B01.C01F03L." 


ELSEIF CP%=11 


A$="1417B02.C02L." 


ELSEIF CP%=12 


A$="1419B05.C05L." 


ELSEIF CP%=13 


A$="1420B06.C06L." 


ELSEIF CP%=14 


A$="1422B08.C08L." 


ELSEIF CP%=15 


A$="1423B09.C09L." 


ELSEIF CP%=16 


A$="0500A10C10.D10M." 


ELSEIF CP%=17 


A$="0500A08C10.D10M." 


ELSEIF CP%=18 


A$="0500A10.K11O." 


ELSEIF CP%=19 


A$="0500A08.K19O." 


ELSEIF CP%=20 


A$="0500A15.F02K14O." 


ELSEIF CP%=21 


A$="0600A14.E02K15O." 


ELSEIF CP%=22 


A$="3100D02.H01E03L." 


ELSEIF CP%=23 


A$="3100B01.D11N." 


ELSEIF CP%=24 


A$="3219B04B06.H04J06B05L." 


ELSEIF CP%=25 


A$="3219B04B09.H04D06B05M." 


ELSEIF CP%=26 


A$="3000B05B11B08.D12I10J08J11M." 


ELSEIF CP%=27 


A$="1333B11.B11L." 


ELSEIF CP%=28 


A$="1433B11.C11L." 


ELSEIF CP%=29 


A$="1500A02.K03O." 


ELSEIF CP%=30 


A$="1500A12.K13O." 


ELSEIF CP%=31 


A$="1500A18F10.K17O." 


ELSEIF CP%=32 


A$="1600A03.K02O." 


ELSEIF CP%=33 


A$="1600A13.K12O." 


ELSEIF CP%=34 


A$="1600A17.K18O." 


ELSEIF CP%=35 


A$="1500A05.K06O." 


ELSEIF CP%=36 


A$="3400A03.D09M." 


ELSEIF CP%=37 


A$="3400A13E08.D14M." 


ELSEIF CP%=38 


A$="3400A13.E08D13I06B06M." 


ELSEIF CP%=39 


A$="1500A18E10.D16M." 


ELSEIF CP%=40 


A$="1318B10.B10L." 


ELSEIF CP%=41 


A$="1418B10.C10L." 


ELSEIF CP%=42 


A$="1318B03.D09M." 


ELSEIF CP%=43 


A$="1317B02.B02L." 


ELSEIF CP%=44 


A$="3500.A." 


ELSEIF CP%=45 


A$="3600.P." 


ELSEIF CP%=46 


A$="3700.O." 


ELSEIF CP%=47 


A$="5000.N." 


ENDIF 


RETURNA14: 


Q%(1)=0:O$(1)="A LIGHTED TORCH" 


Q%(1)=0:O$(1)="A LIGHTED TORCH" 


Q%(2)=0:O$(2)="A TORCH" 


Q%(2)=0:O$(2)="A TORCH" 


Q%(3)=3:O$(3)="A LADDER" 


Q%(3)=3:O$(3)="A LADDER" 


Q%(4)=3:O$(4)="A HAMMER" 


Q%(4)=3:O$(4)="A HAMMER" 


Q%(5)=0:O$(5)="A HAMMER" 


Q%(5)=0:O$(5)="A HAMMER" 


Q%(6)=0:O$(6)="A WAD OF NOTES" 


Q%(6)=0:O$(6)="A WAD OF NOTES" 


Q%(7)=0:O$(7)="MANHOLE COVER" 


Q%(7)=0:O$(7)="MANHOLE COVER" 


Q%(8)=15:O$(8)="A BAG OF NAILS" 


Q%(8)=15:O$(8)="A BAG OF NAILS" 


Q%(9)=16:O$(9)="A BARCLAYCARD" 


Q%(9)=16:O$(9)="A BARCLAYCARD" 


Q%(10)=0:O$(10)="A ROUGH LADDER" 


Q%(10)=0:O$(10)="A ROUGH LADDER" 


Q%(11)=4:O$(11)="SOME WOOD" 


Q%(11)=4:O$(11)="SOME WOOD" 


V$(1)="01N" 


V$(2)="01NORT" 


V$(3)="02E" 


V$(4)="02EAST" 


V$(5)="03S" 


V$(6)="03SOUT" 


V$(7)="04W" 


V$(8)="04WEST" 


V$(9)="05U" 


V$(10)="05UP" 


V$(11)="06D" 


V$(12)="06DOWN" 


V$(13)="13TAKE" 


V$(14)="14PUT" 


V$(15)="14DROP" 


V$(16)="15ENTE" 


V$(17)="15IN" 


V$(18)="16OUT" 


V$(19)="16EXIT" 


V$(20)="16LEAV" 


V$(21)="17TORC" 


V$(22)="18LADD" 


V$(23)="19HAMM" 


V$(24)="20WAD" 


V$(25)="20NOTE" 


V$(26)="22BAG" 


V$(27)="22NAIL" 


V$(28)="23BARC" 


V$(29)="05SCAL" 


V$(30)="05CLIM" 


V$(31)="29OPEN" 


V$(32)="29LIFT" 


V$(33)="30MAKE" 


V$(34)="30BUIL" 


V$(35)="31SWIT" 


V$(36)="31LIGH" 


V$(37)="32BUY" 


V$(38)="33WOOD" 


V$(39)="34ROB" 


V$(40)="34STEA" 


V$(41)="35INVE" 


V$(42)="36QUIT" 


V$(43)="37LOOK" 


M$(1)="00" 


M$(2)="01040209041800" 


M$(3)="00" 


M$(4)="0202050500" 


M$(5)="0604040700" 


M$(6)="00" 


M$(7)="0108030500" 


M$(8)="030700" 


M$(9)="011202100314040200" 


M$(10)="040900" 


M$(11)="00" 


M$(12)="0209041800" 


M$(13)="00" 


M$(14)="010900" 


M$(15)="031600" 


M$(16)="011500" 


M$(17)="00" 


M$(18)="0112020200" 


M$(19)="00" 


C$(1)="A01.K02O." 


C$(2)="A16H30.G0121." 


C$(3)="G01.D01Q." 


C$(4)="B06H10.D02J06." 


C$(5)="A14E07.D07N." 


C$(6)="A14F07.D08N." 


C$(7)="A11.Q." 


C$(8)="A19.Q." 


C$(9)="A06.K03O." 


C$(10)=".N." 


ACRES: 


IF C%<0 


B%=VIEW(2,"GOODBYE!") 


PAUSE 30 


STOP 


ENDIF 


C%=C%-1 


B%=VIEW(1,"BUT YOU HAVE ONLY "+GEN$(A%,4)+" ACRES.") 


addtop:(item$,pos%) 


IF LEN(item$)>8 


RAISE 202 


ENDIF 


POKEB $2187,LEN(item$) 


I%=1 


WHILE I%<=LEN(item$) 


POKEB $2187+I%,ASC(MID$(item$,I%,1)) 


I%=I%+1 


ENDWH 


POKEW $2188+LEN(item$),0 


A%(1)=$3F65 


A%(2)=$3900 


USR(ADDR(A%()),pos%) 


ALZAN: 


A1%=47 


O1%=11 


A14: 


ROOM%=1 


S%(2)=0 


I%=0 


DO 


I%=I%+1 


O%(I%)=Q%(I%) 


UNTIL I%=11 


A%=VIEW(1,"WELCOME TO ADVENTURE") 


AGAIN:: 


IF S%(2)=0 


GOTO ROOM:: 


ENDIF 


IF C%(2)>=1 


C%(2)=C%(2)-1 


ENDIF 


IF S%(3)=1 


GOTO ROOM:: 


ENDIF 


A%=VIEW(2,"IT IS DARK - BETTER GET SOME LIGHT OR YOU MAY BE IN TROUBLE.") 


IF C%(3)>=1 


C%(3)=C%(3)-1 


ENDIF 


GOTO COMMAND:: 


ROOM:: 


ROOMS10: 


F%=0 


I%=0 


DO 


I%=I%+1 


IF O%(I%)<>ROOM% 


GOTO SKIP1:: 


ENDIF 


IF F%=1 


GOTO SKIP2:: 


ENDIF 


A%=VIEW(2,"THERE IS ALSO:") 


F%=1 


SKIP2:: 


A%=VIEW(2,O$(I%)) 


SKIP1:: 


UNTIL I%=11 


COMMAND:: 


T1%=1 


GOTO CHECK2:: 


CEC:: 


IF C%(1)>=1 


C%(1)=C%(1)-1 


ENDIF 


IF C%(4)>=1 


C%(4)=C%(4)-1 


ENDIF 


AT 1,2 


PRINT ">"; 


INPUT Y$ 


CLS 


Y%=0 


P$(2)="00" 


W%=0 


DO 


W%=W%+1 


GREMOVE:: 


REMOV2: 


IF Y%>=LEN(Y$) 


BREAK 


ENDIF 


IF P$(W%)="00" 


GOTO GREMOVE:: 


ENDIF 


UNTIL W%=2 


IF P$(1)<>"00" 


GOTO CHECK1:: 


ENDIF 


A%=VIEW(2,"PARDON?") 


GOTO AGAIN:: 


CHECK1:: 


Z%=1 


GMK:: 


T$=MID$(M$(ROOM%),Z%,2) 


IF T$="00" 


GOTO SATF:: 


ENDIF 


IF T$<>P$(1) 


GOTO TNM:: 


ENDIF 


ROOM%=VAL(MID$(M$(ROOM%),Z%+2,2)) 


GOTO AGAIN:: 


TNM:: 


Z%=Z%+4 


GOTO GMK:: 


SATF:: 


T1%=0 


MATCH%=0 


CHECK2:: 


CP%=0 


TSN:: 


CP%=CP%+1 


IF T1%<1 


GOTO HABS:: 


ENDIF 


E$=C$(CP%) 


GOTO NSFC:: 


HABS:: 


IF CP%<=A1% 


GOTO CIMK1:: 


ENDIF 


IF MATCH%>=1 


GOTO COMMAND:: 


ENDIF 


A%=VIEW(2,"YOU CAN'T") 


IF VAL(P$(1))<13 


A%=VIEW(2,"GO THAT WAY") 


ENDIF 


GOTO AGAIN:: 


CIMK1:: 


A13: 


IF LEFT$(A$,2)<>P$(1) 


GOTO TSN:: 


ENDIF 


Y$=MID$(A$,3,2) 


IF Y$<>"00" 


IF Y$<>P$(2) 


GOTO TSN:: 


ENDIF 


ENDIF 


E$=MID$(A$,5,30) 


NSFC:: 


E%=1 


FSEC:: 


IF MID$(E$,E%,1)="." 


GOTO ACTIONS:: 


ENDIF 


TYPE%=ASC(MID$(E$,E%,1))-65 


N%=VAL(MID$(E$,E%+1,2)) 


OK%=0 


IF TYPE%=0 


 IF N%=ROOM% 


 OK%=1 


 ENDIF 


ELSEIF TYPE%=1 


 IF O%(N%)=ROOM% 


 OK%=1 


 ENDIF 


 IF O%(N%)<0 


 OK%=1 


 ENDIF 


ELSEIF TYPE%=2 


 IF O%(N%)<>ROOM% 


  IF O%(N%)>=0 


  OK%=1 


  ENDIF 


 ENDIF 


ELSEIF TYPE%=3 


 IF O%(N%)<0 


 OK%=1 


 ENDIF 


ELSEIF TYPE%=4 


OK%=S%(N%) 


ELSEIF TYPE%=5 


 IF S%(N%)=0 


 OK%=1 


 ENDIF 


ELSEIF TYPE%=6 


 IF C%(N%)=1 


 OK%=1 


 ENDIF 


ELSEIF TYPE%=7 


 IF INT(RND*100)+1<=N% 


 OK%=1 


 ENDIF 


ENDIF 


IF OK%=0 


GOTO TSN:: 


ENDIF 


E%=E%+3 


GOTO FSEC:: 


ACTIONS:: 


MATCH%=1 


E%=E%+1 


NPA:: 


IF MID$(E$,E%,1)="." 


GOTO TSN:: 


ENDIF 


TYPE%=ASC(MID$(E$,E%,1))-65 


IF MID$(E$,E%+1,1)<>"." 


N%=VAL(MID$(E$,E%+1,2)) 


ENDIF 


BREAK%=0 


IF TYPE%=0 


A%=VIEW(2,"YOU ARE HOLDING:") 


F%=1 


X%=0 


DO 


X%=X%+1 


 IF O%(X%)>=0 


 GOTO NEXTX:: 


 ENDIF 


A%=VIEW(2,O$(X%)) 


F%=0 


NEXTX:: 


UNTIL X%=O1% 


 IF F%>=1 


 A%=VIEW(2," NOTHING.") 


 ENDIF 


BREAK%=100 


ELSEIF TYPE%=1 


 IF S%(1)<5 


 GOTO IFON:: 


 ENDIF 


A%=VIEW(2,"YOU CANNOT CARRY MORE.") 


BREAK%=100 


GOTO C:: 


IFON:: 


 IF O%(N%)=-1 


 GOTO PYAHI:: 


 ENDIF 


O%(N%)=-1 


S%(1)=S%(1)+1 


GOTO C:: 


PYAHI:: 


A%=VIEW(2,"YOU ALREADY HAVE IT.") 


BREAK%=100 


C:: 


ELSEIF TYPE%=2 


 IF O%(N%)=-1 


 GOTO ONER:: 


 ENDIF 


A%=VIEW(2,"YOU DON'T HAVE "+O$(N%)) 


BREAK%=100 


GOTO D:: 


ONER:: 


O%(N%)=ROOM% 


S%(1)=S%(1)-1 


D:: 


ELSEIF TYPE%=3 


TEXT3: 


ELSEIF TYPE%=4 


S%(N%)=1 


ELSEIF TYPE%=5 


S%(N%)=0 


ELSEIF TYPE%=6 


C%(N%)=VAL(MID$(E$,E%+3,2)) 


E%=E%+2 


ELSEIF TYPE%=7 


X%=O%(N%) 


O%(N%)=O%(N%+1) 


O%(N%+1)=X% 


ELSEIF TYPE%=8 


O%(N%)=ROOM% 


ELSEIF TYPE%=9 


 IF O%(N%)<0 


 S%(1)=S%(1)-1 


 ENDIF 


O%(N%)=0 


ELSEIF TYPE%=10 


ROOM%=N% 


ELSEIF TYPE%=11 


A%=VIEW(2,"OKAY.") 


BREAK%=1000 


ELSEIF TYPE%=12 


BREAK%=1000 


ELSEIF TYPE%=13 


BREAK%=1100 


ELSEIF TYPE%=14 


BREAK%=100 


ELSEIF TYPE%=15 


AT 1,2 


PRINT "ARE YOU SURE? "; 


INPUT W$ 


BREAK%=1100 


 IF CHR$(ASC(W$))<>"Y" 


 BREAK%=100 


 ELSE 


 STOP 


 ENDIF 


ELSEIF TYPE%=16 


STOP 


ENDIF 


IF BREAK%=100 


GOTO AGAIN:: 


ELSEIF BREAK%=1000 


GOTO COMMAND:: 


ELSEIF BREAK%=1100 


GOTO CEC:: 


ENDIF 


E%=E%+3 


GOTO NPA::  blue: 


T=M 


M=ABS(M) 


IF M>131 


A$="80A+" 


M=M-131 


ENDIF 


IF (M>=5) AND (M<15) 


B$="82" 


ELSEIF M>=15 AND M<25 


B$="82A" 


ELSEIF M>=25 AND M<35 


B$="82B" 


ELSEIF M>=35 AND M<50 


B$="82C" 


ELSEIF M>=50 AND M<65 


B$="80D" 


ELSEIF M>=65 AND M<95 


B$="80C" 


ELSEIF M>=95 AND M<120 


B$="80B" 


ELSEIF M>120 


B$="80A" 


ENDIF 


PRINT "Colour correction" 


PRINT "BLUE",T,"Mired" 


PRINT A$;B$,"Filter" 


boot: 


ADDTOP:("Film",0) 


border: 


a%=1 :p%=0 :b%=10 


a%=1 :p%=0 :b%=10 


a%=1 :p%=0 :b%=10 


bl$=REPT$(CHR$(32),20) 


REM                  Change the screen border for 


REM                  XP procedures on the LZ. 


REM                  Glyn Pollington. 1990. 


CLS 


AT 1,1 :PRINT "       Border" 


AT 1,2 :PRINT "    G.Pollington." 


AT 1,3 :PRINT "Use cursor keys then" 


AT 1,4 :PRINT "   EXE to select." 


DO 


   ch$=ch$+CHR$(p%) 


   p%=p%+1 


   IF p%=8 :p%=32 :ENDIF 


UNTIL p%=256 


CLS 


DO 


   AT 3,4 :PRINT "Select Character" 


   AT 9,3 :PRINT CHR$(127),CHR$(126) 


   IF b%<1 :b%=1 :a%=a%-1 


      ELSEIF b%>20 :b%=20 :a%=a%+1 


      ELSEIF b%>20 :b%=20 :a%=a%+1 


      ELSEIF b%>20 :b%=20 :a%=a%+1 


   ENDIF 


   AT 1,2  :PRINT bl$ 


   AT b%,2 :PRINT CHR$(169) 


   IF a%<1 :a%=1 


   ELSEIF a%>213 :a%=213 


   ELSEIF a%>213 :a%=213 


   ENDIF 


   w$=MID$(ch$,a%,20) 


   AT 1,1 :PRINT w$ 


   k%=KEY 


   IF k%=6 :b%=b%+1 


      ELSEIF k%=5 :b%=b%-1 


      ELSEIF k%=5 :b%=b%-1 


   ENDIF 


UNTIL k%=13 


p%=ASC(MID$(ch$,(a%+b%-1),1)) 


POKEB $2099,p% 


bl$=REPT$(CHR$(p%),20) 


CLS 


AT 1,1 :PRINT bl$ 


AT 1,2 :PRINT CHR$(p%);CHR$(p%);"   New Border   ";CHR$(p%);CHR$(p%) 


AT 1,3 :PRINT CHR$(p%);CHR$(p%);"    Selected    ";CHR$(p%);CHR$(p%) 


AT 1,4 :PRINT bl$ 


GET 


BUSH: 


IF C%<0 


B%=VIEW(2,"GOODBYE!") 


PAUSE 30 


STOP 


ENDIF 


C%=C%-1 


B%=VIEW(1,"BUT YOU HAVE ONLY "+GEN$(S%,4)+" BUSHELS IN STORE.")creakey$:(a$,b$) 


REM Source: CREAKEY$.OPL 


REM Version 1.1 


REM Create access key from login name and password 


REM (C) MAY 1999 LRS 


REM Sluykie@hotmail.com 


a%=LEN(a$) :b%=LEN(b$) 


RANDOMIZE 8*(b%-1)+a% :REM *** set seed *** 


mn%=123 :REM *** first number of characterset to use for encryption *** 


mn%=123 :REM *** first number of characterset to use for encryption *** 


mx%=255 :REM *** last number of characterset to use for encryption *** 


mx%=255 :REM *** last number of characterset to use for encryption *** 


REM *** chars 123..255 are all non-keyboard characters *** 


REM *** login & passw to array *** 


i%=0 


DO 


 i%=i%+1 


 IF i%<=a% :l%(i%)=ASC(MID$(a$,i%,1)) 


 ELSE :l%(i%)=l%(INT(RND*a%)+1) :ENDIF 


 ELSE :l%(i%)=l%(INT(RND*a%)+1) :ENDIF 


 IF i%<=b% :p%(i%)=ASC(MID$(b$,i%,1)) 


 ELSE :p%(i%)=p%(INT(RND*b%)+1) :ENDIF 


 ELSE :p%(i%)=p%(INT(RND*b%)+1) :ENDIF 


UNTIL i%=8 


REM *** 'encrypt login' & 'encrypt passw' array (random) *** 


i%=0 


DO 


 i%=i%+1 


 el%(i%)=INT(RND*(mx%-mn%))+mn% 


 ep%(i%)=INT(RND*(mx%-mn%))+mn% 


UNTIL i%=8 


REM *** encrypt login & passw thus creating key *** 


i%=0 


DO 


 i%=i%+1 


 x%=l%(i%)+el%(i%) 


 y%=p%(i%)+ep%(i%) 


 REM *** bring m% and n% in range mn%..mx% *** 


 WHILE x%>mx% :x%=x%-(mx%-mn%+1) :ENDWH 


 WHILE y%>mx% :y%=y%-(mx%-mn%+1) :ENDWH 


 IF (i%/2.0=i%/2) :REM *** i% even *** 


  el$=el$+CHR$(y%) 


  ep$=ep$+CHR$(x%) 


 ELSE             :REM *** i% odd *** 


 ELSE             :REM *** i% odd *** 


  el$=el$+CHR$(x%) 


  ep$=ep$+CHR$(y%) 


 ENDIF 


UNTIL i%=8 


RETURN (el$+ep$) 


depth: 


M=MENU("35mm,16mm,8mm,70mm") 


IF M=1 


C=0.0339 


ELSEIF M=2 


C=0.0254 


ELSEIF M=3 


C=0.0254 


ELSEIF M=4 


C=0.0339 


ENDIF 


CLS 


PRINT "Focal length" 


INPUT F 


CLS 


PRINT "f STOP" 


INPUT S 


CLS 


H=(F**2)/(S*C) 


C=INTF(H) 


HY= C/1000 


CLS 


S=S/1000 


H=H/1000 


PRINT "FOCUS DISTANCE" 


INPUT D 


CLS 


AT 1,1 


PRINT "Hypofocal distance" 


AT 1,2 


PRINT HY,"m" 


IF D>H 


N=(H*D)/(H+(D-S)) 


N=N*100 


N=INTF(N) 


N=N/100 


AT 1,3 


PRINT"NEAR ";N;" m" 


AT 1,4 


PRINT"INFINITY" 


ELSE 


N=(H*D)/(H+(D-S)) 


C=(H*D)/(H-(D-S)) 


N=N*100 


N=INTF(N) 


N=N/100 


C=C*100 


C=INTF(C) 


C=C/100 


AT 1,3 


PRINT "NEAR",N,"m" 


AT 1,4 


PRINT "FAR",C,"m" 


ENDIF 


GET 


N=MENU("DEPTH,FILM,MENU") 


IF N=1 


DEPTH: 


ELSEIF N=2 


FILM: 


ENDIF 


STOP 


DICE: 


KSTAT 1 


DO 


 AT 1,2 


 PRINT "Stop"+CHR$(63) 


 AT 1,4 


 PRINT "Press key." 


 WHILE KEY=0 


 PAUSE 2 


 AT 1,1 


 PRINT CHR$(26) 


 AT 15,2 


 PRINT CHR$(26) 


 AT 1,3 


 PRINT CHR$(26) 


 D%=(RND*6) 


 IF D%=0 OR D%=2 OR D%=4 


  AT 19,2 


  PRINT CHR$(255) 


 ENDIF 


 IF D%>0 


  AT 18,1 


  PRINT CHR$(255) 


  AT 20,3 


  PRINT CHR$(255) 


 ENDIF 


 IF D%>2 


  AT 20,1 


  PRINT CHR$(255) 


  AT 18,3 


  PRINT CHR$(255) 


 ENDIF 


 IF D%=5 


  AT 18,2 


  PRINT CHR$(255)+" "+CHR$(255) 


 ENDIF 


 ENDWH 


 AT 1,2 


 PRINT "     " 


 AT 1,4 


 PRINT CHR$(26)+"Again"+CHR$(63)+" Y" 


UNTIL GET$<>"Y" 


distance: 


PRINT "Select known data" 


A=MENUN(2,"HEIGHT,WIDTH") 


IF A=1 


PRINT "WHAT HEIGHT mt";CHR$(63) 


INPUT H 


WI=H 


S$="m height" 


H=H*1000 


CLS 


PRINT "WHAT mm LENS";CHR$(63) 


INPUT L 


LE=L 


D=(H*L)/T 


CLS 


ELSEIF A=2 


PRINT "WHAT WIDTH mt";CHR$(63) 


INPUT W 


WI=W 


S$="m width" 


W=W*1000 


CLS 


PRINT "WHAT LENS mm";CHR$(63) 


INPUT L 


LE=L 


CLS 


D=(W*L)/I 


ENDIF 


D=INTF(D/10) 


D=D/100 


PRINT "A",LE,"mm lens"  


PRINT "gives a",WI, S$ 


PRINT "@",D,"metres" 


PRINT "Distance..." 


GET 


DumpPack: 


REM produces an exact copy of a pack on the PC, mostly even if UNMAKE fails 


REM OPKs produced are sligthly different from standard OPK because all bytes 


REM on the pack are copied, program does NOT stop at the <end-of-pack>-marker! 


ESCAPE_OFF 


ONERR ERROR:: 


OFFSET% = 0 :REM where to start scanning (header skip) 


OFFSET% = 0 :REM where to start scanning (header skip) 


REM -- machine code for pack read -- 


REM originates from Horatio's brilliant fast5 datapack copy program 


REM D param in USR - pack number (0=A,1=B,2=C,3=D) 


REM load_addr + 3 - byte - 64K page of pack address (00-01) 


REM load_addr + 5 - word - OFFSET from page of pak address (0000-FFFF) 


REM load_addr + 10 - word - number of bytes to read (size of buffer) 


REM load_addr + 13 - word - location in ram of buffer to store data 


mc1addr% = addr(mc1%()) 


mc1%(1) = $3f62    :REM os     pk$setp 


mc1%(1) = $3f62    :REM os     pk$setp 


mc1%(2) = $3900    :REM rts ;for now! 


mc1%(2) = $3900    :REM rts ;for now! 


REM mc1%(2)=$c600  :REM ldab   #page 


mc1%(3) = $ce00    :REM ldx    #OFFSET 


mc1%(3) = $ce00    :REM ldx    #OFFSET 


mc1%(4) = $003f    :REM os     pk$sadd 


mc1%(4) = $003f    :REM os     pk$sadd 


mc1%(5) = $60cc    :REM ldd 


mc1%(5) = $60cc    :REM ldd 


mc1%(6) = $0080    :REM        #bytes_to_read 


mc1%(6) = $0080    :REM        #bytes_to_read 


mc1%(7) = $ce00    :REM ldx    #buffer_addr 


mc1%(7) = $ce00    :REM ldx    #buffer_addr 


mc1%(8) = $003f    :REM os     pk$read 


mc1%(8) = $003f    :REM os     pk$read 


mc1%(9) = $5e39    :REM rts 


mc1%(9) = $5e39    :REM rts 


REM -- get user input -- 


cls :print " DumpPack v0.1"; 


cls :print " DumpPack v0.1"; 


buff$="  Copies a pack to PC (even if protected or corrupted). Please make sure the CommsLink is booted in and activate Psi2Win.  " 


if view(2,buff$)=1 :return :endif 


do 


 pack%=menu("Which"+chr$(254)+"pack,B:,C:,D:")-1 


 if pack%=-1 :return :endif 


until pack%>0 


do 


 kb% = 4 * 2**(menu("AUTO,8K,16K,32K,64K,128K,256K")-1) 


 if kb% = 0 


  return 


 elseif kb% = 4 
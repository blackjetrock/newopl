void read_proc_file(FILE *fp, NOBJ_PROC *p)
{
  
  if(!read_item((void *)&var_space_size, 1, sizeof(NOBJ_VAR_SPACE_SIZE)))
    {
      printf("\nError reading var space size.");
      return(0);
    }

  var_space_size.size = swap_uint16(var_space_size.size);
  
  if(!read_item((void *)&qcode_space_size, 1, sizeof(NOBJ_QCODE_SPACE_SIZE)))
    {
      printf("\nError reading qcode space size.");
      return(0);
    }

  if(!read_item((void *)&num_parameters.num, 1, sizeof(NOBJ_NUM_PARAMETERS)))
    {
      printf("\nError reading number of parameters.");
      return(0);
    }

  if(!read_item((void *)&parameter_types, num_parameters.num, sizeof(NOBJ_PARAMETER_TYPE)))
    {
      printf("\nError reading parameter types.");
      return(0);
    }

  if(!read_item((void *)&global_varname_size, 1, sizeof(NOBJ_GLOBAL_VARNAME_SIZE)))
    {
      printf("\nError reading global varname size");
      return(0);
    }

  global_varname_size.size = swap_uint16(global_varname_size.size);
  
  printf("\nGlobal varname size:%d", global_varname_size.size);
  
  // Global varname is more complicated to read. Each entry is length
  // prefixed, so read them until the length we have read matches the
  // size we have just read.

  int length_read = 0;
  
do
    {
      uint8_t len;
      uint8_t varname[NOBJ_VARNAME_MAXLEN];
      NOBJ_VARTYPE vartype;
      NOBJ_VARADDR varaddr;
      vartype = 0;
      varaddr = 0;
      
      if(!read_item((void *)&len, 1, sizeof(len)))
	{
	  printf("\nError reading global varname entry length");
	  return(0);
	}

      memset(varname, 0, sizeof(varname));
      
      printf("\nVarname entry len=%d", len);
      
      length_read += sizeof(len);

      // 3 bytes on end are type and addr, so read rest of data into name field
      
      if(!read_item((void *)&varname, len, sizeof(uint8_t)))
	{
	  printf("\nError reading global varname entry name field");
	  return(0);
	}
      
      printf("\nvarname='%s'", varname);

      length_read += len;

      // read type and addr

      if(!read_item((void *)&vartype, 1, sizeof(NOBJ_VARTYPE)))
	{
	  printf("\nError reading global varname entry type field");
	  return(0);
	}

      if(!read_item((void *)&varaddr, 1, sizeof(NOBJ_VARADDR)))
	{
	  printf("\nError reading global varname entry addr field");
	  return(0);
	}

      printf("\nVarname type=%02X", vartype);
      printf("\nVaraddr addr=%02X", varaddr);
      length_read += 3;
      printf("\nLength read:%d out of %d", length_read, global_varname_size.size);

      // Add variable to list of globals
      
    }
 while (length_read < global_varname_size.size );
}
